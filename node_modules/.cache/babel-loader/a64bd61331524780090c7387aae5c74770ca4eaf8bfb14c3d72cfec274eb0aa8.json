{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\components\\\\Movies\\\\Movie.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from '../Planets/Planet.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = props => {\n  _s();\n  const [movieData, setMovieData] = useState({\n    characters: [],\n    planets: [],\n    starships: [],\n    vehicles: [],\n    species: []\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleString(); // You can customize the format as needed\n  };\n\n  const fetchData = async (urlArray, dataKey) => {\n    try {\n      const dataArray = await Promise.all(urlArray.map(async url => {\n        const response = await fetch(url);\n        const data = await response.json();\n        return data.name; // Adjust the property you want to display\n      }));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        setIsLoading(true);\n        await fetchData(props.characters, 'characters');\n        await fetchData(props.planets, 'planets');\n        await fetchData(props.starships, 'starships');\n        await fetchData(props.vehicles, 'vehicles');\n        await fetchData(props.species, 'species');\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    fetchMovieData();\n  }, [props.characters, props.planets, props.starships, props.vehicles, props.species]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.planet,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Star Wars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.title, \" Episode: \", props.episodeNum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.releaseDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.openingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Director: \", props.director]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Producer: \", props.producer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created: \", formatTimestamp(props.created)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Edited: \", formatTimestamp(props.edited)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Movie, \"CdCNdYomfFQJyrsY3slHk2qKYmk=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","Movie","props","_s","movieData","setMovieData","characters","planets","starships","vehicles","species","isLoading","setIsLoading","error","setError","formatTimestamp","timestamp","date","Date","toLocaleString","fetchData","urlArray","dataKey","dataArray","Promise","all","map","url","response","fetch","data","json","name","message","fetchMovieData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","planet","title","episodeNum","releaseDate","openingText","director","producer","created","edited","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/components/Movies/Movie.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport styles from '../Planets/Planet.module.css';\n\nconst Movie = (props) => {\n  const [movieData, setMovieData] = useState({\n    characters: [],\n    planets: [],\n    starships: [],\n    vehicles: [],\n    species: [],\n  });\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleString(); // You can customize the format as needed\n  };\n\n  const fetchData = async (urlArray, dataKey) => {\n    try {\n      const dataArray = await Promise.all(urlArray.map(async (url) => {\n        const response = await fetch(url);\n        const data = await response.json();\n        return data.name; // Adjust the property you want to display\n      }));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        setIsLoading(true);\n        await fetchData(props.characters, 'characters');\n        await fetchData(props.planets, 'planets');\n        await fetchData(props.starships, 'starships');\n        await fetchData(props.vehicles, 'vehicles');\n        await fetchData(props.species, 'species');\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieData();\n  }, [props.characters, props.planets, props.starships, props.vehicles, props.species]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className={styles.planet}>\n      <h1>Star Wars</h1>\n      <p>{props.title} Episode: {props.episodeNum}</p>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n\n      {/* Render other movie details here */}\n      <p>Director: {props.director}</p>\n      <p>Producer: {props.producer}</p>\n\n      <p>Created: {formatTimestamp(props.created)}</p>\n      <p>Edited: {formatTimestamp(props.edited)}</p>\n      <p>{props.url}</p>\n      {/* Add similar sections for starships, vehicles, species, created, edited, url, etc. */}\n    </div>\n  );\n};\n\nexport default Movie;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}