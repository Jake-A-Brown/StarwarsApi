{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Movie\\\\MoviePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MoviePage.css';\nimport MovieImage from './MovieImage';\nimport Loader from '../../components/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviePage = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isFetch, setIsFetch] = useState(true);\n  const [characterDetails, setCharacterDetails] = useState({});\n  const handleMovies = async () => {\n    try {\n      setLoading(true);\n      setIsFetch(false);\n      const response = await fetch('https://swapi.dev/api/films/');\n      const data = await response.json();\n      setMovies(data.results);\n\n      // Fetch character details after movies are loaded\n      await fetchCharacterDetails(data.results);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n      setLoading(false);\n    }\n  };\n  const fetchCharacterDetails = async movies => {\n    try {\n      const characterDetailsMap = {};\n\n      // Loop through movies to get characters\n      for (const movie of movies) {\n        const characterPromises = movie.characters.map(async url => {\n          const response = await fetch(url);\n          return response.json();\n        });\n        const characters = await Promise.all(characterPromises);\n        characters.forEach(character => {\n          characterDetailsMap[character.url] = character;\n        });\n      }\n      setCharacterDetails(characterDetailsMap);\n    } catch (error) {\n      console.error('Error fetching character details:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviepage-container\",\n    children: [isFetch && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMovies,\n      children: \"Motion Picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: movies.map(result => {\n        const movieInfo = MovieImage.find(movie => movie.title === result.title);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Star Wars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [result.title, \" Episode \", result.episode_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movieInfo ? movieInfo.movieImageSrc : '',\n            alt: result.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Release Date: \", result.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Director: \", result.director]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Producer: \", result.producer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: result.opening_crawl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Characters:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), result.characters && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: result.characters.map(characterURL => {\n              var _characterDetails$cha, _characterDetails$cha2;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: (_characterDetails$cha2 = characterDetails[characterURL]) === null || _characterDetails$cha2 === void 0 ? void 0 : _characterDetails$cha2.name\n              }, (_characterDetails$cha = characterDetails[characterURL]) === null || _characterDetails$cha === void 0 ? void 0 : _characterDetails$cha.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, result.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 48\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviePage, \"fFIAwjpRTo5AWlo7/ijyAqyZazY=\");\n_c = MoviePage;\nexport default MoviePage;\nvar _c;\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["React","useState","MovieImage","Loader","jsxDEV","_jsxDEV","MoviePage","_s","movies","setMovies","loading","setLoading","isFetch","setIsFetch","characterDetails","setCharacterDetails","handleMovies","response","fetch","data","json","results","fetchCharacterDetails","error","console","characterDetailsMap","movie","characterPromises","characters","map","url","Promise","all","forEach","character","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","result","movieInfo","find","title","episode_id","src","movieImageSrc","alt","release_date","director","producer","opening_crawl","characterURL","_characterDetails$cha","_characterDetails$cha2","name","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Movie/MoviePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './MoviePage.css';\r\nimport MovieImage from './MovieImage';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nconst MoviePage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isFetch, setIsFetch] = useState(true);\r\n  const [characterDetails, setCharacterDetails] = useState({});\r\n\r\n  const handleMovies = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setIsFetch(false);\r\n\r\n      const response = await fetch('https://swapi.dev/api/films/');\r\n      const data = await response.json();\r\n\r\n      setMovies(data.results);\r\n\r\n      // Fetch character details after movies are loaded\r\n      await fetchCharacterDetails(data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching movies:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchCharacterDetails = async (movies) => {\r\n    try {\r\n      const characterDetailsMap = {};\r\n\r\n      // Loop through movies to get characters\r\n      for (const movie of movies) {\r\n        const characterPromises = movie.characters.map(async (url) => {\r\n          const response = await fetch(url);\r\n          return response.json();\r\n        });\r\n\r\n        const characters = await Promise.all(characterPromises);\r\n\r\n        characters.forEach((character) => {\r\n          characterDetailsMap[character.url] = character;\r\n        });\r\n      }\r\n\r\n      setCharacterDetails(characterDetailsMap);\r\n    } catch (error) {\r\n      console.error('Error fetching character details:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='moviepage-container'>\r\n      {isFetch && <button onClick={handleMovies}>Motion Picture</button>}\r\n\r\n      <div className='movies-container'>\r\n        {movies.map((result) => {\r\n          const movieInfo = MovieImage.find((movie) => movie.title === result.title);\r\n\r\n          return (\r\n            <div className='movie-items' key={result.title}>\r\n              <h4>Star Wars</h4>\r\n              <h4>\r\n                {result.title} Episode {result.episode_id}\r\n              </h4>\r\n              <img src={movieInfo ? movieInfo.movieImageSrc : ''} alt={result.title} />\r\n              <div>Release Date: {result.release_date}</div>\r\n              <div>Director: {result.director}</div>\r\n              <div>Producer: {result.producer}</div>\r\n              <p>{result.opening_crawl}</p>\r\n\r\n              <h5>Characters:</h5>\r\n              {result.characters && (\r\n                <ul>\r\n                  {result.characters.map((characterURL) => (\r\n                    <li key={characterDetails[characterURL]?.name}>\r\n                      {characterDetails[characterURL]?.name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div>\r\n        {/**\r\n         * Additional information about species, planets, vehicles, and starships can be fetched and displayed here.\r\n         */}\r\n      </div>\r\n\r\n      {loading && <div className='loading-bar'><Loader />.</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}