{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Home\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\nimport starwarslogo from \"./Star_Wars_Logo.svg.png\";\nimport PeopleImage from \"../People/PeopleImage\";\nimport SpeciesImage from '../Species/SpeciesImage';\nimport PlanetImage from \"../Planet/PlanetImage\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Function to handle the search logic and API request\n  const handleSearch = async (input, category) => {\n    try {\n      setLoading(true);\n      if (!category) {\n        console.error('Please select a category.');\n        return;\n      }\n      // Make your API request here using 'input' and 'category'\n      // For example, you can use the fetch function:\n      const response = await fetch(`https://swapi.dev/api/${category}/?search=${input}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setSearchResults(data.results);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"star-wars-logo\",\n      src: starwarslogo,\n      alt: \"star wars logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-items\",\n            children: [result.name, result.title]\n          }, result.url, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: result.opening_crawl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"dlvkwQGMf+bZSgImIsMlyWJtbXs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Link","SearchBar","starwarslogo","PeopleImage","SpeciesImage","PlanetImage","Loader","jsxDEV","_jsxDEV","Home","_s","searchResults","setSearchResults","loading","setLoading","handleSearch","input","category","console","error","response","fetch","ok","Error","data","json","results","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","map","result","index","name","title","url","opening_crawl","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Home/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\r\nimport starwarslogo from \"./Star_Wars_Logo.svg.png\";\r\nimport PeopleImage from \"../People/PeopleImage\";\r\nimport SpeciesImage from '../Species/SpeciesImage';\r\nimport PlanetImage from \"../Planet/PlanetImage\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nconst Home = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  // Function to handle the search logic and API request\r\n  const handleSearch = async (input, category) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      if (!category) {\r\n        console.error('Please select a category.');\r\n        return;\r\n      }\r\n      // Make your API request here using 'input' and 'category'\r\n      // For example, you can use the fetch function:\r\n      const response = await fetch(\r\n        `https://swapi.dev/api/${category}/?search=${input}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setSearchResults(data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n\r\n      <img className=\"star-wars-logo\" src={starwarslogo} alt=\"star wars logo\" />\r\n\r\n      <div className=\"search-bar-container\">\r\n        <SearchBar onSearch={handleSearch} />\r\n      </div>\r\n\r\n      <div className=\"search-results\">\r\n\r\n        <div>\r\n\r\n          {searchResults.map((result, index) => (\r\n\r\n            \r\n            <div className=\"result-items\" key={index}>\r\n            \r\n              <div className=\"search-items\" key={result.url}>\r\n                  {result.name}\r\n                  {result.title}\r\n              </div>\r\n            \r\n              <p>{result.opening_crawl}</p>\r\n            </div>\r\n\r\n          ))}\r\n        </div>\r\n\r\n      </div>\r\n\r\n      {loading && <div className='loading-bar'><Loader/></div>}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}