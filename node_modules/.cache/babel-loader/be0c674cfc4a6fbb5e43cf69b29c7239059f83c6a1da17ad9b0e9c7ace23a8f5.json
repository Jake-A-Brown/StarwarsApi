{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\01-starting-project\\\\01-starting-project\\\\src\\\\pages\\\\PlanetPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport PlanetList from \"../components/Planets/PlanetList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanetPage = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [nextPageUrl, setNextPageUrl] = useState('https://swapi.dev/api/planets');\n  const [previousPageUrl, setPreviousPageUrl] = useState('');\n  const fetchPlanetsHandler = useCallback(async url => {\n    const response = await fetch(url);\n    const data = await response.json();\n    const transformedPlanets = data.results.map(planetData => {\n      return {\n        id: planetData.name,\n        climate: planetData.climate,\n        terrain: planetData.terrain,\n        population: planetData.population,\n        diameter: planetData.diameter,\n        gravity: planetData.gravity,\n        rotationPeriod: planetData.rotation_period,\n        orbitalPeriod: planetData.orbital_period,\n        surfaceWater: planetData.surface_water,\n        residents: planetData.residents,\n        films: planetData.films,\n        created: planetData.created,\n        edited: planetData.edited,\n        url: planetData.url\n      };\n    });\n    setPlanets(transformedPlanets);\n    setNextPageUrl(data.next);\n  }, []);\n  const nextPageHandler = () => {\n    if (nextPageUrl) {\n      setCurrentPage(prevPage => prevPage + 1);\n      fetchPlanetsHandler(nextPageUrl);\n    }\n  };\n  const backPageHandler = () => {\n    if (previousPageUrl) {\n      setCurrentPage(prevPage => prevPage - 1);\n      fetchPlanetsHandler(previousPageUrl);\n    }\n  };\n  const calculateTotalPages = () => {\n    // The total number of planets available in the API response\n    const totalPlanets = planets.length > 0 ? planets[0].totalPlanets : 0;\n    return Math.ceil(totalPlanets / planetsPerPage);\n  };\n  const totalPages = calculateTotalPages();\n\n  // Calculate the range of planets to display based on current page and planets per page\n  const startIndex = currentPage * planetsPerPage;\n  const endIndex = startIndex + planetsPerPage;\n  const displayedPlanets = planets.slice(startIndex, endIndex);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Page \", currentPage + 1, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(PlanetList, {\n        planets: displayedPlanets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanetPage, \"ip/slhr92dzuu2NWrtVp4Qu+Qto=\");\n_c = PlanetPage;\nexport default PlanetPage;\nvar _c;\n$RefreshReg$(_c, \"PlanetPage\");","map":{"version":3,"names":["React","useState","useCallback","PlanetList","jsxDEV","_jsxDEV","PlanetPage","_s","planets","setPlanets","currentPage","setCurrentPage","nextPageUrl","setNextPageUrl","previousPageUrl","setPreviousPageUrl","fetchPlanetsHandler","url","response","fetch","data","json","transformedPlanets","results","map","planetData","id","name","climate","terrain","population","diameter","gravity","rotationPeriod","rotation_period","orbitalPeriod","orbital_period","surfaceWater","surface_water","residents","films","created","edited","next","nextPageHandler","prevPage","backPageHandler","calculateTotalPages","totalPlanets","length","Math","ceil","planetsPerPage","totalPages","startIndex","endIndex","displayedPlanets","slice","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/01-starting-project/01-starting-project/src/pages/PlanetPage.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useCallback } from \"react\";\r\nimport PlanetList from \"../components/Planets/PlanetList\";\r\n\r\nconst PlanetPage = () => {\r\n  const [planets, setPlanets] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [nextPageUrl, setNextPageUrl] = useState('https://swapi.dev/api/planets');\r\n  const [previousPageUrl, setPreviousPageUrl] = useState('');\r\n\r\n  const fetchPlanetsHandler = useCallback(async (url) => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    const transformedPlanets = data.results.map((planetData) => {\r\n      return {\r\n        id: planetData.name,\r\n        climate: planetData.climate,\r\n        terrain: planetData.terrain,\r\n        population: planetData.population,\r\n        diameter: planetData.diameter,\r\n        gravity: planetData.gravity,\r\n        rotationPeriod: planetData.rotation_period,\r\n        orbitalPeriod: planetData.orbital_period,\r\n        surfaceWater: planetData.surface_water,\r\n        residents: planetData.residents,\r\n        films: planetData.films,\r\n        created: planetData.created,\r\n        edited: planetData.edited,\r\n        url: planetData.url,\r\n      };\r\n    });\r\n\r\n    setPlanets(transformedPlanets);\r\n    setNextPageUrl(data.next);\r\n  }, []);\r\n\r\n  const nextPageHandler = () => {\r\n    if (nextPageUrl) {\r\n      setCurrentPage((prevPage) => prevPage + 1);\r\n      fetchPlanetsHandler(nextPageUrl);\r\n    }\r\n  };\r\n\r\n  const backPageHandler = () => {\r\n    if (previousPageUrl) {\r\n      setCurrentPage((prevPage) => prevPage - 1);\r\n      fetchPlanetsHandler(previousPageUrl);\r\n    }\r\n  };\r\n\r\n  \r\n  const calculateTotalPages = () => {\r\n    // The total number of planets available in the API response\r\n    const totalPlanets = planets.length > 0 ? planets[0].totalPlanets : 0;\r\n    return Math.ceil(totalPlanets / planetsPerPage);\r\n  };\r\n\r\n  const totalPages = calculateTotalPages();\r\n\r\n  // Calculate the range of planets to display based on current page and planets per page\r\n  const startIndex = currentPage * planetsPerPage;\r\n  const endIndex = startIndex + planetsPerPage;\r\n  const displayedPlanets = planets.slice(startIndex, endIndex);\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n      <h2>Page {currentPage +1} of {totalPages}</h2>\r\n      </section>\r\n      <section>\r\n      <button onClick={backPageHandler} disabled={!previousPageUrl}>Back</button>\r\n        <button onClick={nextPageHandler} disabled={!nextPageUrl}>Next</button>\r\n      </section>\r\n      <section>\r\n        <PlanetList planets={displayedPlanets}  />\r\n      </section>\r\n      <section>\r\n      <button onClick={backPageHandler} disabled={!previousPageUrl}>Back</button>\r\n        <button onClick={nextPageHandler} disabled={!nextPageUrl}>Next</button>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlanetPage;\r\n\r\n\r\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,UAAU,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,+BAA+B,CAAC;EAC/E,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMe,mBAAmB,GAAGd,WAAW,CAAC,MAAOe,GAAG,IAAK;IACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,MAAMC,kBAAkB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,UAAU,IAAK;MAC1D,OAAO;QACLC,EAAE,EAAED,UAAU,CAACE,IAAI;QACnBC,OAAO,EAAEH,UAAU,CAACG,OAAO;QAC3BC,OAAO,EAAEJ,UAAU,CAACI,OAAO;QAC3BC,UAAU,EAAEL,UAAU,CAACK,UAAU;QACjCC,QAAQ,EAAEN,UAAU,CAACM,QAAQ;QAC7BC,OAAO,EAAEP,UAAU,CAACO,OAAO;QAC3BC,cAAc,EAAER,UAAU,CAACS,eAAe;QAC1CC,aAAa,EAAEV,UAAU,CAACW,cAAc;QACxCC,YAAY,EAAEZ,UAAU,CAACa,aAAa;QACtCC,SAAS,EAAEd,UAAU,CAACc,SAAS;QAC/BC,KAAK,EAAEf,UAAU,CAACe,KAAK;QACvBC,OAAO,EAAEhB,UAAU,CAACgB,OAAO;QAC3BC,MAAM,EAAEjB,UAAU,CAACiB,MAAM;QACzBzB,GAAG,EAAEQ,UAAU,CAACR;MAClB,CAAC;IACH,CAAC,CAAC;IAEFR,UAAU,CAACa,kBAAkB,CAAC;IAC9BT,cAAc,CAACO,IAAI,CAACuB,IAAI,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIhC,WAAW,EAAE;MACfD,cAAc,CAAEkC,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MAC1C7B,mBAAmB,CAACJ,WAAW,CAAC;IAClC;EACF,CAAC;EAED,MAAMkC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIhC,eAAe,EAAE;MACnBH,cAAc,CAAEkC,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MAC1C7B,mBAAmB,CAACF,eAAe,CAAC;IACtC;EACF,CAAC;EAGD,MAAMiC,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA,MAAMC,YAAY,GAAGxC,OAAO,CAACyC,MAAM,GAAG,CAAC,GAAGzC,OAAO,CAAC,CAAC,CAAC,CAACwC,YAAY,GAAG,CAAC;IACrE,OAAOE,IAAI,CAACC,IAAI,CAACH,YAAY,GAAGI,cAAc,CAAC;EACjD,CAAC;EAED,MAAMC,UAAU,GAAGN,mBAAmB,CAAC,CAAC;;EAExC;EACA,MAAMO,UAAU,GAAG5C,WAAW,GAAG0C,cAAc;EAC/C,MAAMG,QAAQ,GAAGD,UAAU,GAAGF,cAAc;EAC5C,MAAMI,gBAAgB,GAAGhD,OAAO,CAACiD,KAAK,CAACH,UAAU,EAAEC,QAAQ,CAAC;EAC5D,oBACElD,OAAA,CAACL,KAAK,CAAC0D,QAAQ;IAAAC,QAAA,gBACbtD,OAAA;MAAAsD,QAAA,eACAtD,OAAA;QAAAsD,QAAA,GAAI,OAAK,EAACjD,WAAW,GAAE,CAAC,EAAC,MAAI,EAAC2C,UAAU;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACV1D,OAAA;MAAAsD,QAAA,gBACAtD,OAAA;QAAQ2D,OAAO,EAAElB,eAAgB;QAACmB,QAAQ,EAAE,CAACnD,eAAgB;QAAA6C,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzE1D,OAAA;QAAQ2D,OAAO,EAAEpB,eAAgB;QAACqB,QAAQ,EAAE,CAACrD,WAAY;QAAA+C,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eACV1D,OAAA;MAAAsD,QAAA,eACEtD,OAAA,CAACF,UAAU;QAACK,OAAO,EAAEgD;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACV1D,OAAA;MAAAsD,QAAA,gBACAtD,OAAA;QAAQ2D,OAAO,EAAElB,eAAgB;QAACmB,QAAQ,EAAE,CAACnD,eAAgB;QAAA6C,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzE1D,OAAA;QAAQ2D,OAAO,EAAEpB,eAAgB;QAACqB,QAAQ,EAAE,CAACrD,WAAY;QAAA+C,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB,CAAC;AAACxD,EAAA,CA9EID,UAAU;AAAA4D,EAAA,GAAV5D,UAAU;AAgFhB,eAAeA,UAAU;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}