{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\components\\\\Loader\\\\Loader.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loader = () => {\n  _s();\n  const [loadingDots, setLoadingDots] = useState(\".\");\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setLoadingDots(prevDots => {\n        if (prevDots === \"...\") {\n          return \".\";\n        } else {\n          return prevDots + \".\";\n        }\n      });\n    }, 500);\n    return () => clearInterval(intervalId);\n  }, []); // Run this effect only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ls-particles ls-part-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ls-particles ls-part-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ls-particles ls-part-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ls-particles ls-part-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ls-particles ls-part-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lightsaber ls-left ls-green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lightsaber ls-right ls-red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loadingdots\",\n        children: [\"Loading\", loadingDots]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Loader, \"qeribdgUt92NXSobazri3bgHd4s=\");\n_c = Loader;\nexport default Loader;\nvar _c;\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Loader","_s","loadingDots","setLoadingDots","intervalId","setInterval","prevDots","clearInterval","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/components/Loader/Loader.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nconst Loader = () => {\r\n  const [loadingDots, setLoadingDots] = useState(\".\");\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setLoadingDots((prevDots) => {\r\n        if (prevDots === \"...\") {\r\n          return \".\";\r\n        } else {\r\n          return prevDots + \".\";\r\n        }\r\n      });\r\n    }, 500);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []); // Run this effect only once on component mount\r\n\r\n  return (\r\n    <div>\r\n    <div id=\"loader\">\r\n      <div className=\"ls-particles ls-part-1\"></div>\r\n      <div className=\"ls-particles ls-part-2\"></div>\r\n      <div className=\"ls-particles ls-part-3\"></div>\r\n      <div className=\"ls-particles ls-part-4\"></div>\r\n      <div className=\"ls-particles ls-part-5\"></div>\r\n      <div className=\"lightsaber ls-left ls-green\"></div>\r\n      <div className=\"lightsaber ls-right ls-red\"></div>\r\n      <div className=\"loadingdots\">Loading{loadingDots}</div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,GAAG,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCF,cAAc,CAAEG,QAAQ,IAAK;QAC3B,IAAIA,QAAQ,KAAK,KAAK,EAAE;UACtB,OAAO,GAAG;QACZ,CAAC,MAAM;UACL,OAAOA,QAAQ,GAAG,GAAG;QACvB;MACF,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMC,aAAa,CAACH,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAS,QAAA,eACAT,OAAA;MAAKU,EAAE,EAAC,QAAQ;MAAAD,QAAA,gBACdT,OAAA;QAAKW,SAAS,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9Cf,OAAA;QAAKW,SAAS,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9Cf,OAAA;QAAKW,SAAS,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9Cf,OAAA;QAAKW,SAAS,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9Cf,OAAA;QAAKW,SAAS,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9Cf,OAAA;QAAKW,SAAS,EAAC;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnDf,OAAA;QAAKW,SAAS,EAAC;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClDf,OAAA;QAAKW,SAAS,EAAC,aAAa;QAAAF,QAAA,GAAC,SAAO,EAACN,WAAW;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACb,EAAA,CA/BID,MAAM;AAAAe,EAAA,GAANf,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}