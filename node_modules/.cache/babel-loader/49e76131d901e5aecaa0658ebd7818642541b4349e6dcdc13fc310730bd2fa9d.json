{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Planet\\\\PlanetPage.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport PlanetImage from \"./PlanetImage\";\nimport './Planets.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  const [nextPageUrl, setNextPageUrl] = useState(\"https://swapi.dev/api/planets\");\n  const [previousPageUrl, setPreviousPageUrl] = useState(\"https://swapi.dev/api/planets\");\n  const handlePlanets = useCallback(async url => {\n    const response = await fetch(url);\n    const data = await response.json();\n    setPlanets(data.results);\n    setNextPageUrl(data.next);\n    setPreviousPageUrl(data.previous);\n  }, []);\n  const nextPageHandler = () => {\n    if (nextPageUrl) {\n      handlePlanets(nextPageUrl);\n    }\n  };\n  const backPageHandler = () => {\n    if (previousPageUrl) {\n      handlePlanets(previousPageUrl);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planets-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Planet Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), planets.map(result => {\n      const planetInfo = PlanetImage.find(planet => planet.name === result.name);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planets-result-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planets-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Name: \", result.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: planetInfo ? planetInfo.imageSrc : '',\n            alt: result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rotation Period: \", result.rotation_period]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Orbital Period: \", result.orbital_period]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Diameter: \", result.diameter]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Climate: \", result.climate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Gravity: \", result.gravity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Terrain: \", result.terrain]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Surface Water: \", result.surface_water]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Population: \", result.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Created\", result.created]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Edited\", result.edited]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"URL: \", result.url]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, result.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Planets, \"u5qlH/kWpmREi0YYXclz80KV3xg=\");\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["React","useCallback","useState","PlanetImage","jsxDEV","_jsxDEV","Planets","_s","planets","setPlanets","nextPageUrl","setNextPageUrl","previousPageUrl","setPreviousPageUrl","handlePlanets","url","response","fetch","data","json","results","next","previous","nextPageHandler","backPageHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","result","planetInfo","find","planet","name","src","imageSrc","alt","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","created","edited","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Planet/PlanetPage.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\n\r\nimport PlanetImage from \"./PlanetImage\";\r\n\r\nimport './Planets.css';\r\n\r\n\r\nconst Planets = () => {\r\n  const [planets, setPlanets] = useState([]);\r\n  const [nextPageUrl, setNextPageUrl] = useState(\"https://swapi.dev/api/planets\");\r\n  const [previousPageUrl, setPreviousPageUrl] = useState(\"https://swapi.dev/api/planets\");\r\n\r\n  const handlePlanets = useCallback(async (url) => {\r\n\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    setPlanets(data.results);\r\n    setNextPageUrl(data.next);\r\n    setPreviousPageUrl(data.previous);\r\n  }, []);\r\n\r\n  const nextPageHandler = () => {\r\n    if (nextPageUrl) {\r\n      handlePlanets(nextPageUrl);\r\n    }\r\n  };\r\n\r\n  const backPageHandler = () => {\r\n    if (previousPageUrl) {\r\n      handlePlanets(previousPageUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"planets-container\">\r\n      <h4>Planet Page</h4>\r\n        <div>\r\n          <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n            Back\r\n          </button>\r\n          <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      {planets.map((result) => {\r\n        const planetInfo = PlanetImage.find((planet) => planet.name === result.name);\r\n        return (\r\n          <div key={result.name} className=\"planets-result-container\">\r\n            <div className=\"planets-items\">\r\n              <h2>Name: {result.name}</h2>\r\n              <img src={planetInfo ? planetInfo.imageSrc : ''} alt={result.name} />\r\n              <p>Rotation Period: {result.rotation_period}</p>\r\n              <p>Orbital Period: {result.orbital_period}</p>\r\n              <p>Diameter: {result.diameter}</p>\r\n              <p>Climate: {result.climate}</p>\r\n              <p>Gravity: {result.gravity}</p>\r\n              <p>Terrain: {result.terrain}</p>\r\n              <p>Surface Water: {result.surface_water}</p>\r\n              <p>Population: {result.population}</p>\r\n              <h5>Created{result.created}</h5>\r\n              <h5>Edited{result.edited}</h5>\r\n              <h5>URL: {result.url}</h5>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      <div>\r\n      <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n        Back\r\n      </button>\r\n      <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n        Next\r\n      </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Planets;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}