{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Starships\\\\StarshipsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarshipsPage = () => {\n  _s();\n  const [starships, setStarships] = useState([]);\n  const [nextPageUrl, setNextPageUrl] = useState(\"https://swapi.dev/api/starships\");\n  const [previousPageUrl, setPreviousPageUrl] = useState(\"https://swapi.dev/api/starships\");\n  const handleStarships = useCallback(async url => {\n    const response = await fetch(`https://swapi.dev/api/starships`);\n    const data = await response.json();\n    setStarships(data.results);\n    setNextPageUrl(data.next);\n    setPreviousPageUrl(data.previous);\n  }, []);\n  const nextPageHandler = () => {\n    if (nextPageUrl) {\n      handleStarships(nextPageUrl);\n    }\n  };\n  const backPageHandler = () => {\n    if (previousPageUrl) {\n      handleStarships(previousPageUrl);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Starships Page\", starships.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: result.name\n    }, result.url, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: backPageHandler,\n      disabled: !previousPageUrl,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextPageHandler,\n      disabled: !nextPageUrl,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(StarshipsPage, \"UoEvxLJh2NDCjgEqsJk8cSzeHvA=\");\n_c = StarshipsPage;\nexport default StarshipsPage;\nvar _c;\n$RefreshReg$(_c, \"StarshipsPage\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","StarshipsPage","_s","starships","setStarships","nextPageUrl","setNextPageUrl","previousPageUrl","setPreviousPageUrl","handleStarships","url","response","fetch","data","json","results","next","previous","nextPageHandler","backPageHandler","children","map","result","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Starships/StarshipsPage.js"],"sourcesContent":["import React, {useState, useCallback} from 'react';\r\n\r\nconst StarshipsPage = () => {\r\n    const [starships, setStarships] = useState([]);\r\n    const [nextPageUrl, setNextPageUrl] = useState(\"https://swapi.dev/api/starships\");\r\n    const [previousPageUrl, setPreviousPageUrl] = useState(\"https://swapi.dev/api/starships\");\r\n\r\n    const handleStarships = useCallback(async(url)=>{\r\n\r\n        const response = await fetch(`https://swapi.dev/api/starships`);\r\n          const data = await response.json();\r\n\r\n          setStarships(data.results);\r\n          setNextPageUrl(data.next);\r\n          setPreviousPageUrl(data.previous);\r\n    },[]);\r\n\r\n    const nextPageHandler = () => {\r\n      if (nextPageUrl) {\r\n        handleStarships(nextPageUrl);\r\n      }\r\n    };\r\n  \r\n    const backPageHandler = () => {\r\n      if (previousPageUrl) {\r\n        handleStarships(previousPageUrl);\r\n      }\r\n    };\r\n\r\n  return (\r\n    <div>Starships Page\r\n        {starships.map((result)=>(\r\n            <div key={result.url}>\r\n                {result.name}\r\n            </div>\r\n        ))}\r\n      <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n        Back\r\n      </button>\r\n      <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StarshipsPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,WAAW,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,iCAAiC,CAAC;EACjF,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,iCAAiC,CAAC;EAEzF,MAAMY,eAAe,GAAGX,WAAW,CAAC,MAAMY,GAAG,IAAG;IAE5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAgC,CAAC;IAC7D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElCV,YAAY,CAACS,IAAI,CAACE,OAAO,CAAC;IAC1BT,cAAc,CAACO,IAAI,CAACG,IAAI,CAAC;IACzBR,kBAAkB,CAACK,IAAI,CAACI,QAAQ,CAAC;EACvC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIb,WAAW,EAAE;MACfI,eAAe,CAACJ,WAAW,CAAC;IAC9B;EACF,CAAC;EAED,MAAMc,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIZ,eAAe,EAAE;MACnBE,eAAe,CAACF,eAAe,CAAC;IAClC;EACF,CAAC;EAEH,oBACEP,OAAA;IAAAoB,QAAA,GAAK,gBACD,EAACjB,SAAS,CAACkB,GAAG,CAAEC,MAAM,iBAClBtB,OAAA;MAAAoB,QAAA,EACKE,MAAM,CAACC;IAAI,GADND,MAAM,CAACZ,GAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf,CACR,CAAC,eACJ3B,OAAA;MAAQ4B,OAAO,EAAET,eAAgB;MAACU,QAAQ,EAAE,CAACtB,eAAgB;MAAAa,QAAA,EAAC;IAE9D;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT3B,OAAA;MAAQ4B,OAAO,EAAEV,eAAgB;MAACW,QAAQ,EAAE,CAACxB,WAAY;MAAAe,QAAA,EAAC;IAE1D;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1CID,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}