{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Movie\\\\MoviePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./MoviePage.css\";\nimport MovieImage from \"./MovieImage\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviePage = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [characterDetails, setCharacterDetails] = useState({});\n  const [starshipDetails, setStarshipDetails] = useState({});\n  const [planetDetails, setPlanetDetails] = useState({});\n  const [vehicleDetails, setVehicleDetails] = useState({});\n  const [speciesDetails, setSpeciesDetails] = useState({});\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [isFetch, setIsFetch] = useState(true);\n  const [characterButtonClickedMap, setCharacterButtonClickedMap] = useState({});\n  const [starshipButtonClickedMap, setStarshipButtonClickedMap] = useState({});\n  const [planetButtonClickedMap, setPlanetButtonClickedMap] = useState({});\n  const [vehicleButtonClickedMap, setVehicleButtonClickedMap] = useState({});\n  const [speciesButtonClickedMap, setSpeciesButtonClickedMap] = useState({});\n  const handleMovies = async () => {\n    try {\n      setIsFetch(false);\n      setLoading(true);\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      const data = await response.json();\n      setMovies(data.results);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching movies:\", error);\n    }\n  };\n\n  // fetch details for each button\n  const fetchPlanetDetails = async movie => {\n    try {\n      setPlanetButtonClickedMap({\n        ...planetButtonClickedMap,\n        [movie.url]: true\n      });\n      setLoading(true);\n      const planetPromises = movie.planets.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const planets = await Promise.all(planetPromises);\n      const planetDetailsMap = {};\n      planets.forEach(planet => {\n        planetDetailsMap[planet.url] = planet;\n        setLoading(false);\n      });\n      setPlanetDetails({\n        ...planetDetailsMap,\n        [movie.url]: planetDetailsMap\n      });\n    } catch (error) {\n      console.error(\"Error fetching planet details:\", error);\n    }\n  };\n  const fetchCharacterDetails = async movie => {\n    try {\n      setCharacterButtonClickedMap({\n        ...characterButtonClickedMap,\n        [movie.url]: true\n      });\n      setLoading(true);\n      const characterPromises = movie.characters.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const characters = await Promise.all(characterPromises);\n      const characterDetailsMap = {};\n      characters.forEach(character => {\n        characterDetailsMap[character.url] = character;\n        setLoading(false);\n      });\n      setCharacterDetails({\n        ...characterDetails,\n        [movie.url]: characterDetailsMap\n      });\n    } catch (error) {\n      console.error(\"Error fetching character details:\", error);\n    }\n  };\n  const fetchStarshipDetails = async movie => {\n    try {\n      setStarshipButtonClickedMap({\n        ...starshipButtonClickedMap,\n        [movie.url]: true\n      });\n      setLoading(true);\n      const starshipPromises = movie.starships.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const starships = await Promise.all(starshipPromises);\n      const starshipDetailsMap = {};\n      starships.forEach(starship => {\n        starshipDetailsMap[starship.url] = starship;\n        setLoading(false);\n      });\n      setStarshipDetails({\n        ...starshipDetails,\n        [movie.url]: starshipDetailsMap\n      });\n    } catch (error) {\n      console.error(\"Error fetching starship details:\", error);\n    }\n  };\n  const fetchVehicleDetails = async movie => {\n    try {\n      setVehicleButtonClickedMap({\n        ...vehicleButtonClickedMap,\n        [movie.url]: true\n      });\n      setLoading(true);\n      const vehiclePromises = movie.vehicles.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const vehicles = await Promise.all(vehiclePromises);\n      const vehicleDetailsMap = {};\n      vehicles.forEach(vehicle => {\n        vehicleDetailsMap[vehicle.url] = vehicle;\n        setLoading(false);\n      });\n      setVehicleDetails({\n        ...vehicleDetails,\n        [movie.url]: vehicleDetailsMap\n      });\n    } catch (error) {\n      console.error(\"Error fetching vehicles:\", error);\n    }\n  };\n  const fetchSpeciesDetails = async movie => {\n    try {\n      setSpeciesButtonClickedMap({\n        ...speciesButtonClickedMap,\n        [movie.url]: true\n      });\n      setLoading(true);\n      const speciesPromises = movie.species.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const species = await Promise.all(speciesPromises);\n      const speciesDetailsMap = {};\n      species.forEach(species => {\n        speciesDetailsMap[species.url] = species;\n        setLoading(false);\n      });\n      setSpeciesDetails({\n        ...speciesDetails,\n        [movie.url]: speciesDetailsMap\n      });\n    } catch (error) {\n      console.error(\"Error fetching species:\", error);\n    }\n  };\n\n  // button Click handlers\n  const handleCharacterButtonClick = async movie => {\n    if (!characterDetails[movie.url]) {\n      await fetchCharacterDetails(movie);\n    }\n    setSelectedMovie(movie);\n  };\n  const handleStarshipButtonClick = async movie => {\n    if (!starshipDetails[movie.url]) {\n      await fetchStarshipDetails(movie);\n    }\n    setSelectedMovie(movie);\n  };\n  const handlePlanetButtonClick = async movie => {\n    if (!planetDetails[movie.url]) {\n      await fetchPlanetDetails(movie);\n    }\n    setSelectedMovie(movie);\n  };\n  const handleVehicleButtonClick = async movie => {\n    if (!vehicleDetails[movie.url]) {\n      await fetchVehicleDetails(movie);\n    }\n    setSelectedMovie(movie);\n  };\n  const handleSpeciesButtonClick = async movie => {\n    if (!speciesDetails[movie.url]) {\n      await fetchSpeciesDetails(movie);\n    }\n    setSelectedMovie(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviepage-container\",\n    children: [isFetch && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMovies,\n      children: \"Motion Picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: movies.map(result => {\n        const movieInfo = MovieImage.find(movie => movie.title === result.title);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Star Wars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [result.title, \" Episode \", result.episode_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Release Date: \", result.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Director: \", result.director]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Producer: \", result.producer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movieInfo ? movieInfo.movieImageSrc : \"\",\n            alt: result.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: result.opening_crawl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-buttons\",\n            children: [!characterButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCharacterButtonClick(result),\n              children: \"Show Characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), !starshipButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleStarshipButtonClick(result),\n              children: \"Show Starships\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this), !planetButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePlanetButtonClick(result),\n              children: \"Show Planets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this), !vehicleButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleVehicleButtonClick(result),\n              children: \"Show Vehicles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this), !speciesButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSpeciesButtonClick(result),\n              children: \"Show Species\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), selectedMovie && selectedMovie.url === result.url && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Characters:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this), characterDetails[result.url] && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: result.characters.map(characterURL => {\n                var _characterDetails$res, _characterDetails$res2;\n                return /*#__PURE__*/_jsxDEV(\"a\", {\n                  style: {\n                    marginRight: '5px'\n                  },\n                  href: characterDetails,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: (_characterDetails$res2 = characterDetails[result.url][characterURL]) === null || _characterDetails$res2 === void 0 ? void 0 : _characterDetails$res2.name\n                }, (_characterDetails$res = characterDetails[result.url][characterURL]) === null || _characterDetails$res === void 0 ? void 0 : _characterDetails$res.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Starships:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this), starshipDetails[result.url] && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flexDirection: 'row',\n                display: 'flex'\n              },\n              children: result.starships.map(starshipURL => {\n                var _starshipDetails$resu, _starshipDetails$resu2;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginRight: '3px'\n                  },\n                  children: (_starshipDetails$resu2 = starshipDetails[result.url][starshipURL]) === null || _starshipDetails$resu2 === void 0 ? void 0 : _starshipDetails$resu2.name\n                }, (_starshipDetails$resu = starshipDetails[result.url][starshipURL]) === null || _starshipDetails$resu === void 0 ? void 0 : _starshipDetails$resu.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Planets:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this), planetDetails[result.url] && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex'\n              },\n              children: result.planets.map(planetURL => {\n                var _planetDetails$result, _planetDetails$result2;\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: (_planetDetails$result2 = planetDetails[result.url][planetURL]) === null || _planetDetails$result2 === void 0 ? void 0 : _planetDetails$result2.name\n                }, (_planetDetails$result = planetDetails[result.url][planetURL]) === null || _planetDetails$result === void 0 ? void 0 : _planetDetails$result.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 29\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Vehicles:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 21\n            }, this), vehicleDetails[result.url] && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex'\n              },\n              children: result.vehicles.map(vehicleURL => {\n                var _vehicleDetails$resul, _vehicleDetails$resul2;\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: (_vehicleDetails$resul2 = vehicleDetails[result.url][vehicleURL]) === null || _vehicleDetails$resul2 === void 0 ? void 0 : _vehicleDetails$resul2.name\n                }, (_vehicleDetails$resul = vehicleDetails[result.url][vehicleURL]) === null || _vehicleDetails$resul === void 0 ? void 0 : _vehicleDetails$resul.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 29\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Species:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 21\n            }, this), speciesDetails[result.url] && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex'\n              },\n              children: result.species.map(speciesURL => {\n                var _speciesDetails$resul, _speciesDetails$resul2;\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: (_speciesDetails$resul2 = speciesDetails[result.url][speciesURL]) === null || _speciesDetails$resul2 === void 0 ? void 0 : _speciesDetails$resul2.name\n                }, (_speciesDetails$resul = speciesDetails[result.url][speciesURL]) === null || _speciesDetails$resul === void 0 ? void 0 : _speciesDetails$resul.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 29\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this)]\n        }, result.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviePage, \"cCLKfvETjV2H61lS7FWqwpvVBoE=\");\n_c = MoviePage;\nexport default MoviePage;\nvar _c;\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["React","useState","MovieImage","Loader","jsxDEV","_jsxDEV","MoviePage","_s","movies","setMovies","loading","setLoading","characterDetails","setCharacterDetails","starshipDetails","setStarshipDetails","planetDetails","setPlanetDetails","vehicleDetails","setVehicleDetails","speciesDetails","setSpeciesDetails","selectedMovie","setSelectedMovie","isFetch","setIsFetch","characterButtonClickedMap","setCharacterButtonClickedMap","starshipButtonClickedMap","setStarshipButtonClickedMap","planetButtonClickedMap","setPlanetButtonClickedMap","vehicleButtonClickedMap","setVehicleButtonClickedMap","speciesButtonClickedMap","setSpeciesButtonClickedMap","handleMovies","response","fetch","data","json","results","error","console","fetchPlanetDetails","movie","url","planetPromises","planets","map","Promise","all","planetDetailsMap","forEach","planet","fetchCharacterDetails","characterPromises","characters","characterDetailsMap","character","fetchStarshipDetails","starshipPromises","starships","starshipDetailsMap","starship","fetchVehicleDetails","vehiclePromises","vehicles","vehicleDetailsMap","vehicle","fetchSpeciesDetails","speciesPromises","species","speciesDetailsMap","handleCharacterButtonClick","handleStarshipButtonClick","handlePlanetButtonClick","handleVehicleButtonClick","handleSpeciesButtonClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","result","movieInfo","find","title","episode_id","release_date","director","producer","src","movieImageSrc","alt","opening_crawl","characterURL","_characterDetails$res","_characterDetails$res2","style","marginRight","href","target","rel","name","flexDirection","display","starshipURL","_starshipDetails$resu","_starshipDetails$resu2","planetURL","_planetDetails$result","_planetDetails$result2","vehicleURL","_vehicleDetails$resul","_vehicleDetails$resul2","speciesURL","_speciesDetails$resul","_speciesDetails$resul2","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Movie/MoviePage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./MoviePage.css\";\r\nimport MovieImage from \"./MovieImage\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nconst MoviePage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [characterDetails, setCharacterDetails] = useState({});\r\n  const [starshipDetails, setStarshipDetails] = useState({});\r\n  const [planetDetails, setPlanetDetails] = useState({});\r\n  const [vehicleDetails, setVehicleDetails] = useState({});\r\n  const [speciesDetails, setSpeciesDetails] = useState({});\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [isFetch, setIsFetch] = useState(true);\r\n  const [characterButtonClickedMap, setCharacterButtonClickedMap] = useState({});\r\n  const [starshipButtonClickedMap, setStarshipButtonClickedMap] = useState({});\r\n  const [planetButtonClickedMap, setPlanetButtonClickedMap] = useState({});\r\n  const [vehicleButtonClickedMap, setVehicleButtonClickedMap] = useState({});\r\n  const [speciesButtonClickedMap, setSpeciesButtonClickedMap] = useState({});\r\n\r\n  const handleMovies = async () => {\r\n\r\n    try {\r\n      setIsFetch(false);\r\n      setLoading(true);\r\n\r\n      const response = await fetch(\"https://swapi.dev/api/films/\");\r\n      const data = await response.json();\r\n\r\n      setMovies(data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching movies:\", error);\r\n    }\r\n  };\r\n\r\n  // fetch details for each button\r\n  const fetchPlanetDetails = async (movie) => {\r\n\r\n    try{\r\n        setPlanetButtonClickedMap({...planetButtonClickedMap, [movie.url]: true});\r\n        setLoading(true);\r\n        const planetPromises = movie.planets.map(async (url) => {\r\n            const response = await fetch(url);\r\n            return response.json();\r\n        });\r\n\r\n        const planets = await Promise.all(planetPromises);\r\n\r\n        const planetDetailsMap = {};\r\n        planets.forEach((planet) => {\r\n          planetDetailsMap[planet.url] = planet;\r\n          setLoading(false);\r\n        });\r\n\r\n        setPlanetDetails({\r\n            ...planetDetailsMap,\r\n            [movie.url]: planetDetailsMap,\r\n        });\r\n\r\n    }catch(error){console.error(\"Error fetching planet details:\", error);}\r\n  };\r\n\r\n  const fetchCharacterDetails = async (movie) => {\r\n\r\n    try {\r\n      setCharacterButtonClickedMap({ ...characterButtonClickedMap, [movie.url]: true });\r\n      setLoading(true);\r\n      const characterPromises = movie.characters.map(async (url) => {\r\n        const response = await fetch(url);\r\n        return response.json();\r\n      });\r\n\r\n      const characters = await Promise.all(characterPromises);\r\n\r\n      const characterDetailsMap = {};\r\n      characters.forEach((character) => {\r\n        characterDetailsMap[character.url] = character;\r\n        setLoading(false);\r\n      });\r\n\r\n      setCharacterDetails({\r\n        ...characterDetails,\r\n        [movie.url]: characterDetailsMap,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching character details:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchStarshipDetails = async (movie) => {\r\n\r\n    try {\r\n      setStarshipButtonClickedMap({ ...starshipButtonClickedMap, [movie.url]: true });\r\n      setLoading(true);\r\n      const starshipPromises = movie.starships.map(async (url) => {\r\n        const response = await fetch(url);\r\n        return response.json();\r\n      });\r\n\r\n      const starships = await Promise.all(starshipPromises);\r\n\r\n      const starshipDetailsMap = {};\r\n      starships.forEach((starship) => {\r\n        starshipDetailsMap[starship.url] = starship;\r\n        setLoading(false);\r\n      });\r\n\r\n      setStarshipDetails({\r\n        ...starshipDetails,\r\n        [movie.url]: starshipDetailsMap,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching starship details:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchVehicleDetails = async (movie) => {\r\n\r\n    try {\r\n        setVehicleButtonClickedMap({ ...vehicleButtonClickedMap, [movie.url]: true });\r\n        setLoading(true); \r\n        const vehiclePromises = movie.vehicles.map(async (url) => {\r\n            const response = await fetch(url);\r\n            return response.json();\r\n          });\r\n\r\n          const vehicles = await Promise.all(vehiclePromises);\r\n\r\n          const vehicleDetailsMap = {};\r\n          vehicles.forEach((vehicle) => {\r\n            vehicleDetailsMap[vehicle.url] = vehicle;\r\n            setLoading(false);\r\n          });\r\n    \r\n          setVehicleDetails({\r\n            ...vehicleDetails,\r\n            [movie.url]: vehicleDetailsMap,\r\n          });\r\n\r\n    }catch (error) {\r\n        console.error(\"Error fetching vehicles:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchSpeciesDetails = async (movie) => {\r\n\r\n    try {\r\n        setSpeciesButtonClickedMap({ ...speciesButtonClickedMap, [movie.url]: true });\r\n        setLoading(true); \r\n        const speciesPromises = movie.species.map(async (url) => {\r\n            const response = await fetch(url);\r\n            return response.json();\r\n          });\r\n\r\n          const species = await Promise.all(speciesPromises);\r\n\r\n          const speciesDetailsMap = {};\r\n          species.forEach((species) => {\r\n            speciesDetailsMap[species.url] = species;\r\n            setLoading(false);\r\n          });\r\n    \r\n          setSpeciesDetails({\r\n            ...speciesDetails,\r\n            [movie.url]: speciesDetailsMap,\r\n          });\r\n\r\n    }catch (error) {\r\n        console.error(\"Error fetching species:\", error);\r\n    }\r\n  };\r\n\r\n  // button Click handlers\r\n  const handleCharacterButtonClick = async (movie) => {\r\n    if (!characterDetails[movie.url]) {\r\n      await fetchCharacterDetails(movie);\r\n    }\r\n\r\n    setSelectedMovie(movie);\r\n  };\r\n\r\n  const handleStarshipButtonClick = async (movie) => {\r\n    if (!starshipDetails[movie.url]) {\r\n      await fetchStarshipDetails(movie);\r\n    }\r\n\r\n    setSelectedMovie(movie);\r\n  };\r\n\r\n  const handlePlanetButtonClick = async (movie) => {\r\n    if(!planetDetails[movie.url]) {\r\n        await fetchPlanetDetails(movie);\r\n    }\r\n\r\n    setSelectedMovie(movie);\r\n  };\r\n\r\n  const handleVehicleButtonClick = async (movie) => {\r\n    if(!vehicleDetails[movie.url]) {\r\n        await fetchVehicleDetails(movie);\r\n    }\r\n\r\n    setSelectedMovie(movie);\r\n  };\r\n\r\n  const handleSpeciesButtonClick = async (movie) => {\r\n    if(!speciesDetails[movie.url]) {\r\n        await fetchSpeciesDetails(movie);\r\n    }\r\n\r\n    setSelectedMovie(movie);\r\n  };\r\n\r\n  return (\r\n    <div className=\"moviepage-container\">\r\n      {isFetch && <button onClick={handleMovies}>Motion Picture</button>}\r\n      {loading && (\r\n        <div className=\"loading-bar\">\r\n          <Loader />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"movies-container\">\r\n        {movies.map((result) => {\r\n          const movieInfo = MovieImage.find(\r\n            (movie) => movie.title === result.title\r\n          );\r\n\r\n          return (\r\n            <div className=\"movie-items\" key={result.title}>\r\n              <h4>Star Wars</h4>\r\n              <h4>\r\n                {result.title} Episode {result.episode_id}\r\n              </h4>\r\n              <div>Release Date: {result.release_date}</div>\r\n              <div>Director: {result.director}</div>\r\n              <div>Producer: {result.producer}</div>\r\n              <img\r\n                src={movieInfo ? movieInfo.movieImageSrc : \"\"}\r\n                alt={result.title}\r\n              />\r\n              <p>{result.opening_crawl}</p>\r\n\r\n                {/*Buttons*/}\r\n              <div className='movie-buttons'>\r\n                {!characterButtonClickedMap[result.url] && (\r\n                  <button onClick={() => handleCharacterButtonClick(result)}>\r\n                    Show Characters\r\n                  </button>\r\n                )}\r\n                \r\n                {!starshipButtonClickedMap[result.url] && (\r\n                  <button onClick={() => handleStarshipButtonClick(result)}>\r\n                    Show Starships\r\n                  </button>\r\n                )}\r\n\r\n                {!planetButtonClickedMap[result.url] && (\r\n                  <button onClick={() => handlePlanetButtonClick(result)}>Show Planets</button>\r\n                )}\r\n\r\n                {!vehicleButtonClickedMap[result.url] && (\r\n                  <button onClick={() => handleVehicleButtonClick(result)}>Show Vehicles</button>\r\n                )}\r\n\r\n                \r\n                {!speciesButtonClickedMap[result.url] && (\r\n                  <button onClick={() => handleSpeciesButtonClick(result)}>Show Species</button>\r\n                )}\r\n              </div>\r\n\r\n              {/* display for details of each button*/}\r\n              {selectedMovie && selectedMovie.url === result.url && (\r\n                <div className=\"button-details\">\r\n                  <h3>Characters:</h3>\r\n                  {characterDetails[result.url] && (\r\n                    <div>\r\n                      {result.characters.map((characterURL) => (\r\n                        <a style={{marginRight:'5px'}} href={characterDetails} target=\"_blank\" rel=\"noreferrer\"\r\n                          key={characterDetails[result.url][characterURL]?.name}\r\n                        >\r\n                          {characterDetails[result.url][characterURL]?.name}\r\n                        </a>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n\r\n                  <h3>Starships:</h3>\r\n                  {starshipDetails[result.url] && (\r\n                    <div style={{flexDirection:'row', display: 'flex'}}>\r\n                      {result.starships.map((starshipURL) => (\r\n                        <div style={{marginRight: '3px'}}\r\n                          key={starshipDetails[result.url][starshipURL]?.name}\r\n                        >\r\n                          {starshipDetails[result.url][starshipURL]?.name}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n\r\n                  <h3>Planets:</h3>\r\n                  {planetDetails[result.url] && (\r\n                    <div style={{display:'flex'}}>\r\n                        {result.planets.map((planetURL) =>(\r\n                            <p key={planetDetails[result.url][planetURL]?.name}>\r\n                                {planetDetails[result.url][planetURL]?.name}\r\n                            </p>\r\n                        ))}\r\n                    </div>)}\r\n\r\n                    <h3>Vehicles:</h3>\r\n                  {vehicleDetails[result.url] && (\r\n                    <div style={{display:'flex'}}>\r\n                        {result.vehicles.map((vehicleURL) =>(\r\n                            <p key={vehicleDetails[result.url][vehicleURL]?.name}>\r\n                                {vehicleDetails[result.url][vehicleURL]?.name}\r\n                            </p>\r\n                        ))}\r\n                    </div>)}\r\n\r\n                    <h3>Species:</h3>\r\n                  {speciesDetails[result.url] && (\r\n                    <div style={{display:'flex'}}>\r\n                        {result.species.map((speciesURL) =>(\r\n                            <p key={speciesDetails[result.url][speciesURL]?.name}>\r\n                                {speciesDetails[result.url][speciesURL]?.name}\r\n                            </p>\r\n                        ))}\r\n                    </div>)}\r\n                </div>\r\n\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}