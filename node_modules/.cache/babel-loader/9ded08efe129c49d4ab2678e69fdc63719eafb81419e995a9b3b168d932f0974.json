{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Movie\\\\MoviePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MoviePage.css';\nimport MovieImage from './MovieImage';\nimport Loader from '../../components/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviePage = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isFetch, setIsFetch] = useState(true);\n  const handleMovies = async () => {\n    try {\n      setLoading(true);\n      setIsFetch(false);\n      const response = await fetch('https://swapi.dev/api/films/');\n      const data = await response.json();\n\n      // Fetch character names for each film\n      const moviesWithCharacters = await Promise.all(data.results.map(async film => {\n        const characters = await Promise.all(film.characters.map(async characterUrl => {\n          const characterResponse = await fetch(characterUrl);\n          const characterData = await characterResponse.json();\n          return characterData.name;\n        }));\n        return {\n          ...film,\n          characters\n        };\n      }));\n      setMovies(moviesWithCharacters);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n  useEffect(() => {\n    // Automatically fetch movies when the component mounts\n    handleMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviepage-container\",\n    children: [isFetch && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMovies,\n      children: \"Motion Picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: movies.map(result => {\n        const movieInfo = MovieImage.find(movie => movie.title === result.title);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Star Wars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [result.title, \" Episode \", result.episode_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movieInfo ? movieInfo.movieImageSrc : '',\n            alt: result.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Release Date: \", result.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Director: \", result.director]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Producer: \", result.producer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: result.opening_crawl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Characters:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: result.characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: character\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, result.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviePage, \"uFr2UByrR7fdzMQp18ELxXGfNVc=\");\n_c = MoviePage;\nexport default MoviePage;\nvar _c;\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["React","useState","useEffect","MovieImage","Loader","jsxDEV","_jsxDEV","MoviePage","_s","movies","setMovies","loading","setLoading","isFetch","setIsFetch","handleMovies","response","fetch","data","json","moviesWithCharacters","Promise","all","results","map","film","characters","characterUrl","characterResponse","characterData","name","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","result","movieInfo","find","movie","title","episode_id","src","movieImageSrc","alt","release_date","director","producer","opening_crawl","character","index","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Movie/MoviePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MoviePage.css';\r\nimport MovieImage from './MovieImage';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nconst MoviePage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isFetch, setIsFetch] = useState(true);\r\n\r\n  const handleMovies = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setIsFetch(false);\r\n\r\n      const response = await fetch('https://swapi.dev/api/films/');\r\n      const data = await response.json();\r\n\r\n      // Fetch character names for each film\r\n      const moviesWithCharacters = await Promise.all(\r\n        data.results.map(async (film) => {\r\n          const characters = await Promise.all(\r\n            film.characters.map(async (characterUrl) => {\r\n              const characterResponse = await fetch(characterUrl);\r\n              const characterData = await characterResponse.json();\r\n              return characterData.name;\r\n            })\r\n          );\r\n\r\n          return { ...film, characters };\r\n        })\r\n      );\r\n\r\n      setMovies(moviesWithCharacters);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching movies:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Automatically fetch movies when the component mounts\r\n    handleMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='moviepage-container'>\r\n      {isFetch && <button onClick={handleMovies}>Motion Picture</button>}\r\n      <div className='movies-container'>\r\n        {movies.map((result) => {\r\n          const movieInfo = MovieImage.find((movie) => movie.title === result.title);\r\n\r\n          return (\r\n            <div className='movie-items' key={result.title}>\r\n              <h4>Star Wars</h4>\r\n              <h4>\r\n                {result.title} Episode {result.episode_id}\r\n              </h4>\r\n              <img src={movieInfo ? movieInfo.movieImageSrc : ''} alt={result.title} />\r\n              <div>Release Date: {result.release_date}</div>\r\n              <div>Director: {result.director}</div>\r\n              <div>Producer: {result.producer}</div>\r\n              <p>{result.opening_crawl}</p>\r\n              <div>\r\n                <strong>Characters:</strong>\r\n                <ul>\r\n                  {result.characters.map((character, index) => (\r\n                    <li key={index}>{character}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {loading && <div className='loading-bar'><Loader/></div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}