{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\People\\\\PeoplePage.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport PeopleImage from \"./PeopleImage\";\nimport \"./PeoplePage.css\";\nimport Loader from \"../../components/Loader/Loader\";\n\n/** formatting time */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  const date = new Date(dateString);\n  return date.toLocaleString(); // Adjust this to your preferred date format\n};\n\nconst PeoplePage = () => {\n  _s();\n  // pagination\n  const [currentPage, setCurrentPage] = useState(0);\n  // for homeworld\n  const [people, setPeople] = useState([]);\n  const [nextPageUrl, setNextPageUrl] = useState(`https://swapi.dev/api/people/?page=`);\n  const [previousPageUrl, setPreviousPageUrl] = useState(`https://swapi.dev/api/people/?page=`);\n  const [nextBtn, setNextBtn] = useState(false);\n  const [prevBtn, setPrevBtn] = useState(false);\n  // api call for initial fetch\n  const [isFetch, setIsFetch] = useState(true);\n  // loading state\n  const [loading, setLoading] = useState(false);\n  // display UX\n  const [peopleDisplay, setPeopleDisplay] = useState(false);\n  const [pageDisplay, setPageDisplay] = useState(false);\n  // select person for each button \n  const [selectedPerson, setSelectedPerson] = useState(null);\n\n  // buttons and details for each button\n  const [filmDetails, setFilmDetails] = useState({});\n  const [filmButtonClickedMap, setFilmButtonClickedMap] = useState({});\n  const [speciesDetails, setSpeciesDetails] = useState({});\n  const [speciesButtonClickedMap, setSpeciesButtonClickedMap] = useState({});\n  const [vehicleDetails, setVehicleDetails] = useState({});\n  const [vehicleButtonClickedMap, setVehicleButtonClickedMap] = useState({});\n  const [starshipDetails, setStarshipDetails] = useState({});\n  const [starshipButtonClickedMap, setStarshipButtonClickedMap] = useState({});\n\n  //display for each button\n  const [filmDisplay, setFilmDisplay] = useState({});\n  const [speciesDisplay, setSpeciesDisplay] = useState({});\n  const [starshipDisplay, setStarshipDisplay] = useState({});\n  const [vehicleDisplay, setVehicleDisplay] = useState({});\n\n  /** api calls and GUI experience */\n  const handlePeople = useCallback(async url => {\n    try {\n      setLoading(true);\n      setIsFetch(false);\n      setPeopleDisplay(false);\n      setPageDisplay(false);\n      setNextBtn(false);\n      setPrevBtn(false);\n      const response = await fetch(url);\n      const data = await response.json();\n      setNextBtn(!!data.next);\n      setPrevBtn(!!data.previous);\n      setPeopleDisplay(true);\n      setPageDisplay(true);\n      const peopleWithHomeworld = await Promise.all(data.results.map(async person => {\n        const homeworldName = await fetchHomeworld(person.homeworld);\n        return {\n          ...person,\n          homeworldName\n        };\n      }));\n      setPeople(peopleWithHomeworld);\n      setNextPageUrl(data.next);\n      setPreviousPageUrl(data.previous);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching people:\", error);\n    }\n  }, []);\n\n  /** fetching home world info for characters */\n  const fetchHomeworld = async homeworldUrl => {\n    try {\n      const response = await fetch(homeworldUrl);\n      const homeworldData = await response.json();\n      return homeworldData.name;\n    } catch (error) {\n      console.error(\"Error fetching homeworld:\", error);\n      return \"Unknown\";\n    }\n  };\n\n  // fetch details for each button\n  const fetchFilmDetails = async people => {\n    try {\n      setLoading(true);\n      setFilmButtonClickedMap({\n        ...filmButtonClickedMap,\n        [people.url]: true\n      });\n      const filmPromises = people.films.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const films = await Promise.all(filmPromises);\n      const filmDetailsMap = {};\n      films.forEach(film => {\n        filmDetailsMap[film.url] = film;\n      });\n      setFilmDetails({\n        ...filmDetailsMap,\n        [people.url]: filmDetailsMap\n      });\n      setFilmButtonClickedMap({\n        ...filmButtonClickedMap,\n        [people.url]: false\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching film details:\", error);\n    }\n  };\n  const fetchSpeciesDetails = async people => {\n    try {\n      setLoading(true);\n      setSpeciesButtonClickedMap({\n        ...speciesButtonClickedMap,\n        [people.url]: true\n      });\n      const speciesPromises = people.species.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const species = await Promise.all(speciesPromises);\n      const speciesDetailsMap = {};\n      species.forEach(species => {\n        speciesDetailsMap[species.url] = species;\n      });\n      setSpeciesDetails({\n        ...speciesDetailsMap,\n        [people.url]: speciesDetailsMap\n      });\n      setSpeciesButtonClickedMap({\n        ...speciesButtonClickedMap,\n        [people.url]: false\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching species details:\", error);\n    }\n  };\n  const fetchVehicleDetails = async people => {\n    try {\n      setLoading(true);\n      setVehicleButtonClickedMap({\n        ...vehicleButtonClickedMap,\n        [people.url]: true\n      });\n      const vehiclesPromises = people.vehicles.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const vehicle = await Promise.all(vehiclesPromises);\n      const vehiclesDetailsMap = {};\n      vehicle.forEach(vehicles => {\n        vehiclesDetailsMap[vehicles.url] = vehicles;\n      });\n      setVehicleDetails({\n        ...vehiclesDetailsMap,\n        [people.url]: vehiclesDetailsMap\n      });\n      setVehicleButtonClickedMap({\n        ...vehicleButtonClickedMap,\n        [people.url]: false\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching vehicle details:\", error);\n    }\n  };\n  const fetchStarshipsDetails = async people => {\n    try {\n      setLoading(true);\n      setStarshipButtonClickedMap({\n        ...starshipButtonClickedMap,\n        [people.url]: true\n      });\n      const starshipPromises = people.starships.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const starship = await Promise.all(starshipPromises);\n      const starshipDetailsMap = {};\n      starship.forEach(starship => {\n        starshipDetailsMap[starship.url] = starship;\n      });\n      setStarshipDetails({\n        ...starshipDetailsMap,\n        [people.url]: starshipDetailsMap\n      });\n      setStarshipButtonClickedMap({\n        ...starshipButtonClickedMap,\n        [people.url]: false\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching starship details:\", error);\n    }\n  };\n\n  //pagination \n  const nextPageHandler = () => {\n    if (nextPageUrl) {\n      handlePeople(nextPageUrl);\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const backPageHandler = () => {\n    if (previousPageUrl) {\n      handlePeople(previousPageUrl);\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  // button Click handlers\n  const handleFilmButtonClick = async people => {\n    if (!filmDetails[people.url]) {\n      await fetchFilmDetails(people);\n    }\n    setFilmDisplay(true);\n    setStarshipDisplay(false);\n    setVehicleDisplay(false);\n    setSpeciesDisplay(false);\n    setSelectedPerson(people);\n  };\n  const handleSpeciesButtonClick = async people => {\n    if (!speciesDetails[people.url]) {\n      await fetchSpeciesDetails(people);\n    }\n    setSpeciesDisplay(true);\n    setFilmDisplay(false);\n    setStarshipDisplay(false);\n    setVehicleDisplay(false);\n    setSelectedPerson(people);\n  };\n  const handleVehicleButtonClick = async people => {\n    if (!vehicleDetails[people.url]) {\n      await fetchVehicleDetails(people);\n    }\n    setVehicleDisplay(true);\n    setFilmDisplay(false);\n    setStarshipDisplay(false);\n    setSpeciesDisplay(false);\n    setSelectedPerson(people);\n  };\n  const handleStarshipButtonClick = async people => {\n    if (!starshipDetails[people.url]) {\n      await fetchStarshipsDetails(people);\n    }\n    setStarshipDisplay(true);\n    setFilmDisplay(false);\n    setVehicleDisplay(false);\n    setSpeciesDisplay(false);\n    setSelectedPerson(people);\n  };\n\n  /** all the rendering */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"people-container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this), pageDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Page \", currentPage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 23\n    }, this), isFetch && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextPageHandler,\n      children: \"Figures of the Force\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prevBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), nextBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), peopleDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"people-grid\",\n      children: people.map(result => {\n        const peopleInfo = PeopleImage.find(people => people.name === result.name);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"people-result-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"people-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Created: \", formatDate(result.created)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Edited: \", formatDate(result.edited)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: peopleInfo.peopleImageSrc,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: peopleInfo ? peopleInfo.peopleImageSrc : \"\",\n                alt: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"HomeWorld: \", /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: `\\u0020`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 37\n                }, this), result.homeworldName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"people-description\",\n              children: peopleInfo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [!filmButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleFilmButtonClick(result),\n                children: \"Show Films\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), !speciesButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSpeciesButtonClick(result),\n                children: \"Show Species\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this), !vehicleButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleVehicleButtonClick(result),\n                children: \"Show Vehicles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 21\n              }, this), !starshipButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleStarshipButtonClick(result),\n                children: \"Show Starships\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this), selectedPerson && selectedPerson.url === result.url && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"people-button-details\",\n              children: [filmDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Films:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 23\n                }, this), filmDetails[result.url] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: result.films.map(filmURL => {\n                    var _filmDetails$result$u, _filmDetails$result$u2;\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: (_filmDetails$result$u2 = filmDetails[result.url][filmURL]) === null || _filmDetails$result$u2 === void 0 ? void 0 : _filmDetails$result$u2.title\n                    }, (_filmDetails$result$u = filmDetails[result.url][filmURL]) === null || _filmDetails$result$u === void 0 ? void 0 : _filmDetails$result$u.title, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 23\n              }, this), speciesDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Species:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 24\n                }, this), speciesDetails[result.url] && result.species.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: result.species.map(speciesURL => {\n                    var _speciesDetails$resul, _speciesDetails$resul2;\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: (_speciesDetails$resul2 = speciesDetails[result.url][speciesURL]) === null || _speciesDetails$resul2 === void 0 ? void 0 : _speciesDetails$resul2.name\n                    }, (_speciesDetails$resul = speciesDetails[result.url][speciesURL]) === null || _speciesDetails$resul === void 0 ? void 0 : _speciesDetails$resul.name, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No species information available for this character.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 27\n              }, this), vehicleDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Vehicles:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 24\n                }, this), vehicleDetails[result.url] && result.vehicles.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: result.vehicles.map(vehiclesURL => {\n                    var _vehicleDetails$resul, _vehicleDetails$resul2;\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: (_vehicleDetails$resul2 = vehicleDetails[result.url][vehiclesURL]) === null || _vehicleDetails$resul2 === void 0 ? void 0 : _vehicleDetails$resul2.name\n                    }, (_vehicleDetails$resul = vehicleDetails[result.url][vehiclesURL]) === null || _vehicleDetails$resul === void 0 ? void 0 : _vehicleDetails$resul.name, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No vehicle information available for this character.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 27\n              }, this), starshipDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Starships:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 24\n                }, this), starshipDetails[result.url] && result.starships.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: result.starships.map(starshipURL => {\n                    var _starshipDetails$resu, _starshipDetails$resu2;\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: (_starshipDetails$resu2 = starshipDetails[result.url][starshipURL]) === null || _starshipDetails$resu2 === void 0 ? void 0 : _starshipDetails$resu2.name\n                    }, (_starshipDetails$resu = starshipDetails[result.url][starshipURL]) === null || _starshipDetails$resu === void 0 ? void 0 : _starshipDetails$resu.name, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No starship information available for this character.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this)\n        }, result.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this), pageDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Page \", currentPage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prevBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this), nextBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n_s(PeoplePage, \"cVJeYOUEBqaGsIwoNKS1k1QHeiI=\");\n_c = PeoplePage;\nexport default PeoplePage;\nvar _c;\n$RefreshReg$(_c, \"PeoplePage\");","map":{"version":3,"names":["React","useCallback","useState","PeopleImage","Loader","jsxDEV","_jsxDEV","formatDate","dateString","date","Date","toLocaleString","PeoplePage","_s","currentPage","setCurrentPage","people","setPeople","nextPageUrl","setNextPageUrl","previousPageUrl","setPreviousPageUrl","nextBtn","setNextBtn","prevBtn","setPrevBtn","isFetch","setIsFetch","loading","setLoading","peopleDisplay","setPeopleDisplay","pageDisplay","setPageDisplay","selectedPerson","setSelectedPerson","filmDetails","setFilmDetails","filmButtonClickedMap","setFilmButtonClickedMap","speciesDetails","setSpeciesDetails","speciesButtonClickedMap","setSpeciesButtonClickedMap","vehicleDetails","setVehicleDetails","vehicleButtonClickedMap","setVehicleButtonClickedMap","starshipDetails","setStarshipDetails","starshipButtonClickedMap","setStarshipButtonClickedMap","filmDisplay","setFilmDisplay","speciesDisplay","setSpeciesDisplay","starshipDisplay","setStarshipDisplay","vehicleDisplay","setVehicleDisplay","handlePeople","url","response","fetch","data","json","next","previous","peopleWithHomeworld","Promise","all","results","map","person","homeworldName","fetchHomeworld","homeworld","error","console","homeworldUrl","homeworldData","name","fetchFilmDetails","filmPromises","films","filmDetailsMap","forEach","film","fetchSpeciesDetails","speciesPromises","species","speciesDetailsMap","fetchVehicleDetails","vehiclesPromises","vehicles","vehicle","vehiclesDetailsMap","fetchStarshipsDetails","starshipPromises","starships","starship","starshipDetailsMap","nextPageHandler","backPageHandler","handleFilmButtonClick","handleSpeciesButtonClick","handleVehicleButtonClick","handleStarshipButtonClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","result","peopleInfo","find","created","edited","href","peopleImageSrc","target","rel","src","alt","description","filmURL","_filmDetails$result$u","_filmDetails$result$u2","title","length","speciesURL","_speciesDetails$resul","_speciesDetails$resul2","vehiclesURL","_vehicleDetails$resul","_vehicleDetails$resul2","starshipURL","_starshipDetails$resu","_starshipDetails$resu2","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/People/PeoplePage.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport PeopleImage from \"./PeopleImage\";\r\n\r\nimport \"./PeoplePage.css\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\n/** formatting time */\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleString(); // Adjust this to your preferred date format\r\n};\r\n\r\nconst PeoplePage = () => {\r\n  // pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  // for homeworld\r\n  const [people, setPeople] = useState([]);\r\n  const [nextPageUrl, setNextPageUrl] = useState(\r\n    `https://swapi.dev/api/people/?page=`\r\n  );\r\n  const [previousPageUrl, setPreviousPageUrl] = useState(\r\n    `https://swapi.dev/api/people/?page=`\r\n  );\r\n  const [nextBtn, setNextBtn] = useState(false);\r\n  const [prevBtn, setPrevBtn] = useState(false);\r\n  // api call for initial fetch\r\n  const [isFetch, setIsFetch] = useState(true);\r\n  // loading state\r\n  const [loading, setLoading] = useState(false);\r\n  // display UX\r\n  const [peopleDisplay, setPeopleDisplay] = useState(false);\r\n  const [pageDisplay, setPageDisplay] = useState(false);\r\n  // select person for each button \r\n  const [selectedPerson, setSelectedPerson] = useState(null);\r\n\r\n  // buttons and details for each button\r\n  const [filmDetails, setFilmDetails] = useState({});\r\n  const [filmButtonClickedMap, setFilmButtonClickedMap] = useState({});\r\n  const [speciesDetails, setSpeciesDetails] = useState({});\r\n  const [speciesButtonClickedMap, setSpeciesButtonClickedMap] = useState({});\r\n  const [vehicleDetails, setVehicleDetails] = useState({});\r\n  const [vehicleButtonClickedMap, setVehicleButtonClickedMap] = useState({});\r\n  const [starshipDetails, setStarshipDetails] = useState({});\r\n  const [starshipButtonClickedMap, setStarshipButtonClickedMap] = useState({});\r\n\r\n  //display for each button\r\n  const [filmDisplay, setFilmDisplay] = useState({});\r\n  const [speciesDisplay, setSpeciesDisplay] = useState({});\r\n  const [starshipDisplay, setStarshipDisplay] = useState({});\r\n  const [vehicleDisplay, setVehicleDisplay] = useState({});\r\n\r\n  /** api calls and GUI experience */\r\n  const handlePeople = useCallback(async (url) => {\r\n    try {\r\n      setLoading(true);\r\n      setIsFetch(false);\r\n      setPeopleDisplay(false);\r\n      setPageDisplay(false);\r\n      setNextBtn(false);\r\n      setPrevBtn(false);\r\n\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      setNextBtn(!!data.next);\r\n      setPrevBtn(!!data.previous);\r\n      setPeopleDisplay(true);\r\n      setPageDisplay(true);\r\n\r\n      const peopleWithHomeworld = await Promise.all(\r\n        data.results.map(async (person) => {\r\n          const homeworldName = await fetchHomeworld(person.homeworld);\r\n\r\n          return { ...person, homeworldName };\r\n        })\r\n      );\r\n\r\n      setPeople(peopleWithHomeworld);\r\n\r\n      setNextPageUrl(data.next);\r\n      setPreviousPageUrl(data.previous);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching people:\", error);\r\n    }\r\n  }, []);\r\n\r\n  /** fetching home world info for characters */\r\n  const fetchHomeworld = async (homeworldUrl) => {\r\n    try {\r\n      const response = await fetch(homeworldUrl);\r\n      const homeworldData = await response.json();\r\n      return homeworldData.name;\r\n    } catch (error) {\r\n      console.error(\"Error fetching homeworld:\", error);\r\n      return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  // fetch details for each button\r\n  const fetchFilmDetails = async (people) => {\r\n    try {\r\n      setLoading(true);\r\n      setFilmButtonClickedMap({ ...filmButtonClickedMap, [people.url]: true });\r\n      const filmPromises = people.films.map(async (url) => {\r\n        const response = await fetch(url);\r\n        return response.json();\r\n      });\r\n\r\n      const films = await Promise.all(filmPromises);\r\n\r\n      const filmDetailsMap = {};\r\n      films.forEach((film) => {\r\n        filmDetailsMap[film.url] = film;\r\n      });\r\n\r\n      setFilmDetails({\r\n        ...filmDetailsMap,\r\n        [people.url]: filmDetailsMap,\r\n      });\r\n\r\n      setFilmButtonClickedMap({ ...filmButtonClickedMap, [people.url]: false });\r\n      setLoading(false);\r\n\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching film details:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchSpeciesDetails = async (people) => {\r\n    try {\r\n      setLoading(true);\r\n      setSpeciesButtonClickedMap({ ...speciesButtonClickedMap, [people.url]: true });\r\n      const speciesPromises = people.species.map(async (url) => {\r\n        const response = await fetch(url);\r\n        return response.json();\r\n      });\r\n\r\n      const species = await Promise.all(speciesPromises);\r\n\r\n      const speciesDetailsMap = {};\r\n      species.forEach((species) => {\r\n        speciesDetailsMap[species.url] = species;\r\n      });\r\n\r\n      setSpeciesDetails({\r\n        ...speciesDetailsMap,\r\n        [people.url]: speciesDetailsMap,\r\n      });\r\n\r\n      setSpeciesButtonClickedMap({ ...speciesButtonClickedMap, [people.url]: false });\r\n      setLoading(false);\r\n\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching species details:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchVehicleDetails = async (people) => {\r\n    try {\r\n      setLoading(true);\r\n      setVehicleButtonClickedMap({ ...vehicleButtonClickedMap, [people.url]: true });\r\n      const vehiclesPromises = people.vehicles.map(async (url) => {\r\n        const response = await fetch(url);\r\n        return response.json();\r\n      });\r\n\r\n      const vehicle = await Promise.all(vehiclesPromises);\r\n\r\n      const vehiclesDetailsMap = {};\r\n      vehicle.forEach((vehicles) => {\r\n        vehiclesDetailsMap[vehicles.url] = vehicles;\r\n      });\r\n\r\n      setVehicleDetails({\r\n        ...vehiclesDetailsMap,\r\n        [people.url]: vehiclesDetailsMap,\r\n      });\r\n\r\n      setVehicleButtonClickedMap({ ...vehicleButtonClickedMap, [people.url]: false });\r\n      setLoading(false);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching vehicle details:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchStarshipsDetails = async (people) => {\r\n    try {\r\n      setLoading(true);\r\n      setStarshipButtonClickedMap({ ...starshipButtonClickedMap, [people.url]: true });\r\n      const starshipPromises = people.starships.map(async (url) => {\r\n        const response = await fetch(url);\r\n        return response.json();\r\n      });\r\n\r\n      const starship = await Promise.all(starshipPromises);\r\n\r\n      const starshipDetailsMap = {};\r\n      starship.forEach((starship) => {\r\n        starshipDetailsMap[starship.url] = starship;\r\n      });\r\n\r\n      setStarshipDetails({\r\n        ...starshipDetailsMap,\r\n        [people.url]: starshipDetailsMap,\r\n      });\r\n\r\n      setStarshipButtonClickedMap({ ...starshipButtonClickedMap, [people.url]: false });\r\n      setLoading(false);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching starship details:\", error);\r\n    }\r\n  };\r\n\r\n  //pagination \r\n  const nextPageHandler = () => {\r\n    if (nextPageUrl) {\r\n      handlePeople(nextPageUrl);\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const backPageHandler = () => {\r\n    if (previousPageUrl) {\r\n      handlePeople(previousPageUrl);\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  // button Click handlers\r\n  const handleFilmButtonClick = async (people) => {\r\n    if (!filmDetails[people.url]) {\r\n      await fetchFilmDetails(people);\r\n    }\r\n    setFilmDisplay(true);\r\n    setStarshipDisplay(false);\r\n    setVehicleDisplay(false);\r\n    setSpeciesDisplay(false);\r\n\r\n\r\n    setSelectedPerson(people);\r\n  };\r\n\r\n  const handleSpeciesButtonClick = async (people) => {\r\n    if (!speciesDetails[people.url]) {\r\n      await fetchSpeciesDetails(people);\r\n    }\r\n    setSpeciesDisplay(true);\r\n    setFilmDisplay(false);\r\n    setStarshipDisplay(false);\r\n    setVehicleDisplay(false);\r\n\r\n    setSelectedPerson(people);\r\n  };\r\n\r\n  const handleVehicleButtonClick = async (people) => {\r\n    if (!vehicleDetails[people.url]) {\r\n      await fetchVehicleDetails(people);\r\n    }\r\n    setVehicleDisplay(true);\r\n    setFilmDisplay(false);\r\n    setStarshipDisplay(false);\r\n    setSpeciesDisplay(false);\r\n\r\n    setSelectedPerson(people);\r\n  };\r\n\r\n  const handleStarshipButtonClick = async (people) => {\r\n    if (!starshipDetails[people.url]) {\r\n      await fetchStarshipsDetails(people);\r\n    }\r\n    setStarshipDisplay(true);\r\n    setFilmDisplay(false);\r\n    setVehicleDisplay(false);\r\n    setSpeciesDisplay(false);\r\n\r\n    setSelectedPerson(people);\r\n  };\r\n\r\n\r\n\r\n  /** all the rendering */\r\n  return (\r\n    <div className=\"people-container\">\r\n      {/** loading bar */}\r\n      {loading && (\r\n        <div className=\"loading-bar\">\r\n          {\" \"}\r\n          <Loader />\r\n        </div>\r\n      )}\r\n\r\n      {/** current page */}\r\n      {pageDisplay && <div>Page {currentPage} </div>}\r\n\r\n      {/** button to fetch */}\r\n      {isFetch && (\r\n        <button onClick={nextPageHandler}>Figures of the Force</button>\r\n      )}\r\n      <div>\r\n        {prevBtn && (\r\n          <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {nextBtn && (\r\n          <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {peopleDisplay && (\r\n        <div className=\"people-grid\">\r\n          {people.map((result) => {\r\n            const peopleInfo = PeopleImage.find(\r\n              (people) => people.name === result.name\r\n            );\r\n\r\n            return (\r\n              <div key={result.name} className=\"people-result-container\">\r\n\r\n                <div className=\"people-items\">\r\n                  <h2>{result.name}</h2>\r\n                  \r\n                  <h5>Created: {formatDate(result.created)}</h5>\r\n                  <h5>Edited: {formatDate(result.edited)}</h5>\r\n                  \r\n                  <a\r\n                    href={peopleInfo.peopleImageSrc}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <img\r\n                      src={peopleInfo ? peopleInfo.peopleImageSrc : \"\"}\r\n                      alt={result.name}\r\n                    />   \r\n               \r\n                  </a>     \r\n                  <p>\r\n                    HomeWorld: <div><div>{`\\u0020`}</div>{result.homeworldName}</div>\r\n                  </p>\r\n\r\n                  <p className=\"people-description\">{peopleInfo.description}</p>\r\n                  {/* <p>Height: {result.height}</p>\r\n                  <p>Weight: {result.mass}</p>\r\n                  <p>Hair Color: {result.hair_color}</p>\r\n                  <p>Eye Color: {result.eye_color}</p>\r\n                  <p>Birth Year: {result.birth_year}</p>\r\n                  <p>Gender: {result.gender}</p> */}\r\n                  {/* URL: <a href={result.url}>{result.url}</a> */}\r\n\r\n                  {/*Buttons*/}\r\n                  <div>\r\n                  {!filmButtonClickedMap[result.url] && (\r\n                    <button onClick={() => handleFilmButtonClick(result)}>\r\n                      Show Films\r\n                    </button>\r\n                  )}\r\n\r\n                  {!speciesButtonClickedMap[result.url] && (\r\n                    <button onClick={() => handleSpeciesButtonClick(result)}>\r\n                      Show Species\r\n                    </button>\r\n                  )}\r\n\r\n                  {!vehicleButtonClickedMap[result.url] && (\r\n                    <button onClick={() => handleVehicleButtonClick(result)}>\r\n                      Show Vehicles\r\n                    </button>\r\n                  )}\r\n\r\n                  {!starshipButtonClickedMap[result.url] && (\r\n                    <button onClick={() => handleStarshipButtonClick(result)}>\r\n                      Show Starships\r\n                    </button>\r\n                  )}\r\n                  </div>\r\n\r\n                  {/* display for details of each button*/}\r\n                  {selectedPerson && selectedPerson.url === result.url && (\r\n                    <div className=\"people-button-details\">\r\n\r\n                    {filmDisplay && (\r\n                      <div>\r\n                      <h3>Films:</h3>\r\n                      {filmDetails[result.url] && (\r\n                        <div>\r\n                          {result.films.map((filmURL) => (\r\n                            <p key={filmDetails[result.url][filmURL]?.title}>\r\n                              {filmDetails[result.url][filmURL]?.title}\r\n                            </p>\r\n                          ))}\r\n                        </div>\r\n                        )}\r\n                        </div>\r\n                        )}\r\n\r\n                        {speciesDisplay && (\r\n                          <div>\r\n                       <h3>Species:</h3>\r\n                        {speciesDetails[result.url] && result.species.length > 0 ? (\r\n                          <div>\r\n                            {result.species.map((speciesURL) => (\r\n                              <p key={speciesDetails[result.url][speciesURL]?.name}>\r\n                                {speciesDetails[result.url][speciesURL]?.name}\r\n                              </p>\r\n                            ))}\r\n                          </div>\r\n                          ) : (\r\n                            <p>No species information available for this character.</p>\r\n                          )}\r\n                          </div>\r\n                          )}\r\n\r\n                          \r\n                          {vehicleDisplay && (\r\n                          <div>\r\n                       <h3>Vehicles:</h3>\r\n                        {vehicleDetails[result.url] && result.vehicles.length > 0 ? (\r\n                          <div>\r\n                            {result.vehicles.map((vehiclesURL) => (\r\n                              <p key={vehicleDetails[result.url][vehiclesURL]?.name}>\r\n                                {vehicleDetails[result.url][vehiclesURL]?.name}\r\n                              </p>\r\n                            ))}\r\n                          </div>\r\n                          ) : (\r\n                            <p>No vehicle information available for this character.</p>\r\n                          )}\r\n                          </div>\r\n                          )}\r\n\r\n                          \r\n                          {starshipDisplay && (\r\n                            <div>\r\n                       <h3>Starships:</h3>\r\n                        {starshipDetails[result.url] && result.starships.length > 0 ? (\r\n                          <div>\r\n                            {result.starships.map((starshipURL) => (\r\n                              <p key={starshipDetails[result.url][starshipURL]?.name}>\r\n                                {starshipDetails[result.url][starshipURL]?.name}\r\n                              </p>\r\n                            ))}\r\n                          </div>\r\n                          ) : (\r\n                            <p>No starship information available for this character.</p>\r\n                          )}\r\n                          </div>\r\n                          )}\r\n\r\n                    </div>\r\n\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {pageDisplay && <div>Page {currentPage} </div>}\r\n\r\n      <div>\r\n        {prevBtn && (\r\n          <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {nextBtn && (\r\n          <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PeoplePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}