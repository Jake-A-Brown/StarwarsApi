{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Movie\\\\MoviePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MoviePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviePage = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [fetch, setFetch] = useState(true);\n  const handleMovies = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('https://swapi.dev/api/films/');\n      const data = await response.json();\n      setMovies(data.results);\n      setLoading(false);\n      setFetch(false);\n    } catch (error) {}\n  };\n\n  //maybe just make a option to select by episode and render one at a time\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviepage-container\",\n    children: [\"Movies Page\", fetch || /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMovies,\n      children: \"fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), movies.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-items\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Star Wars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [result.title, \" Episode \", result.episode_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Director: \", result.director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result.opening_crawl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }, this)]\n    }, result.episode_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviePage, \"C6vNz8UzksMw/lGrRst4o0EFmXg=\");\n_c = MoviePage;\nexport default MoviePage;\nvar _c;\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MoviePage","_s","movies","setMovies","loading","setLoading","fetch","setFetch","handleMovies","response","data","json","results","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","result","title","episode_id","director","opening_crawl","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Movie/MoviePage.js"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport './MoviePage.css';\r\n\r\nconst MoviePage = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [fetch, setFetch] = useState(true);\r\n\r\n    const handleMovies = async()=>{\r\n\r\n      try{\r\n\r\n        setLoading(true);\r\n\r\n        const response = await fetch('https://swapi.dev/api/films/');\r\n        const data = await response.json();\r\n      \r\n          setMovies(data.results);\r\n          setLoading(false);\r\n          setFetch(false);\r\n\r\n        }catch(error){\r\n      }\r\n    };\r\n\r\n    //maybe just make a option to select by episode and render one at a time\r\n  return (\r\n    <div className='moviepage-container'>\r\n      Movies Page\r\n      {fetch || <button onClick={handleMovies}>fetch</button>}\r\n        {movies.map((result)=>(\r\n          <div className='movie-items' key={result.episode_id}>\r\n            <h4>Star Wars</h4> \r\n           <h4>{result.title} Episode {result.episode_id}</h4>\r\n           <div>Director: {result.director}</div>\r\n           <p>{result.opening_crawl}</p>\r\n            </div>\r\n        ))}\r\n        {loading && <div className='loading-bar'>Loading...</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAS;IAE5B,IAAG;MAEDH,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMI,QAAQ,GAAG,MAAMH,KAAK,CAAC,8BAA8B,CAAC;MAC5D,MAAMI,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;MAEhCR,SAAS,CAACO,IAAI,CAACE,OAAO,CAAC;MACvBP,UAAU,CAAC,KAAK,CAAC;MACjBE,QAAQ,CAAC,KAAK,CAAC;IAEjB,CAAC,QAAMM,KAAK,EAAC,CACf;EACF,CAAC;;EAED;EACF,oBACEd,OAAA;IAAKe,SAAS,EAAC,qBAAqB;IAAAC,QAAA,GAAC,aAEnC,EAACT,KAAK,iBAAIP,OAAA;MAAQiB,OAAO,EAAER,YAAa;MAAAO,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpDlB,MAAM,CAACmB,GAAG,CAAEC,MAAM,iBACjBvB,OAAA;MAAKe,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BhB,OAAA;QAAAgB,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBrB,OAAA;QAAAgB,QAAA,GAAKO,MAAM,CAACC,KAAK,EAAC,WAAS,EAACD,MAAM,CAACE,UAAU;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnDrB,OAAA;QAAAgB,QAAA,GAAK,YAAU,EAACO,MAAM,CAACG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtCrB,OAAA;QAAAgB,QAAA,EAAIO,MAAM,CAACI;MAAa;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAJIE,MAAM,CAACE,UAAU;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAK5C,CACR,CAAC,EACDhB,OAAO,iBAAIL,OAAA;MAAKe,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}