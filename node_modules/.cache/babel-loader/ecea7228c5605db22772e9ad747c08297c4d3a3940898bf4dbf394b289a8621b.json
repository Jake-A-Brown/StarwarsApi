{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Species\\\\SpeciesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport SpeciesImage from \"./SpeciesImage\";\nimport './SpeciesPage.css';\nimport Loader from './../../components/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  const date = new Date(dateString);\n  return date.toLocaleString(); // Adjust this to your preferred date format\n};\n\nconst SpeciesPage = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0);\n  const [species, setSpecies] = useState([]);\n  const [nextPageUrl, setNextPageUrl] = useState(\"https://swapi.dev/api/species/\");\n  const [previousPageUrl, setPreviousPageUrl] = useState(\"https://swapi.dev/api/species/\");\n  const [selectedSpecies, setSelectedSpecies] = useState(null);\n  const [nextBtn, setNextBtn] = useState(false);\n  const [prevBtn, setPrevBtn] = useState(false);\n  const [isFetch, setIsFetch] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [pageDisplay, setPageDisplay] = useState(false);\n  const [speciesDisplay, setSpeciesDisplay] = useState(false);\n  const [peopleDetails, setPeopleDetails] = useState({});\n  const [filmsDetails, setFilmsDetails] = useState({});\n  const [peopleButtonClickedMap, setPeopleButtonClickedMap] = useState({});\n  const [filmButtonClickedMap, setFilmButtonClickedMap] = useState({});\n  const [charDisplay, setCharDisplay] = useState({});\n  const [filmDisplay, setFilmDisplay] = useState({});\n  const handleSpecies = useCallback(async url => {\n    try {\n      setLoading(true);\n      setIsFetch(false);\n      setSpeciesDisplay(false);\n      setPageDisplay(false);\n      setNextBtn(false);\n      setPrevBtn(false);\n      const response = await fetch(url);\n      const data = await response.json();\n      setNextBtn(!!data.next);\n      setPrevBtn(!!data.previous);\n      setSpeciesDisplay(true);\n      setPageDisplay(true);\n      setSpecies(data.results);\n      setNextPageUrl(data.next);\n      setPreviousPageUrl(data.previous);\n      setLoading(false);\n    } catch (error) {}\n  }, []);\n\n  // fetch details for each button\n  const fetchPeopleDetails = async species => {\n    try {\n      setPeopleButtonClickedMap({\n        ...peopleButtonClickedMap,\n        [species.url]: true\n      });\n      setLoading(true);\n      const peoplePromises = species.people.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const people = await Promise.all(peoplePromises);\n      const peopleDetailsMap = {};\n      people.forEach(people => {\n        peopleDetailsMap[people.url] = people;\n      });\n      setPeopleDetails({\n        ...peopleDetailsMap,\n        [species.url]: peopleDetailsMap\n      });\n      setPeopleButtonClickedMap({\n        ...peopleButtonClickedMap,\n        [species.url]: false\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching people details:\", error);\n    }\n  };\n  const fetchFilmDetails = async species => {\n    try {\n      setFilmButtonClickedMap({\n        ...filmButtonClickedMap,\n        [species.url]: true\n      });\n      setLoading(true);\n      const filmPromises = species.films.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const films = await Promise.all(filmPromises);\n      const filmDetailsMap = {};\n      films.forEach(film => {\n        filmDetailsMap[film.url] = film;\n      });\n      setFilmsDetails({\n        ...filmDetailsMap,\n        [species.url]: filmDetailsMap\n      });\n      setFilmButtonClickedMap({\n        ...filmButtonClickedMap,\n        [species.url]: false\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching film details:\", error);\n    }\n  };\n\n  // button Click handlers\n  const handlePeopleButtonClick = async species => {\n    if (!peopleDetails[species.url]) {\n      await fetchPeopleDetails(species);\n    }\n    setCharDisplay(true);\n    setFilmDisplay(false);\n    setSelectedSpecies(species);\n  };\n  const handleFilmButtonClick = async species => {\n    if (!filmsDetails[species.url]) {\n      await fetchFilmDetails(species);\n    }\n    setFilmDisplay(true);\n    setCharDisplay(false);\n    setSelectedSpecies(species);\n  };\n  const nextPageHandler = () => {\n    if (nextPageUrl) {\n      handleSpecies(nextPageUrl);\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const backPageHandler = () => {\n    if (previousPageUrl) {\n      handleSpecies(previousPageUrl);\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"species-container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }, this), pageDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Page \", currentPage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prevBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), nextBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), speciesDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"species-grid\",\n      children: species.map(result => {\n        const speciesInfo = SpeciesImage.find(species => species.name === result.name);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"species-result-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"species-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Created: \", formatDate(result.created)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Edited: \", formatDate(result.edited)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: speciesInfo ? speciesInfo.speciesImgSrc : \"\",\n              alt: result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), !peopleButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePeopleButtonClick(result),\n              children: \"Show People\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this), !filmButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleFilmButtonClick(result),\n              children: \"Show Films\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this), selectedSpecies && selectedSpecies.url === result.url && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [charDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"People:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this), peopleDetails[result.url] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: result.people.map(peopleURL => {\n                    var _peopleDetails$result, _peopleDetails$result2;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [(_peopleDetails$result2 = peopleDetails[result.url][peopleURL]) === null || _peopleDetails$result2 === void 0 ? void 0 : _peopleDetails$result2.name, /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 73\n                      }, this)]\n                    }, (_peopleDetails$result = peopleDetails[result.url][peopleURL]) === null || _peopleDetails$result === void 0 ? void 0 : _peopleDetails$result.name, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 25\n              }, this), filmDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Films:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 24\n                }, this), filmsDetails[result.url] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: result.films.map(filmURL => {\n                    var _filmsDetails$result$, _filmsDetails$result$2;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [(_filmsDetails$result$2 = filmsDetails[result.url][filmURL]) === null || _filmsDetails$result$2 === void 0 ? void 0 : _filmsDetails$result$2.title, /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 71\n                      }, this)]\n                    }, (_filmsDetails$result$ = filmsDetails[result.url][filmURL]) === null || _filmsDetails$result$ === void 0 ? void 0 : _filmsDetails$result$.title, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, result.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isFetch && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        children: \"Species of StarWars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), prevBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), nextBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeciesPage, \"J35MwcrJ9cRRnurS+17Y7W2o2wc=\");\n_c = SpeciesPage;\nexport default SpeciesPage;\nvar _c;\n$RefreshReg$(_c, \"SpeciesPage\");","map":{"version":3,"names":["React","useCallback","useState","SpeciesImage","Loader","jsxDEV","_jsxDEV","formatDate","dateString","date","Date","toLocaleString","SpeciesPage","_s","currentPage","setCurrentPage","species","setSpecies","nextPageUrl","setNextPageUrl","previousPageUrl","setPreviousPageUrl","selectedSpecies","setSelectedSpecies","nextBtn","setNextBtn","prevBtn","setPrevBtn","isFetch","setIsFetch","loading","setLoading","pageDisplay","setPageDisplay","speciesDisplay","setSpeciesDisplay","peopleDetails","setPeopleDetails","filmsDetails","setFilmsDetails","peopleButtonClickedMap","setPeopleButtonClickedMap","filmButtonClickedMap","setFilmButtonClickedMap","charDisplay","setCharDisplay","filmDisplay","setFilmDisplay","handleSpecies","url","response","fetch","data","json","next","previous","results","error","fetchPeopleDetails","peoplePromises","people","map","Promise","all","peopleDetailsMap","forEach","console","fetchFilmDetails","filmPromises","films","filmDetailsMap","film","handlePeopleButtonClick","handleFilmButtonClick","nextPageHandler","backPageHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","result","speciesInfo","find","name","created","edited","src","speciesImgSrc","alt","peopleURL","_peopleDetails$result","_peopleDetails$result2","filmURL","_filmsDetails$result$","_filmsDetails$result$2","title","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Species/SpeciesPage.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport SpeciesImage from \"./SpeciesImage\";\r\n\r\nimport './SpeciesPage.css';\r\nimport Loader from './../../components/Loader/Loader';\r\n\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleString(); // Adjust this to your preferred date format\r\n};\r\n\r\nconst SpeciesPage = () => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [species, setSpecies] = useState([]);\r\n  const [nextPageUrl, setNextPageUrl] = useState(\r\n    \"https://swapi.dev/api/species/\"\r\n  );\r\n  const [previousPageUrl, setPreviousPageUrl] = useState(\r\n    \"https://swapi.dev/api/species/\"\r\n  );\r\n  const [selectedSpecies, setSelectedSpecies] = useState(null);\r\n\r\n  const [nextBtn, setNextBtn] = useState(false);\r\n  const [prevBtn, setPrevBtn] = useState(false);\r\n  const [isFetch, setIsFetch] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [pageDisplay, setPageDisplay] = useState(false);\r\n  const [speciesDisplay, setSpeciesDisplay] = useState(false);\r\n\r\n  const [peopleDetails, setPeopleDetails] = useState({});\r\n  const [filmsDetails, setFilmsDetails] = useState({});\r\n  const [peopleButtonClickedMap, setPeopleButtonClickedMap] = useState({});\r\n  const [filmButtonClickedMap, setFilmButtonClickedMap] = useState({});\r\n\r\n  const [charDisplay, setCharDisplay] = useState({});\r\n  const [filmDisplay, setFilmDisplay] = useState({});\r\n\r\n  const handleSpecies = useCallback(async (url) => {\r\n    try {\r\n      setLoading(true);\r\n      setIsFetch(false);\r\n      setSpeciesDisplay(false);\r\n      setPageDisplay(false);\r\n      setNextBtn(false);\r\n      setPrevBtn(false);\r\n\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      setNextBtn(!!data.next);\r\n      setPrevBtn(!!data.previous);\r\n      setSpeciesDisplay(true);\r\n      setPageDisplay(true);\r\n\r\n      setSpecies(data.results);\r\n      setNextPageUrl(data.next);\r\n      setPreviousPageUrl(data.previous);\r\n      setLoading(false);\r\n    } catch (error) {}\r\n  }, []);\r\n    \r\n  // fetch details for each button\r\n  const fetchPeopleDetails = async (species) => {\r\n\r\n    try{\r\n        setPeopleButtonClickedMap({...peopleButtonClickedMap, [species.url]: true});\r\n        setLoading(true);\r\n        const peoplePromises = species.people.map(async (url) => {\r\n            const response = await fetch(url);\r\n            return response.json();\r\n        });\r\n\r\n        const people = await Promise.all(peoplePromises);\r\n\r\n        const peopleDetailsMap = {};\r\n        people.forEach((people) => {\r\n          peopleDetailsMap[people.url] = people;\r\n        });\r\n\r\n        setPeopleDetails({\r\n            ...peopleDetailsMap,\r\n            [species.url]: peopleDetailsMap,\r\n        });\r\n\r\n        setPeopleButtonClickedMap({...peopleButtonClickedMap, [species.url]: false});\r\n        setLoading(false);\r\n\r\n    }catch(error){console.error(\"Error fetching people details:\", error);}\r\n  };\r\n\r\n  const fetchFilmDetails = async (species) => {\r\n\r\n    try{\r\n        setFilmButtonClickedMap({...filmButtonClickedMap, [species.url]: true});\r\n        setLoading(true);\r\n        const filmPromises = species.films.map(async (url) => {\r\n            const response = await fetch(url);\r\n            return response.json();\r\n        });\r\n\r\n        const films = await Promise.all(filmPromises);\r\n\r\n        const filmDetailsMap = {};\r\n        films.forEach((film) => {\r\n          filmDetailsMap[film.url] = film;\r\n        });\r\n\r\n        setFilmsDetails({\r\n            ...filmDetailsMap,\r\n            [species.url]: filmDetailsMap,\r\n        });\r\n\r\n        setFilmButtonClickedMap({...filmButtonClickedMap, [species.url]: false});\r\n        setLoading(false);\r\n\r\n    }catch(error){console.error(\"Error fetching film details:\", error);}\r\n  };\r\n\r\n     // button Click handlers\r\n     const handlePeopleButtonClick = async (species) => {\r\n      if (!peopleDetails[species.url]) {\r\n        await fetchPeopleDetails(species);\r\n      }\r\n\r\n      setCharDisplay(true);\r\n      setFilmDisplay(false);\r\n  \r\n      setSelectedSpecies(species);\r\n    };\r\n\r\n    const handleFilmButtonClick = async (species) => {\r\n      if (!filmsDetails[species.url]) {\r\n        await fetchFilmDetails(species);\r\n      }\r\n\r\n      setFilmDisplay(true);\r\n      setCharDisplay(false);\r\n  \r\n      setSelectedSpecies(species);\r\n    };\r\n\r\n\r\n  const nextPageHandler = () => {\r\n    if (nextPageUrl) {\r\n      handleSpecies(nextPageUrl);\r\n      setCurrentPage(currentPage+1);\r\n    }\r\n  };\r\n\r\n  const backPageHandler = () => {\r\n    if (previousPageUrl) {\r\n      handleSpecies(previousPageUrl);\r\n      setCurrentPage(currentPage-1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"species-container\">\r\n      {loading && <div className=\"loading-bar\"><Loader/></div>}\r\n      {pageDisplay && (<div>Page {currentPage} </div> )}\r\n\r\n      <div>\r\n        {prevBtn && (\r\n          <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {nextBtn && (\r\n          <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n    {speciesDisplay && (\r\n      <div className=\"species-grid\">\r\n        {species.map((result) => {\r\n          \r\n          const speciesInfo = SpeciesImage.find(\r\n            (species) => species.name === result.name\r\n          );\r\n\r\n          return (\r\n            <div key={result.name} className=\"species-result-container\">\r\n              <div className=\"species-items\">\r\n                <h2>{result.name}</h2>\r\n                <h5>Created: {formatDate(result.created)}</h5>\r\n                <h5>Edited: {formatDate(result.edited)}</h5>\r\n                <img\r\n                  src={speciesInfo ? speciesInfo.speciesImgSrc : \"\"}\r\n                  alt={result.name}\r\n                />\r\n                {/* <p>Classification: {result.classification}</p>\r\n                <p>Designation: {result.designation}</p>\r\n                <p>Average height: {result.average_height}</p>\r\n                <p>Skin colors: {result.skin_colors}</p>\r\n                <p>Hair colors: {result.hair_colors}</p>\r\n                <p>Eye colors: {result.eye_colors}</p>\r\n                <p>Average lifespan: {result.average_lifespan}</p>\r\n                <p>Language: {result.language}</p> */}\r\n                {/* <h5>URL: {result.url}</h5> */}\r\n\r\n                  {/*Buttons*/}\r\n                  {!peopleButtonClickedMap[result.url] && (\r\n                    <button onClick={() => handlePeopleButtonClick(result)}>\r\n                      Show People\r\n                    </button>\r\n                  )}\r\n\r\n                  {!filmButtonClickedMap[result.url] && (\r\n                    <button onClick={() => handleFilmButtonClick(result)}>\r\n                      Show Films\r\n                    </button>\r\n                  )}\r\n\r\n                  \r\n                  {/* display for details of each button*/}\r\n                  {selectedSpecies && selectedSpecies.url === result.url && (\r\n                    <div>\r\n\r\n                      {charDisplay && (\r\n                        <div>\r\n                      <h3>People:</h3>\r\n                      {peopleDetails[result.url] && (\r\n                        <div>\r\n                          {result.people.map((peopleURL) => (\r\n                            <div\r\n                              key={peopleDetails[result.url][peopleURL]?.name}\r\n                            >\r\n                            {peopleDetails[result.url][peopleURL]?.name}<span/>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                      </div>\r\n                      )}\r\n                      \r\n                      {filmDisplay && (\r\n                        <div>\r\n                       <h3>Films:</h3>\r\n                      {filmsDetails[result.url] && (\r\n                        <div>\r\n                          {result.films.map((filmURL) => (\r\n                            <div\r\n                              key={filmsDetails[result.url][filmURL]?.title}\r\n                            >\r\n                            {filmsDetails[result.url][filmURL]?.title}<span/>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      )} \r\n                      </div>\r\n                      )}\r\n\r\n                    </div>\r\n                  )}\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      )}\r\n\r\n      <div>\r\n        {isFetch && (\r\n          <button onClick={nextPageHandler}>Species of StarWars</button>\r\n        )}\r\n        {prevBtn && (\r\n          <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {nextBtn && (\r\n          <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeciesPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}