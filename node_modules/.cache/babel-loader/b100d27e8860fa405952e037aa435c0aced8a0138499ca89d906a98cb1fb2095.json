{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\components\\\\Movies\\\\Movie.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// import style from './Movie.module.css';\nimport styles from '../Planets/Planet.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = props => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n\n  // useEffect(() =>{},[]); useEffect boiler\n  useEffect(() => {\n    const fetchCharacterNames = async () => {\n      const cnames = await Promise.all(props.characters.map(async characterUrl => {\n        const response = await fetch(characterUrl);\n        const data = await response.json();\n        return data.name;\n      }));\n      setCharacters(cnames);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.planet,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Star Wars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.title, \" Episode: \", props.episodeNum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.releaseDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.openingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Director: \", props.director]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Producer: \", props.producer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.characters.map(character => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: character.name\n      }, character.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Planets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.planets.map(planet => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: planet.name\n      }, planet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Movie, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","Movie","props","_s","characters","setCharacters","fetchCharacterNames","cnames","Promise","all","map","characterUrl","response","fetch","data","json","name","className","planet","children","fileName","_jsxFileName","lineNumber","columnNumber","title","episodeNum","releaseDate","openingText","director","producer","character","id","planets","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/components/Movies/Movie.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\n// import style from './Movie.module.css';\nimport styles from '../Planets/Planet.module.css';\n\nconst Movie = (props) => {\n  const  [characters, setCharacters] =useState([]);\n\n  // useEffect(() =>{},[]); useEffect boiler\n  useEffect(() =>{\n    const fetchCharacterNames = async () => {\n      const cnames = await Promise.all(props.characters.map(async (characterUrl)=>{\n        const response = await fetch(characterUrl);\n        const data = await response.json();\n        return data.name;\n      }));\n      setCharacters(cnames);\n    };\n  },[]);\n\n  return (\n    <div className={styles.planet}>\n      <h1>Star Wars</h1>\n      <p>{props.title} Episode: {props.episodeNum}</p>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n\n      {/* Render other movie details here */}\n      <p>Director: {props.director}</p>\n      <p>Producer: {props.producer}</p>\n\n      <h2>Characters</h2>\n      <ul>\n        {props.characters.map((character) => (\n          <li key={character.id}>{character.name}</li>\n        ))}\n      </ul>\n\n      <h2>Planets</h2>\n      <ul>\n        {props.planets.map((planet) => (\n          <li key={planet.id}>{planet.name}</li>\n        ))}\n      </ul>\n\n      {/* Add similar sections for starships, vehicles, species, created, edited, url, etc. */}\n    </div>\n  );\n};\n\nexport default Movie;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}