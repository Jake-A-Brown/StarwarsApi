{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\components\\\\Movies\\\\Movie.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from '../Planets/Planet.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = props => {\n  _s();\n  const [movieData, setMovieData] = useState({\n    characters: [],\n    planets: [],\n    starships: [],\n    vehicles: [],\n    species: []\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleString(); // You can customize the format as needed\n  };\n\n  const fetchData = async (urlArray, dataKey) => {\n    try {\n      const dataArray = await Promise.all(urlArray.map(async url => {\n        const response = await fetch(url);\n        const data = await response.json();\n        return data.name; // Adjust the property you want to display\n      }));\n\n      setMovieData(prevData => ({\n        ...prevData,\n        [dataKey]: dataArray\n      }));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        setIsLoading(true);\n        await fetchData(props.characters, 'characters');\n        await fetchData(props.planets, 'planets');\n        await fetchData(props.starships, 'starships');\n        await fetchData(props.vehicles, 'vehicles');\n        await fetchData(props.species, 'species');\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    fetchMovieData();\n  }, [props.characters, props.planets, props.starships, props.vehicles, props.species]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.planet,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Star Wars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.title, \" Episode: \", props.episodeNum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.releaseDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.openingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Director: \", props.director]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Producer: \", props.producer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movieData.characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: character\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Planets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movieData.planets.map((planet, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: planet\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"StarShips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movieData.starships.map((starship, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: starship\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vehicles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movieData.vehicles.map((vehicle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: vehicle\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Species\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movieData.species.map((specie, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: specie\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created: \", formatTimestamp(props.created)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Edited: \", formatTimestamp(props.edited)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Movie, \"CdCNdYomfFQJyrsY3slHk2qKYmk=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","Movie","props","_s","movieData","setMovieData","characters","planets","starships","vehicles","species","isLoading","setIsLoading","error","setError","formatTimestamp","timestamp","date","Date","toLocaleString","fetchData","urlArray","dataKey","dataArray","Promise","all","map","url","response","fetch","data","json","name","prevData","message","fetchMovieData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","planet","title","episodeNum","releaseDate","openingText","director","producer","character","index","starship","vehicle","specie","created","edited","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/components/Movies/Movie.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport styles from '../Planets/Planet.module.css';\n\nconst Movie = (props) => {\n  const [movieData, setMovieData] = useState({\n    characters: [],\n    planets: [],\n    starships: [],\n    vehicles: [],\n    species: [],\n  });\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleString(); // You can customize the format as needed\n  };\n\n  const fetchData = async (urlArray, dataKey) => {\n    try {\n      const dataArray = await Promise.all(urlArray.map(async (url) => {\n        const response = await fetch(url);\n        const data = await response.json();\n        return data.name; // Adjust the property you want to display\n      }));\n      setMovieData((prevData) => ({\n        ...prevData,\n        [dataKey]: dataArray,\n      }));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        setIsLoading(true);\n        await fetchData(props.characters, 'characters');\n        await fetchData(props.planets, 'planets');\n        await fetchData(props.starships, 'starships');\n        await fetchData(props.vehicles, 'vehicles');\n        await fetchData(props.species, 'species');\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieData();\n  }, [props.characters, props.planets, props.starships, props.vehicles, props.species]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className={styles.planet}>\n      <h1>Star Wars</h1>\n      <p>{props.title} Episode: {props.episodeNum}</p>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n\n      {/* Render other movie details here */}\n      <p>Director: {props.director}</p>\n      <p>Producer: {props.producer}</p>\n\n      <h2>Characters</h2>\n      <ul>\n        {movieData.characters.map((character, index) => (\n          <p key={index}>{character}</p>\n        ))}\n      </ul>\n\n      <h2>Planets</h2>\n      <ul>\n        {movieData.planets.map((planet, index) => (\n          <li key={index}>{planet}</li>\n        ))}\n      </ul>\n\n      <h2>StarShips</h2>\n      <ul>\n        {movieData.starships.map((starship, index) => (\n          <li key={index}>{starship}</li>\n        ))}\n      </ul>\n\n      <h2>Vehicles</h2>\n      <ul>\n        {movieData.vehicles.map((vehicle, index) => (\n          <li key={index}>{vehicle}</li>\n        ))}\n      </ul>\n\n      <h2>Species</h2>\n      <ul>\n        {movieData.species.map((specie, index) => (\n          <li key={index}>{specie}</li>\n        ))}\n      </ul>\n\n      <p>Created: {formatTimestamp(props.created)}</p>\n      <p>Edited: {formatTimestamp(props.edited)}</p>\n      <p>{props.url}</p>\n      {/* Add similar sections for starships, vehicles, species, created, edited, url, etc. */}\n    </div>\n  );\n};\n\nexport default Movie;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}