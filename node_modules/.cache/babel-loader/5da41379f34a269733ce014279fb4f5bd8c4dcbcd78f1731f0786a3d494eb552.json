{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\components\\\\Planets\\\\PlanetList.js\";\nimport React from \"react\";\nimport Planet from \"./Planet\";\nimport style from \"./PlanetList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanetList = props => {\n  const {\n    planets,\n    currentPageIndex\n  } = props;\n  if (!props.planets || props.planets.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No planets to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this); // Add a message for when there are no planets\n  }\n\n  const currentPlanet = planets[currentPageIndex];\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: style[\"planets-list\"],\n    children: /*#__PURE__*/_jsxDEV(Planet, {\n      id: currentPlanet.id,\n      imageSrc: currentPlanet.imageSrc,\n      description: currentPlanet.description,\n      climate: currentPlanet.climate,\n      terrain: currentPlanet.terrain,\n      population: currentPlanet.population,\n      diameter: currentPlanet.diameter,\n      gravity: currentPlanet.gravity,\n      rotationPeriod: currentPlanet.rotationPeriod,\n      orbitalPeriod: currentPlanet.orbitalPeriod,\n      surfaceWater: currentPlanet.surfaceWater,\n      created: currentPlanet.created,\n      edited: currentPlanet.edited,\n      url: currentPlanet.url\n    }, currentPlanet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = PlanetList;\nexport default PlanetList;\nvar _c;\n$RefreshReg$(_c, \"PlanetList\");","map":{"version":3,"names":["React","Planet","style","jsxDEV","_jsxDEV","PlanetList","props","planets","currentPageIndex","length","children","fileName","_jsxFileName","lineNumber","columnNumber","currentPlanet","className","id","imageSrc","description","climate","terrain","population","diameter","gravity","rotationPeriod","orbitalPeriod","surfaceWater","created","edited","url","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/components/Planets/PlanetList.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Planet from \"./Planet\";\r\nimport style from \"./PlanetList.module.css\";\r\n\r\nconst PlanetList = (props) => {\r\n  const { planets, currentPageIndex } = props;\r\n  \r\n  if (!props.planets || props.planets.length === 0) {\r\n    return <p>No planets to display.</p>; // Add a message for when there are no planets\r\n  }\r\n\r\n  const currentPlanet = planets[currentPageIndex];\r\n\r\n  return (\r\n    <ul className={style[\"planets-list\"]}>\r\n    <Planet\r\n      key={currentPlanet.id}\r\n      id={currentPlanet.id}\r\n      imageSrc={currentPlanet.imageSrc}\r\n      description={currentPlanet.description}\r\n      climate={currentPlanet.climate}\r\n      terrain={currentPlanet.terrain}\r\n      population={currentPlanet.population}\r\n      diameter={currentPlanet.diameter}\r\n      gravity={currentPlanet.gravity}\r\n      rotationPeriod={currentPlanet.rotationPeriod}\r\n      orbitalPeriod={currentPlanet.orbitalPeriod}\r\n      surfaceWater={currentPlanet.surfaceWater}\r\n      created={currentPlanet.created}\r\n      edited={currentPlanet.edited}\r\n      url={currentPlanet.url}\r\n    />\r\n  </ul>\r\n\r\n  );\r\n};\r\n\r\nexport default PlanetList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IAAEC,OAAO;IAAEC;EAAiB,CAAC,GAAGF,KAAK;EAE3C,IAAI,CAACA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACC,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;IAChD,oBAAOL,OAAA;MAAAM,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EACxC;;EAEA,MAAMC,aAAa,GAAGR,OAAO,CAACC,gBAAgB,CAAC;EAE/C,oBACEJ,OAAA;IAAIY,SAAS,EAAEd,KAAK,CAAC,cAAc,CAAE;IAAAQ,QAAA,eACrCN,OAAA,CAACH,MAAM;MAELgB,EAAE,EAAEF,aAAa,CAACE,EAAG;MACrBC,QAAQ,EAAEH,aAAa,CAACG,QAAS;MACjCC,WAAW,EAAEJ,aAAa,CAACI,WAAY;MACvCC,OAAO,EAAEL,aAAa,CAACK,OAAQ;MAC/BC,OAAO,EAAEN,aAAa,CAACM,OAAQ;MAC/BC,UAAU,EAAEP,aAAa,CAACO,UAAW;MACrCC,QAAQ,EAAER,aAAa,CAACQ,QAAS;MACjCC,OAAO,EAAET,aAAa,CAACS,OAAQ;MAC/BC,cAAc,EAAEV,aAAa,CAACU,cAAe;MAC7CC,aAAa,EAAEX,aAAa,CAACW,aAAc;MAC3CC,YAAY,EAAEZ,aAAa,CAACY,YAAa;MACzCC,OAAO,EAAEb,aAAa,CAACa,OAAQ;MAC/BC,MAAM,EAAEd,aAAa,CAACc,MAAO;MAC7BC,GAAG,EAAEf,aAAa,CAACe;IAAI,GAdlBf,aAAa,CAACE,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAetB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGP,CAAC;AAACiB,EAAA,GA/BI1B,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}