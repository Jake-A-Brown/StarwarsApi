{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\components\\\\Movies\\\\Movie.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// import style from './Movie.module.css';\nimport styles from '../Planets/Planet.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = props => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleString(); // You can customize the format as needed\n  };\n\n  // useEffect(() =>{},[]); useEffect boiler\n  useEffect(() => {\n    //instead of so many api requests at once maybe add buttons to call for each fetch here?????? ??\n    const fetchCharacterNames = async () => {\n      const characterNames = await Promise.all(props.characters.map(async characterUrl => {\n        const response = await fetch(characterUrl);\n        const data = await response.json();\n        return data.name;\n      }));\n      setCharacters(characterNames);\n    };\n    const fetchPlanetNames = async () => {\n      const planetNames = await Promise.all(props.planets.map(async planetUrl => {\n        const response = await fetch(planetUrl);\n        const data = await response.json();\n        return data.name;\n      }));\n      setPlanets(planetNames);\n    };\n    const fetchStarships = async () => {\n      const Starships = await Promise.all(props.starships.map(async starshipUrl => {\n        const response = await fetch(starshipUrl);\n        const data = await response.json();\n        return data.name;\n      }));\n      setStarships(Starships);\n    };\n    const fetchVehicles = async () => {\n      const Vehicles = await Promise.all(props.vehicles.map(async vehicleUrl => {\n        const response = await fetch(vehicleUrl);\n        const data = await response.json();\n        return data.name;\n      }));\n      setVehicles(Vehicles);\n    };\n    const fetchSpecies = async () => {\n      const Species = await Promise.all(props.species.map(async speciesUrl => {\n        const response = await fetch(speciesUrl);\n        const data = await response.json();\n        return data.species;\n      }));\n      setSpecies(Species);\n    };\n    fetchSpecies();\n    fetchVehicles();\n    fetchStarships();\n    fetchPlanetNames();\n    fetchCharacterNames();\n  }, [props.characters, props.planets, props.starships, props.vehicles, props.species]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.planet,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Star Wars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.title, \" Episode: \", props.episodeNum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.releaseDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.openingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Director: \", props.director]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Producer: \", props.producer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: characters.join(', ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Planets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: planets.join(', ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"StarShips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: starships.join(', ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vehicles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: vehicles.join(', ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Species\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: species.join(', ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created: \", formatTimestamp(props.created)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Edited: \", formatTimestamp(props.edited)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Movie, \"a3+G0vz00Vb0flTNUYN8YG7slSk=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","Movie","props","_s","characters","setCharacters","planets","setPlanets","starships","setStarships","vehicles","setVehicles","species","setSpecies","formatTimestamp","timestamp","date","Date","toLocaleString","fetchCharacterNames","characterNames","Promise","all","map","characterUrl","response","fetch","data","json","name","fetchPlanetNames","planetNames","planetUrl","fetchStarships","Starships","starshipUrl","fetchVehicles","Vehicles","vehicleUrl","fetchSpecies","Species","speciesUrl","className","planet","children","fileName","_jsxFileName","lineNumber","columnNumber","title","episodeNum","releaseDate","openingText","director","producer","join","created","edited","url","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/components/Movies/Movie.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\n// import style from './Movie.module.css';\nimport styles from '../Planets/Planet.module.css';\n\nconst Movie = (props) => {\n  const  [characters, setCharacters] =useState([]);\n  const [planets, setPlanets] =useState([]);\n  const [starships, setStarships] =useState([]);\n  const [vehicles, setVehicles] =useState([]);\n  const [species, setSpecies] =useState([]);\n\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleString(); // You can customize the format as needed\n  };\n\n\n  // useEffect(() =>{},[]); useEffect boiler\n  useEffect(() =>{\n\n\n    //instead of so many api requests at once maybe add buttons to call for each fetch here?????? ??\n    const fetchCharacterNames = async () => {\n      const characterNames = await Promise.all(props.characters.map(async (characterUrl)=>{\n        const response = await fetch(characterUrl);\n        const data = await response.json();\n        return data.name;\n      }));\n\n      setCharacters(characterNames);\n    };\n\n    const fetchPlanetNames= async () => {\n      const planetNames = await Promise.all(props.planets.map(async(planetUrl)=>{\n        const response = await fetch(planetUrl);\n        const data = await response.json();\n        return data.name;\n      }));\n      setPlanets(planetNames);\n    };\n\n    const fetchStarships= async () => {\n      const Starships = await Promise.all(props.starships.map(async(starshipUrl)=>{\n        const response = await fetch(starshipUrl);\n        const data = await response.json();\n        return data.name;\n      }));\n      setStarships(Starships);\n    };\n\n    const fetchVehicles= async () => {\n      const Vehicles = await Promise.all(props.vehicles.map(async(vehicleUrl)=>{\n        const response = await fetch(vehicleUrl);\n        const data = await response.json();\n        return data.name;\n      }));\n      setVehicles(Vehicles);\n    };\n\n    const fetchSpecies= async () => {\n      const Species = await Promise.all(props.species.map(async(speciesUrl)=>{\n        const response = await fetch(speciesUrl);\n        const data = await response.json();\n        return data.species;\n      }));\n      setSpecies(Species);\n    };\n\n    fetchSpecies();\n    fetchVehicles();\n    fetchStarships();\n    fetchPlanetNames();\n    fetchCharacterNames();\n  },[props.characters, props.planets, props.starships, props.vehicles, props.species]);\n\n  return (\n    <div className={styles.planet}>\n      <h1>Star Wars</h1>\n      <p>{props.title} Episode: {props.episodeNum}</p>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n\n      {/* Render other movie details here */}\n      <p>Director: {props.director}</p>\n      <p>Producer: {props.producer}</p>\n\n      {/**  maybe make these buttons for each request */}\n      <h2>Characters</h2>\n      <p>\n       {characters.join(', ')}\n      </p>\n\n      <h2>Planets</h2>\n      <p>{planets.join(', ')}</p>\n\n      <h2>StarShips</h2>\n      <p>{starships.join(', ')}</p>\n\n      <h2>Vehicles</h2>\n      <p>{vehicles.join(', ')}</p>\n\n      <h2>Species</h2>\n      <p>{species.join(', ')}</p>\n            {/**  maybe make these buttons for each request */}\n      <p>Created: {formatTimestamp(props.created)}</p>\n      <p>Edited: {formatTimestamp(props.edited)}</p>\n      <p>{props.url}</p>\n      {/* Add similar sections for starships, vehicles, species, created, edited, url, etc. */}\n    </div>\n  );\n};\n\nexport default Movie;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;;AAEhD;AACA,OAAOC,MAAM,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAO,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAEV,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAEZ,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAEd,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAEhB,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMiB,eAAe,GAAIC,SAAS,IAAK;IACrC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;IAChC,OAAOC,IAAI,CAACE,cAAc,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;;EAGD;EACAtB,SAAS,CAAC,MAAK;IAGb;IACA,MAAMuB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACpB,KAAK,CAACE,UAAU,CAACmB,GAAG,CAAC,MAAOC,YAAY,IAAG;QAClF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,YAAY,CAAC;QAC1C,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,OAAOD,IAAI,CAACE,IAAI;MAClB,CAAC,CAAC,CAAC;MAEHxB,aAAa,CAACe,cAAc,CAAC;IAC/B,CAAC;IAED,MAAMU,gBAAgB,GAAE,MAAAA,CAAA,KAAY;MAClC,MAAMC,WAAW,GAAG,MAAMV,OAAO,CAACC,GAAG,CAACpB,KAAK,CAACI,OAAO,CAACiB,GAAG,CAAC,MAAMS,SAAS,IAAG;QACxE,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACM,SAAS,CAAC;QACvC,MAAML,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,OAAOD,IAAI,CAACE,IAAI;MAClB,CAAC,CAAC,CAAC;MACHtB,UAAU,CAACwB,WAAW,CAAC;IACzB,CAAC;IAED,MAAME,cAAc,GAAE,MAAAA,CAAA,KAAY;MAChC,MAAMC,SAAS,GAAG,MAAMb,OAAO,CAACC,GAAG,CAACpB,KAAK,CAACM,SAAS,CAACe,GAAG,CAAC,MAAMY,WAAW,IAAG;QAC1E,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACS,WAAW,CAAC;QACzC,MAAMR,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,OAAOD,IAAI,CAACE,IAAI;MAClB,CAAC,CAAC,CAAC;MACHpB,YAAY,CAACyB,SAAS,CAAC;IACzB,CAAC;IAED,MAAME,aAAa,GAAE,MAAAA,CAAA,KAAY;MAC/B,MAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACC,GAAG,CAACpB,KAAK,CAACQ,QAAQ,CAACa,GAAG,CAAC,MAAMe,UAAU,IAAG;QACvE,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAACY,UAAU,CAAC;QACxC,MAAMX,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,OAAOD,IAAI,CAACE,IAAI;MAClB,CAAC,CAAC,CAAC;MACHlB,WAAW,CAAC0B,QAAQ,CAAC;IACvB,CAAC;IAED,MAAME,YAAY,GAAE,MAAAA,CAAA,KAAY;MAC9B,MAAMC,OAAO,GAAG,MAAMnB,OAAO,CAACC,GAAG,CAACpB,KAAK,CAACU,OAAO,CAACW,GAAG,CAAC,MAAMkB,UAAU,IAAG;QACrE,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAACe,UAAU,CAAC;QACxC,MAAMd,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,OAAOD,IAAI,CAACf,OAAO;MACrB,CAAC,CAAC,CAAC;MACHC,UAAU,CAAC2B,OAAO,CAAC;IACrB,CAAC;IAEDD,YAAY,CAAC,CAAC;IACdH,aAAa,CAAC,CAAC;IACfH,cAAc,CAAC,CAAC;IAChBH,gBAAgB,CAAC,CAAC;IAClBX,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAC,CAACjB,KAAK,CAACE,UAAU,EAAEF,KAAK,CAACI,OAAO,EAAEJ,KAAK,CAACM,SAAS,EAAEN,KAAK,CAACQ,QAAQ,EAAER,KAAK,CAACU,OAAO,CAAC,CAAC;EAEpF,oBACEZ,OAAA;IAAK0C,SAAS,EAAE5C,MAAM,CAAC6C,MAAO;IAAAC,QAAA,gBAC5B5C,OAAA;MAAA4C,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBhD,OAAA;MAAA4C,QAAA,GAAI1C,KAAK,CAAC+C,KAAK,EAAC,YAAU,EAAC/C,KAAK,CAACgD,UAAU;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDhD,OAAA;MAAA4C,QAAA,EAAK1C,KAAK,CAACiD;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5BhD,OAAA;MAAA4C,QAAA,EAAI1C,KAAK,CAACkD;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG1BhD,OAAA;MAAA4C,QAAA,GAAG,YAAU,EAAC1C,KAAK,CAACmD,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjChD,OAAA;MAAA4C,QAAA,GAAG,YAAU,EAAC1C,KAAK,CAACoD,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGjChD,OAAA;MAAA4C,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhD,OAAA;MAAA4C,QAAA,EACExC,UAAU,CAACmD,IAAI,CAAC,IAAI;IAAC;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eAEJhD,OAAA;MAAA4C,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBhD,OAAA;MAAA4C,QAAA,EAAItC,OAAO,CAACiD,IAAI,CAAC,IAAI;IAAC;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3BhD,OAAA;MAAA4C,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBhD,OAAA;MAAA4C,QAAA,EAAIpC,SAAS,CAAC+C,IAAI,CAAC,IAAI;IAAC;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7BhD,OAAA;MAAA4C,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBhD,OAAA;MAAA4C,QAAA,EAAIlC,QAAQ,CAAC6C,IAAI,CAAC,IAAI;IAAC;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5BhD,OAAA;MAAA4C,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBhD,OAAA;MAAA4C,QAAA,EAAIhC,OAAO,CAAC2C,IAAI,CAAC,IAAI;IAAC;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3BhD,OAAA;MAAA4C,QAAA,GAAG,WAAS,EAAC9B,eAAe,CAACZ,KAAK,CAACsD,OAAO,CAAC;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDhD,OAAA;MAAA4C,QAAA,GAAG,UAAQ,EAAC9B,eAAe,CAACZ,KAAK,CAACuD,MAAM,CAAC;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9ChD,OAAA;MAAA4C,QAAA,EAAI1C,KAAK,CAACwD;IAAG;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEV,CAAC;AAAC7C,EAAA,CA1GIF,KAAK;AAAA0D,EAAA,GAAL1D,KAAK;AA4GX,eAAeA,KAAK;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}