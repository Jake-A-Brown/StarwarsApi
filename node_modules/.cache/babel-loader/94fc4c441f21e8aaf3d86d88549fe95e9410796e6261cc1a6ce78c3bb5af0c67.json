{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Movie\\\\MoviePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./MoviePage.css\";\nimport MovieImage from \"./MovieImage\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoviePage = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [characterDetails, setCharacterDetails] = useState({});\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [isFetch, setIsFetch] = useState(true);\n  const handleMovies = async () => {\n    try {\n      setIsFetch(false);\n      setLoading(true);\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      const data = await response.json();\n      setMovies(data.results);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching movies:\", error);\n      setLoading(false);\n    }\n  };\n  const fetchCharacterDetails = async movie => {\n    try {\n      const characterPromises = movie.characters.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const characters = await Promise.all(characterPromises);\n      const characterDetailsMap = {};\n      characters.forEach(character => {\n        characterDetailsMap[character.url] = character;\n      });\n      setCharacterDetails({\n        ...characterDetails,\n        [movie.url]: characterDetailsMap\n      });\n    } catch (error) {\n      console.error(\"Error fetching character details:\", error);\n    }\n  };\n  const handleCharacterButtonClick = async movie => {\n    if (!characterDetails[movie.url]) {\n      await fetchCharacterDetails(movie);\n    }\n    setSelectedMovie(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviepage-container\",\n    children: [isFetch && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMovies,\n      children: \"Motion Picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: movies.map(result => {\n        const movieInfo = MovieImage.find(movie => movie.title === result.title);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Star Wars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [result.title, \" Episode \", result.episode_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movieInfo ? movieInfo.movieImageSrc : \"\",\n            alt: result.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Release Date: \", result.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Director: \", result.director]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Producer: \", result.producer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: result.opening_crawl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCharacterButtonClick(result),\n            children: \"Show Characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), selectedMovie && selectedMovie.url === result.url && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Characters:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), characterDetails[result.url] && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: result.characters.map(characterURL => {\n                var _characterDetails$res, _characterDetails$res2;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: (_characterDetails$res2 = characterDetails[result.url][characterURL]) === null || _characterDetails$res2 === void 0 ? void 0 : _characterDetails$res2.name\n                }, (_characterDetails$res = characterDetails[result.url][characterURL]) === null || _characterDetails$res === void 0 ? void 0 : _characterDetails$res.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, result.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviePage, \"CoSmPxcg9hn0RYnzPl2AgkuvrEc=\");\n_c = MoviePage;\nexport default MoviePage;\nvar _c;\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["React","useState","MovieImage","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviePage","_s","movies","setMovies","loading","setLoading","characterDetails","setCharacterDetails","selectedMovie","setSelectedMovie","isFetch","setIsFetch","handleMovies","response","fetch","data","json","results","error","console","fetchCharacterDetails","movie","characterPromises","characters","map","url","Promise","all","characterDetailsMap","forEach","character","handleCharacterButtonClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","result","movieInfo","find","title","episode_id","src","movieImageSrc","alt","release_date","director","producer","opening_crawl","characterURL","_characterDetails$res","_characterDetails$res2","name","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Movie/MoviePage.js"],"sourcesContent":["\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./MoviePage.css\";\r\nimport MovieImage from \"./MovieImage\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nconst MoviePage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [characterDetails, setCharacterDetails] = useState({});\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [isFetch, setIsFetch] = useState(true);\r\n\r\n  const handleMovies = async () => {\r\n    try {\r\n      setIsFetch(false);\r\n      setLoading(true);\r\n\r\n      const response = await fetch(\"https://swapi.dev/api/films/\");\r\n      const data = await response.json();\r\n\r\n      setMovies(data.results);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching movies:\", error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchCharacterDetails = async (movie) => {\r\n    try {\r\n      const characterPromises = movie.characters.map(async (url) => {\r\n        const response = await fetch(url);\r\n        return response.json();\r\n      });\r\n\r\n      const characters = await Promise.all(characterPromises);\r\n\r\n      const characterDetailsMap = {};\r\n      characters.forEach((character) => {\r\n        characterDetailsMap[character.url] = character;\r\n      });\r\n\r\n      setCharacterDetails({\r\n        ...characterDetails,\r\n        [movie.url]: characterDetailsMap,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching character details:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCharacterButtonClick = async (movie) => {\r\n    if (!characterDetails[movie.url]) {\r\n      await fetchCharacterDetails(movie);\r\n    }\r\n    setSelectedMovie(movie);\r\n  };\r\n\r\n  return (\r\n    <div className=\"moviepage-container\">\r\n      {isFetch && <button onClick={handleMovies}>Motion Picture</button>}\r\n      {loading && (\r\n        <div className=\"loading-bar\">\r\n          <Loader />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"movies-container\">\r\n        {movies.map((result) => {\r\n          const movieInfo = MovieImage.find(\r\n            (movie) => movie.title === result.title\r\n          );\r\n\r\n          return (\r\n            <div className=\"movie-items\" key={result.title}>\r\n              <h4>Star Wars</h4>\r\n              <h4>\r\n                {result.title} Episode {result.episode_id}\r\n              </h4>\r\n              <img\r\n                src={movieInfo ? movieInfo.movieImageSrc : \"\"}\r\n                alt={result.title}\r\n              />\r\n              <div>Release Date: {result.release_date}</div>\r\n              <div>Director: {result.director}</div>\r\n              <div>Producer: {result.producer}</div>\r\n              <p>{result.opening_crawl}</p>\r\n\r\n              <button onClick={() => handleCharacterButtonClick(result)}>\r\n                Show Characters\r\n              </button>\r\n\r\n              {selectedMovie && selectedMovie.url === result.url && (\r\n                <>\r\n                  <h5>Characters:</h5>\r\n                  {characterDetails[result.url] && (\r\n                    <ul>\r\n                      {result.characters.map((characterURL) => (\r\n                        <li\r\n                          key={characterDetails[result.url][characterURL]?.name}\r\n                        >\r\n                          {characterDetails[result.url][characterURL]?.name}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div>\r\n        {/**\r\n         * Additional information about species, planets, vehicles, and starships can be fetched and displayed here.\r\n         */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFD,UAAU,CAAC,KAAK,CAAC;MACjBN,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElCb,SAAS,CAACY,IAAI,CAACE,OAAO,CAAC;MACvBZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9Cb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMe,qBAAqB,GAAG,MAAOC,KAAK,IAAK;IAC7C,IAAI;MACF,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,UAAU,CAACC,GAAG,CAAC,MAAOC,GAAG,IAAK;QAC5D,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAACW,GAAG,CAAC;QACjC,OAAOZ,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC;MAEF,MAAMO,UAAU,GAAG,MAAMG,OAAO,CAACC,GAAG,CAACL,iBAAiB,CAAC;MAEvD,MAAMM,mBAAmB,GAAG,CAAC,CAAC;MAC9BL,UAAU,CAACM,OAAO,CAAEC,SAAS,IAAK;QAChCF,mBAAmB,CAACE,SAAS,CAACL,GAAG,CAAC,GAAGK,SAAS;MAChD,CAAC,CAAC;MAEFvB,mBAAmB,CAAC;QAClB,GAAGD,gBAAgB;QACnB,CAACe,KAAK,CAACI,GAAG,GAAGG;MACf,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAED,MAAMa,0BAA0B,GAAG,MAAOV,KAAK,IAAK;IAClD,IAAI,CAACf,gBAAgB,CAACe,KAAK,CAACI,GAAG,CAAC,EAAE;MAChC,MAAML,qBAAqB,CAACC,KAAK,CAAC;IACpC;IACAZ,gBAAgB,CAACY,KAAK,CAAC;EACzB,CAAC;EAED,oBACExB,OAAA;IAAKmC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,GACjCvB,OAAO,iBAAIb,OAAA;MAAQqC,OAAO,EAAEtB,YAAa;MAAAqB,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjElC,OAAO,iBACNP,OAAA;MAAKmC,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BpC,OAAA,CAACF,MAAM;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACN,eAEDzC,OAAA;MAAKmC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9B/B,MAAM,CAACsB,GAAG,CAAEe,MAAM,IAAK;QACtB,MAAMC,SAAS,GAAG9C,UAAU,CAAC+C,IAAI,CAC9BpB,KAAK,IAAKA,KAAK,CAACqB,KAAK,KAAKH,MAAM,CAACG,KACpC,CAAC;QAED,oBACE7C,OAAA;UAAKmC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BpC,OAAA;YAAAoC,QAAA,EAAI;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBzC,OAAA;YAAAoC,QAAA,GACGM,MAAM,CAACG,KAAK,EAAC,WAAS,EAACH,MAAM,CAACI,UAAU;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eACLzC,OAAA;YACE+C,GAAG,EAAEJ,SAAS,GAAGA,SAAS,CAACK,aAAa,GAAG,EAAG;YAC9CC,GAAG,EAAEP,MAAM,CAACG;UAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,eACFzC,OAAA;YAAAoC,QAAA,GAAK,gBAAc,EAACM,MAAM,CAACQ,YAAY;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC9CzC,OAAA;YAAAoC,QAAA,GAAK,YAAU,EAACM,MAAM,CAACS,QAAQ;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtCzC,OAAA;YAAAoC,QAAA,GAAK,YAAU,EAACM,MAAM,CAACU,QAAQ;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtCzC,OAAA;YAAAoC,QAAA,EAAIM,MAAM,CAACW;UAAa;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAE7BzC,OAAA;YAAQqC,OAAO,EAAEA,CAAA,KAAMH,0BAA0B,CAACQ,MAAM,CAAE;YAAAN,QAAA,EAAC;UAE3D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAER9B,aAAa,IAAIA,aAAa,CAACiB,GAAG,KAAKc,MAAM,CAACd,GAAG,iBAChD5B,OAAA,CAAAE,SAAA;YAAAkC,QAAA,gBACEpC,OAAA;cAAAoC,QAAA,EAAI;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACnBhC,gBAAgB,CAACiC,MAAM,CAACd,GAAG,CAAC,iBAC3B5B,OAAA;cAAAoC,QAAA,EACGM,MAAM,CAAChB,UAAU,CAACC,GAAG,CAAE2B,YAAY;gBAAA,IAAAC,qBAAA,EAAAC,sBAAA;gBAAA,oBAClCxD,OAAA;kBAAAoC,QAAA,GAAAoB,sBAAA,GAGG/C,gBAAgB,CAACiC,MAAM,CAACd,GAAG,CAAC,CAAC0B,YAAY,CAAC,cAAAE,sBAAA,uBAA1CA,sBAAA,CAA4CC;gBAAI,IAAAF,qBAAA,GAF5C9C,gBAAgB,CAACiC,MAAM,CAACd,GAAG,CAAC,CAAC0B,YAAY,CAAC,cAAAC,qBAAA,uBAA1CA,qBAAA,CAA4CE,IAAI;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAGnD,CAAC;cAAA,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CACL;UAAA,eACD,CACH;QAAA,GAjC+BC,MAAM,CAACG,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkCzC,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENzC,OAAA;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrC,EAAA,CAnHID,SAAS;AAAAuD,EAAA,GAATvD,SAAS;AAqHf,eAAeA,SAAS;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}