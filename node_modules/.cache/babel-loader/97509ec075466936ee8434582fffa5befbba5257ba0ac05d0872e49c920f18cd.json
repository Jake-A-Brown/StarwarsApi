{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Home\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Function to handle the search logic and API request\n  const handleSearch = async (input, category) => {\n    try {\n      if (!category) {\n        console.error('Please select a category.');\n        return;\n      }\n      // Make your API request here using 'input' and 'category'\n      // For example, you can use the fetch function:\n      const response = await fetch(`https://swapi.dev/api/${category}/?search=${input}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setSearchResults(data.results);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Star Wars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), \"Search Results\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: result.url,\n            target: \"_blank\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [result.name, result.title]\n            }, result.url, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: result.episode_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: result.opening_crawl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"yyVBuiEzaYu8nxmfiuyN+Jj3pbw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Link","SearchBar","jsxDEV","_jsxDEV","Home","_s","searchResults","setSearchResults","handleSearch","input","category","console","error","response","fetch","ok","Error","data","json","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","map","result","to","url","target","name","title","episode_id","opening_crawl","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Home/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\r\n\r\nconst Home = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  // Function to handle the search logic and API request\r\n  const handleSearch = async (input, category) => {\r\n    try {\r\n\r\n      if (!category) {\r\n        console.error('Please select a category.');\r\n        return;\r\n      }\r\n      // Make your API request here using 'input' and 'category'\r\n      // For example, you can use the fetch function:\r\n      const response = await fetch(\r\n        `https://swapi.dev/api/${category}/?search=${input}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setSearchResults(data.results);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div>Star Wars</div>\r\n      <div className=\"search-bar-container\">\r\n        <SearchBar onSearch={handleSearch} />\r\n      </div>\r\n      Search Results\r\n      <div>\r\n        <ul>\r\n          {searchResults.map((result) => (\r\n            <div>\r\n            <Link to={result.url} target='_blank'>\r\n              <div key={result.url}>\r\n                  {result.name}\r\n                  {result.title}\r\n              </div>\r\n            </Link> \r\n            <div>{result.episode_id}</div>\r\n            <p>{result.opening_crawl}</p>\r\n            </div>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}