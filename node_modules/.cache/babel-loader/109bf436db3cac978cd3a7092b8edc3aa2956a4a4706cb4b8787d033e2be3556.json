{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Planet\\\\WookiePlanet.js\",\n  _s = $RefreshSig$();\n// import React, { useCallback, useState, useEffect } from \"react\";\n// import PlanetImage from \"./PlanetImage\";\n// import \"./Planets.css\";\n\n// const formatDate = (dateString) => {\n//   const date = new Date(dateString);\n//   return date.toLocaleString(); // Adjust this to your preferred date format\n// };\n\n// const wookieF = `format=wookiee`;\n\n// const WookiePlanet = () => {\n//     const [currentPage, setCurrentPage] = useState(0);\n\n//     //results is in wookiePlanets need to grab this url\n//     const [wookieePlanets, setWookieePlanets] = useState(null,[]);\n//     const [nextWookieeFormat, setNextWookieeFormat] = useState(\n//       `https://swapi.dev/api/planets/?page=1&format=wookiee`\n//     );\n//     const [previousWookieeFormat, setPreviousWookieeFormat] = useState(\n//       `https://swapi.dev/api/planets/?page=${currentPage}&${wookieF}`\n//     );\n\n//     const [nextBtn, setNextBtn] = useState(false);\n//     const [prevBtn, setPrevBtn] = useState(false);\n//     const [isFetch, setIsFetch] = useState(true);\n//     const [loading, setLoading] = useState(false);\n//     const [planetDisplay, setPlanetDisplay] = useState(false);\n//     const [pageDisplay, setPageDisplay] = useState(false);\n\n//     const handleWookieeFormat = useCallback(async (url) => {\n//         try {\n\n//           setLoading(true);\n//           setPageDisplay(false);\n//           setIsFetch(false);\n//           setPlanetDisplay(false);\n//           setNextBtn(false);\n//           setPrevBtn(false);\n\n//           const response = await fetch(url);\n//           const data = await response.json();\n\n//           setNextBtn(!!data.next);\n//           setPrevBtn(!!data.previous);\n//           setPlanetDisplay(true);\n//           setPageDisplay(true);\n\n//           setWookieePlanets(data.results);\n//           setNextWookieeFormat(data.next);\n//           setPreviousWookieeFormat(data.previous);\n//           setLoading(false);\n//         } catch (error) {}\n\n//       }, []);\n\n//       const nextWookieePageHandler = () => {\n//         if (nextWookieeFormat) {\n//           handleWookieeFormat(nextWookieeFormat); \n//           setCurrentPage(currentPage+1);\n//         }\n//       };\n\n//       const backWookieePageHandler = () => {\n//         if (previousWookieeFormat) {\n//           setCurrentPage(currentPage-1);\n//           handleWookieeFormat(previousWookieeFormat); \n//         }\n//       };\n//   return (\n//     <div className=\"planets-container\">\n\n//     {loading && <div className=\"loading-bar\">Loading...</div>}\n\n//     {pageDisplay && (<div>Page {currentPage} </div> )}\n\n//     <div>\n//     {isFetch && (\n//         <button onClick={nextWookieePageHandler}>Wookiee Planets of StarWars</button>\n//       )}\n//       {prevBtn && (\n//         <button onClick={backWookieePageHandler} disabled={!previousWookieeFormat}>\n//           Back\n//         </button>\n//       )}\n//       {nextBtn && (\n//         <button onClick={nextWookieePageHandler} disabled={!nextWookieeFormat}>\n//           Next\n//         </button>\n//       )}\n\n//     </div>\n\n//     <div>\n//       {wookieePlanets ? (\n//         <div>\n//           <h2>Wookiee Data</h2>\n//           <pre>{JSON.stringify(wookieePlanets, null, 2)}</pre>\n//         </div>\n//       ) : (\n//         <p>Loading Wookiee data...</p>\n//       )}\n//     </div>\n\n//     {planetDisplay && (\n//       <div className=\"planets-grid\">\n\n//         {wookieePlanets.map((result, index) => {\n\n//           const planetInfo = PlanetImage.find(\n//             (planet) => planet.name === result.name\n//           );\n\n//           return (\n//             <div key={result.name} className=\"planets-result-container\">\n//               <div className=\"planets-items\">\n\n//                 <h2>{result.whrascwo}</h2>\n//                 <p>{result.rcooaoraaoahoowh_akworcahoowa}</p>\n//                 <img\n//                   src={planetInfo ? planetInfo.imageSrc : \"\"}\n//                   alt={result.name}\n//                 /> \n\n//                  <p>{planetInfo.description}</p> \n//                  <p>Rotation Period: {result.rotation_period}</p>\n//                 <p>Orbital Period: {result.orbital_period}</p>\n//                 <p>Diameter: {result.diameter}</p>\n//                 <p>Climate: {result.climate}</p>\n//                 <p>Gravity: {result.gravity}</p>\n//                 <p>Terrain: {result.terrain}</p>\n//                 <p>Surface Water: {result.surface_water}</p>\n//                 <p>Population: {result.population}</p> \n//                  <h5>Created: {formatDate(result.created)}</h5>\n//                 <h5>Edited: {formatDate(result.edited)}</h5>\n//                 <h5>URL: {result.url}</h5> \n//               </div>\n//             </div>\n//           );\n//         })}\n//       </div>\n//     )}\n\n//       {pageDisplay && (<div>Page {currentPage} </div> )}\n\n//     <div>\n//       {prevBtn && (\n//         <button onClick={backWookieePageHandler} disabled={!previousWookieeFormat}>\n//           Back\n//         </button>\n//       )}\n//       {nextBtn && (\n//         <button onClick={nextWookieePageHandler} disabled={!nextWookieeFormat}>\n//           Next\n//         </button>\n//       )}\n\n//     </div>\n//   </div>\n//   );\n// };\n\n// export default WookiePlanet;\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport PlanetImage from './PlanetImage';\nimport './Planets.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  const date = new Date(dateString);\n  return date.toLocaleString(); // Adjust this to your preferred date format\n};\n\nconst WookiePlanet = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1); // Starting from page 1\n\n  const [wookieePlanets, setWookieePlanets] = useState([]);\n  const [nextWookieeFormat, setNextWookieeFormat] = useState(null);\n  const [previousWookieeFormat, setPreviousWookieeFormat] = useState(null);\n  const [nextBtn, setNextBtn] = useState(false);\n  const [prevBtn, setPrevBtn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [planetDisplay, setPlanetDisplay] = useState(false);\n  const handleWookieeFormat = useCallback(async url => {\n    try {\n      setLoading(true);\n      const response = await fetch(url);\n      const data = await response.json();\n      setNextBtn(!!data.next);\n      setPrevBtn(!!data.previous);\n      setPlanetDisplay(true);\n      setWookieePlanets(data.results);\n      setNextWookieeFormat(data.akrcwohoahoohuc);\n      setPreviousWookieeFormat(data.previous);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching Wookiee data:', error);\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    const initialFetch = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`https://swapi.dev/api/planets/?page=${currentPage}&format=wookiee`);\n        const data = await response.json();\n        setNextBtn(!!data.next);\n        setPrevBtn(!!data.previous);\n        setPlanetDisplay(true);\n        setWookieePlanets(data.results);\n        setNextWookieeFormat(data.akrcwohoahoohuc);\n        setPreviousWookieeFormat(data.previous);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching initial Wookiee data:', error);\n        setLoading(false);\n      }\n    };\n    initialFetch();\n  }, [currentPage]);\n  const nextWookieePageHandler = () => {\n    if (nextWookieeFormat) {\n      setCurrentPage(prevPage => prevPage + 1);\n    }\n  };\n  const backWookieePageHandler = () => {\n    if (previousWookieeFormat) {\n      setCurrentPage(prevPage => prevPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planets-container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextWookieePageHandler,\n        children: \"Wookiee Planets of StarWars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), prevBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backWookieePageHandler,\n        disabled: !previousWookieeFormat,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), nextBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextWookieePageHandler,\n        disabled: !nextWookieeFormat,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), planetDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planets-grid\",\n      children: wookieePlanets.map(result => {\n        const planetInfo = PlanetImage.find(planet => planet.name === result.name);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planets-result-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"planets-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: result.whrascwo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: result.rcooaoraaoahoowh_akworcahoowa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: planetInfo ? planetInfo.imageSrc : '',\n              alt: result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: planetInfo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Rotation Period: \", result.rotation_period]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Orbital Period: \", result.orbital_period]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Diameter: \", result.diameter]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Climate: \", result.climate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Gravity: \", result.gravity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Terrain: \", result.terrain]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Surface Water: \", result.surface_water]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Population: \", result.population]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Created: \", formatDate(result.created)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Edited: \", formatDate(result.edited)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"URL: \", result.url]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)\n        }, result.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prevBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backWookieePageHandler,\n        disabled: !previousWookieeFormat,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), nextBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextWookieePageHandler,\n        disabled: !nextWookieeFormat,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n_s(WookiePlanet, \"wim61h12f38mkBMLykyZ2Q8zL8Y=\");\n_c = WookiePlanet;\nexport default WookiePlanet;\nvar _c;\n$RefreshReg$(_c, \"WookiePlanet\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","PlanetImage","jsxDEV","_jsxDEV","formatDate","dateString","date","Date","toLocaleString","WookiePlanet","_s","currentPage","setCurrentPage","wookieePlanets","setWookieePlanets","nextWookieeFormat","setNextWookieeFormat","previousWookieeFormat","setPreviousWookieeFormat","nextBtn","setNextBtn","prevBtn","setPrevBtn","loading","setLoading","planetDisplay","setPlanetDisplay","handleWookieeFormat","url","response","fetch","data","json","next","previous","results","akrcwohoahoohuc","error","console","initialFetch","nextWookieePageHandler","prevPage","backWookieePageHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","result","planetInfo","find","planet","name","whrascwo","rcooaoraaoahoowh_akworcahoowa","src","imageSrc","alt","description","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","created","edited","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Planet/WookiePlanet.js"],"sourcesContent":["// import React, { useCallback, useState, useEffect } from \"react\";\r\n// import PlanetImage from \"./PlanetImage\";\r\n// import \"./Planets.css\";\r\n\r\n// const formatDate = (dateString) => {\r\n//   const date = new Date(dateString);\r\n//   return date.toLocaleString(); // Adjust this to your preferred date format\r\n// };\r\n\r\n// const wookieF = `format=wookiee`;\r\n\r\n// const WookiePlanet = () => {\r\n//     const [currentPage, setCurrentPage] = useState(0);\r\n\r\n//     //results is in wookiePlanets need to grab this url\r\n//     const [wookieePlanets, setWookieePlanets] = useState(null,[]);\r\n//     const [nextWookieeFormat, setNextWookieeFormat] = useState(\r\n//       `https://swapi.dev/api/planets/?page=1&format=wookiee`\r\n//     );\r\n//     const [previousWookieeFormat, setPreviousWookieeFormat] = useState(\r\n//       `https://swapi.dev/api/planets/?page=${currentPage}&${wookieF}`\r\n//     );\r\n\r\n//     const [nextBtn, setNextBtn] = useState(false);\r\n//     const [prevBtn, setPrevBtn] = useState(false);\r\n//     const [isFetch, setIsFetch] = useState(true);\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [planetDisplay, setPlanetDisplay] = useState(false);\r\n//     const [pageDisplay, setPageDisplay] = useState(false);\r\n\r\n//     const handleWookieeFormat = useCallback(async (url) => {\r\n//         try {\r\n    \r\n//           setLoading(true);\r\n//           setPageDisplay(false);\r\n//           setIsFetch(false);\r\n//           setPlanetDisplay(false);\r\n//           setNextBtn(false);\r\n//           setPrevBtn(false);\r\n    \r\n//           const response = await fetch(url);\r\n//           const data = await response.json();\r\n    \r\n//           setNextBtn(!!data.next);\r\n//           setPrevBtn(!!data.previous);\r\n//           setPlanetDisplay(true);\r\n//           setPageDisplay(true);\r\n    \r\n//           setWookieePlanets(data.results);\r\n//           setNextWookieeFormat(data.next);\r\n//           setPreviousWookieeFormat(data.previous);\r\n//           setLoading(false);\r\n//         } catch (error) {}\r\n    \r\n//       }, []);\r\n\r\n//       const nextWookieePageHandler = () => {\r\n//         if (nextWookieeFormat) {\r\n//           handleWookieeFormat(nextWookieeFormat); \r\n//           setCurrentPage(currentPage+1);\r\n//         }\r\n//       };\r\n    \r\n//       const backWookieePageHandler = () => {\r\n//         if (previousWookieeFormat) {\r\n//           setCurrentPage(currentPage-1);\r\n//           handleWookieeFormat(previousWookieeFormat); \r\n//         }\r\n//       };\r\n//   return (\r\n//     <div className=\"planets-container\">\r\n\r\n//     {loading && <div className=\"loading-bar\">Loading...</div>}\r\n\r\n//     {pageDisplay && (<div>Page {currentPage} </div> )}\r\n\r\n//     <div>\r\n//     {isFetch && (\r\n//         <button onClick={nextWookieePageHandler}>Wookiee Planets of StarWars</button>\r\n//       )}\r\n//       {prevBtn && (\r\n//         <button onClick={backWookieePageHandler} disabled={!previousWookieeFormat}>\r\n//           Back\r\n//         </button>\r\n//       )}\r\n//       {nextBtn && (\r\n//         <button onClick={nextWookieePageHandler} disabled={!nextWookieeFormat}>\r\n//           Next\r\n//         </button>\r\n//       )}\r\n\r\n//     </div>\r\n\r\n//     <div>\r\n//       {wookieePlanets ? (\r\n//         <div>\r\n//           <h2>Wookiee Data</h2>\r\n//           <pre>{JSON.stringify(wookieePlanets, null, 2)}</pre>\r\n//         </div>\r\n//       ) : (\r\n//         <p>Loading Wookiee data...</p>\r\n//       )}\r\n//     </div>\r\n\r\n//     {planetDisplay && (\r\n//       <div className=\"planets-grid\">\r\n\r\n//         {wookieePlanets.map((result, index) => {\r\n\r\n//           const planetInfo = PlanetImage.find(\r\n//             (planet) => planet.name === result.name\r\n//           );\r\n\r\n//           return (\r\n//             <div key={result.name} className=\"planets-result-container\">\r\n//               <div className=\"planets-items\">\r\n\r\n//                 <h2>{result.whrascwo}</h2>\r\n//                 <p>{result.rcooaoraaoahoowh_akworcahoowa}</p>\r\n//                 <img\r\n//                   src={planetInfo ? planetInfo.imageSrc : \"\"}\r\n//                   alt={result.name}\r\n//                 /> \r\n\r\n//                  <p>{planetInfo.description}</p> \r\n//                  <p>Rotation Period: {result.rotation_period}</p>\r\n//                 <p>Orbital Period: {result.orbital_period}</p>\r\n//                 <p>Diameter: {result.diameter}</p>\r\n//                 <p>Climate: {result.climate}</p>\r\n//                 <p>Gravity: {result.gravity}</p>\r\n//                 <p>Terrain: {result.terrain}</p>\r\n//                 <p>Surface Water: {result.surface_water}</p>\r\n//                 <p>Population: {result.population}</p> \r\n//                  <h5>Created: {formatDate(result.created)}</h5>\r\n//                 <h5>Edited: {formatDate(result.edited)}</h5>\r\n//                 <h5>URL: {result.url}</h5> \r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         })}\r\n//       </div>\r\n//     )}\r\n\r\n//       {pageDisplay && (<div>Page {currentPage} </div> )}\r\n\r\n//     <div>\r\n//       {prevBtn && (\r\n//         <button onClick={backWookieePageHandler} disabled={!previousWookieeFormat}>\r\n//           Back\r\n//         </button>\r\n//       )}\r\n//       {nextBtn && (\r\n//         <button onClick={nextWookieePageHandler} disabled={!nextWookieeFormat}>\r\n//           Next\r\n//         </button>\r\n//       )}\r\n\r\n//     </div>\r\n//   </div>\r\n//   );\r\n// };\r\n\r\n// export default WookiePlanet;\r\n\r\n\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PlanetImage from './PlanetImage';\r\nimport './Planets.css';\r\n\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleString(); // Adjust this to your preferred date format\r\n};\r\n\r\nconst WookiePlanet = () => {\r\n  const [currentPage, setCurrentPage] = useState(1); // Starting from page 1\r\n\r\n  const [wookieePlanets, setWookieePlanets] = useState([]);\r\n  const [nextWookieeFormat, setNextWookieeFormat] = useState(null);\r\n  const [previousWookieeFormat, setPreviousWookieeFormat] = useState(null);\r\n\r\n  const [nextBtn, setNextBtn] = useState(false);\r\n  const [prevBtn, setPrevBtn] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [planetDisplay, setPlanetDisplay] = useState(false);\r\n\r\n  const handleWookieeFormat = useCallback(async (url) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      setNextBtn(!!data.next);\r\n      setPrevBtn(!!data.previous);\r\n      setPlanetDisplay(true);\r\n\r\n      setWookieePlanets(data.results);\r\n      setNextWookieeFormat(data.akrcwohoahoohuc);\r\n      setPreviousWookieeFormat(data.previous);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching Wookiee data:', error);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const initialFetch = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(`https://swapi.dev/api/planets/?page=${currentPage}&format=wookiee`);\r\n        const data = await response.json();\r\n\r\n        setNextBtn(!!data.next);\r\n        setPrevBtn(!!data.previous);\r\n        setPlanetDisplay(true);\r\n\r\n        setWookieePlanets(data.results);\r\n        setNextWookieeFormat(data.akrcwohoahoohuc);\r\n        setPreviousWookieeFormat(data.previous);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching initial Wookiee data:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initialFetch();\r\n  }, [currentPage]);\r\n\r\n  const nextWookieePageHandler = () => {\r\n    if (nextWookieeFormat) {\r\n      setCurrentPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  const backWookieePageHandler = () => {\r\n    if (previousWookieeFormat) {\r\n      setCurrentPage((prevPage) => prevPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"planets-container\">\r\n      {loading && <div className=\"loading-bar\">Loading...</div>}\r\n      <div>\r\n        <button onClick={nextWookieePageHandler}>Wookiee Planets of StarWars</button>\r\n        {prevBtn && (\r\n          <button onClick={backWookieePageHandler} disabled={!previousWookieeFormat}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {nextBtn && (\r\n          <button onClick={nextWookieePageHandler} disabled={!nextWookieeFormat}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {planetDisplay && (\r\n        <div className=\"planets-grid\">\r\n          {wookieePlanets.map((result) => {\r\n            const planetInfo = PlanetImage.find((planet) => planet.name === result.name);\r\n\r\n            return (\r\n              <div key={result.name} className=\"planets-result-container\">\r\n                <div className=\"planets-items\">\r\n                  <h2>{result.whrascwo}</h2>\r\n                  <p>{result.rcooaoraaoahoowh_akworcahoowa}</p>\r\n                  <img src={planetInfo ? planetInfo.imageSrc : ''} alt={result.name} />\r\n                  <p>{planetInfo.description}</p>\r\n                  <p>Rotation Period: {result.rotation_period}</p>\r\n                  <p>Orbital Period: {result.orbital_period}</p>\r\n                  <p>Diameter: {result.diameter}</p>\r\n                  <p>Climate: {result.climate}</p>\r\n                  <p>Gravity: {result.gravity}</p>\r\n                  <p>Terrain: {result.terrain}</p>\r\n                  <p>Surface Water: {result.surface_water}</p>\r\n                  <p>Population: {result.population}</p>\r\n                  <h5>Created: {formatDate(result.created)}</h5>\r\n                  <h5>Edited: {formatDate(result.edited)}</h5>\r\n                  <h5>URL: {result.url}</h5>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        {prevBtn && (\r\n          <button onClick={backWookieePageHandler} disabled={!previousWookieeFormat}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {nextBtn && (\r\n          <button onClick={nextWookieePageHandler} disabled={!nextWookieeFormat}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WookiePlanet;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC/D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,UAAU,GAAIC,UAAU,IAAK;EACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,OAAOC,IAAI,CAACE,cAAc,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEnD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgB,iBAAiB,EAAEC,oBAAoB,C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"},"metadata":{},"sourceType":"module","externalDependencies":[]}