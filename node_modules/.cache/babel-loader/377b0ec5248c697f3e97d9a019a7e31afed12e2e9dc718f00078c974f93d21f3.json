{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\components\\\\Sidebar\\\\SideBar.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useRef, useState } from \"react\";\n// import { Link, useLocation } from \"react-router-dom\";\n// import \"./SideBar.css\";\n// import sidebarNavItems from './sidebarNavItems.js';\n\n// const Sidebar = () => {\n//   const [activeIndex, setActiveIndex] = useState(0);\n//   const [openSubMenuIndex, setOpenSubMenuIndex] = useState(null); // State to track open sub-menu\n//   const sidebarRef = useRef();\n//   const location = useLocation();\n\n//   // change active index\n//   useEffect(() => {\n//     const curPath = window.location.pathname.split(\"/\")[1];\n//     const activeItem = sidebarNavItems.findIndex(\n//       (item) => item.section === curPath\n//     );\n//     setActiveIndex(curPath.length === 0 ? 0 : activeItem);\n//   }, [location]);\n\n//   const toggleSubMenu = (index) => {\n//     if (openSubMenuIndex === index) {\n//       setOpenSubMenuIndex(null);\n//     } else {\n//       setOpenSubMenuIndex(index);\n//     }\n//   };\n\n//   return (\n//     <div className=\"sidebar\">\n//       <div className=\"sidebar-logo\">Star Wars</div>\n//       <div ref={sidebarRef} className=\"sidebar-menu\">\n//         {sidebarNavItems.map((item, index) => (\n//           <div key={index}>\n//             <div\n//               onClick={() => toggleSubMenu(index)}\n//               className={`sidebar-menu-item ${\n//                 activeIndex === index ? \"sidebar-active\" : \"\"\n//               }`}\n//             >\n//               <div className=\"sidebar-menu-item-icon\">{item.icon}</div>\n//               <div className=\"sidebar-menu-item-text\">{item.display}</div>\n//             </div>\n//             {item.subItems && openSubMenuIndex === index && (\n//               <div className=\"submenu-wrapper\">\n//                 {item.subItems.map((subItem, subIndex) => (\n//                   <Link to={subItem.to} key={subIndex} className=\"no-underline\">\n//                     <div\n//                       className={`sidebar-submenu-item ${\n//                         activeIndex === index && subIndex === 0\n//                           ? \"sidebar-active\"\n//                           : \"\"\n//                       }`}\n//                     >\n//                       <div className=\"sidebar-submenu-item-text\">\n//                         {subItem.icon} {subItem.display}\n//                       </div>\n//                     </div>\n//                   </Link>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Sidebar;\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./SideBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  _s();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [openSubMenuIndex, setOpenSubMenuIndex] = useState(null);\n  const [planets, setPlanets] = useState([]); // State to store all fetched planets\n  const sidebarRef = useRef();\n  const location = useLocation();\n  useEffect(() => {\n    // Function to fetch all pages of planets\n    const fetchAllPlanets = async () => {\n      let allPlanets = [];\n      let nextPage = \"https://swapi.dev/api/planets/\";\n      while (nextPage) {\n        const response = await fetch(nextPage);\n        const data = await response.json();\n        allPlanets = allPlanets.concat(data.results);\n        nextPage = data.next;\n      }\n      setPlanets(allPlanets);\n    };\n\n    // Call the function to fetch all planets\n    fetchAllPlanets();\n    const curPath = window.location.pathname.split(\"/\")[1];\n    const activeItem = sidebarNavItems.findIndex(item => item.section === curPath);\n    setActiveIndex(curPath.length === 0 ? 0 : activeItem);\n  }, [location]);\n  const toggleSubMenu = index => {\n    if (openSubMenuIndex === index) {\n      setOpenSubMenuIndex(null);\n    } else {\n      setOpenSubMenuIndex(index);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-logo\",\n      children: \"Star Wars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: sidebarRef,\n      className: \"sidebar-menu\",\n      children: sidebarNavItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => toggleSubMenu(index),\n          className: `sidebar-menu-item ${activeIndex === index ? \"sidebar-active\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar-menu-item-icon\",\n            children: item.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar-menu-item-text\",\n            children: item.display\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), item.subItems && openSubMenuIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submenu-wrapper\",\n          children: planets.map((planet, subIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `sidebar-submenu-item ${activeIndex === index && subIndex === 0 ? \"sidebar-active\" : \"\"}`,\n            onClick: () => {\n              // Fetch planet data when a planet is clicked\n              fetch(planet.url).then(response => response.json()).then(data => {\n                // Handle the response data here\n                console.log(data);\n              }).catch(error => console.error(\"Error fetching data:\", error));\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sidebar-submenu-item-text\",\n              children: planet.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this)\n          }, subIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"IGR3p1CIM5N1/Jk7gLBba73aHks=\", false, function () {\n  return [useLocation];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Link","useLocation","jsxDEV","_jsxDEV","Sidebar","_s","activeIndex","setActiveIndex","openSubMenuIndex","setOpenSubMenuIndex","planets","setPlanets","sidebarRef","location","fetchAllPlanets","allPlanets","nextPage","response","fetch","data","json","concat","results","next","curPath","window","pathname","split","activeItem","sidebarNavItems","findIndex","item","section","length","toggleSubMenu","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","onClick","icon","display","subItems","planet","subIndex","url","then","console","log","catch","error","name","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/components/Sidebar/SideBar.js"],"sourcesContent":["// import { useEffect, useRef, useState } from \"react\";\r\n// import { Link, useLocation } from \"react-router-dom\";\r\n// import \"./SideBar.css\";\r\n// import sidebarNavItems from './sidebarNavItems.js';\r\n\r\n// const Sidebar = () => {\r\n//   const [activeIndex, setActiveIndex] = useState(0);\r\n//   const [openSubMenuIndex, setOpenSubMenuIndex] = useState(null); // State to track open sub-menu\r\n//   const sidebarRef = useRef();\r\n//   const location = useLocation();\r\n\r\n//   // change active index\r\n//   useEffect(() => {\r\n//     const curPath = window.location.pathname.split(\"/\")[1];\r\n//     const activeItem = sidebarNavItems.findIndex(\r\n//       (item) => item.section === curPath\r\n//     );\r\n//     setActiveIndex(curPath.length === 0 ? 0 : activeItem);\r\n//   }, [location]);\r\n\r\n//   const toggleSubMenu = (index) => {\r\n//     if (openSubMenuIndex === index) {\r\n//       setOpenSubMenuIndex(null);\r\n//     } else {\r\n//       setOpenSubMenuIndex(index);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"sidebar\">\r\n//       <div className=\"sidebar-logo\">Star Wars</div>\r\n//       <div ref={sidebarRef} className=\"sidebar-menu\">\r\n//         {sidebarNavItems.map((item, index) => (\r\n//           <div key={index}>\r\n//             <div\r\n//               onClick={() => toggleSubMenu(index)}\r\n//               className={`sidebar-menu-item ${\r\n//                 activeIndex === index ? \"sidebar-active\" : \"\"\r\n//               }`}\r\n//             >\r\n//               <div className=\"sidebar-menu-item-icon\">{item.icon}</div>\r\n//               <div className=\"sidebar-menu-item-text\">{item.display}</div>\r\n//             </div>\r\n//             {item.subItems && openSubMenuIndex === index && (\r\n//               <div className=\"submenu-wrapper\">\r\n//                 {item.subItems.map((subItem, subIndex) => (\r\n//                   <Link to={subItem.to} key={subIndex} className=\"no-underline\">\r\n//                     <div\r\n//                       className={`sidebar-submenu-item ${\r\n//                         activeIndex === index && subIndex === 0\r\n//                           ? \"sidebar-active\"\r\n//                           : \"\"\r\n//                       }`}\r\n//                     >\r\n//                       <div className=\"sidebar-submenu-item-text\">\r\n//                         {subItem.icon} {subItem.display}\r\n//                       </div>\r\n//                     </div>\r\n//                   </Link>\r\n//                 ))}\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Sidebar;\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"./SideBar.css\";\r\n\r\nconst Sidebar = () => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [openSubMenuIndex, setOpenSubMenuIndex] = useState(null);\r\n  const [planets, setPlanets] = useState([]); // State to store all fetched planets\r\n  const sidebarRef = useRef();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    // Function to fetch all pages of planets\r\n    const fetchAllPlanets = async () => {\r\n      let allPlanets = [];\r\n      let nextPage = \"https://swapi.dev/api/planets/\";\r\n\r\n      while (nextPage) {\r\n        const response = await fetch(nextPage);\r\n        const data = await response.json();\r\n        allPlanets = allPlanets.concat(data.results);\r\n        nextPage = data.next;\r\n      }\r\n\r\n      setPlanets(allPlanets);\r\n    };\r\n\r\n    // Call the function to fetch all planets\r\n    fetchAllPlanets();\r\n\r\n    const curPath = window.location.pathname.split(\"/\")[1];\r\n    const activeItem = sidebarNavItems.findIndex(\r\n      (item) => item.section === curPath\r\n    );\r\n    setActiveIndex(curPath.length === 0 ? 0 : activeItem);\r\n  }, [location]);\r\n\r\n  const toggleSubMenu = (index) => {\r\n    if (openSubMenuIndex === index) {\r\n      setOpenSubMenuIndex(null);\r\n    } else {\r\n      setOpenSubMenuIndex(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-logo\">Star Wars</div>\r\n      <div ref={sidebarRef} className=\"sidebar-menu\">\r\n        {sidebarNavItems.map((item, index) => (\r\n          <div key={index}>\r\n            <div\r\n              onClick={() => toggleSubMenu(index)}\r\n              className={`sidebar-menu-item ${\r\n                activeIndex === index ? \"sidebar-active\" : \"\"\r\n              }`}\r\n            >\r\n              <div className=\"sidebar-menu-item-icon\">{item.icon}</div>\r\n              <div className=\"sidebar-menu-item-text\">{item.display}</div>\r\n            </div>\r\n            {item.subItems && openSubMenuIndex === index && (\r\n              <div className=\"submenu-wrapper\">\r\n                {planets.map((planet, subIndex) => (\r\n                  <div\r\n                    key={subIndex}\r\n                    className={`sidebar-submenu-item ${\r\n                      activeIndex === index && subIndex === 0\r\n                        ? \"sidebar-active\"\r\n                        : \"\"\r\n                    }`}\r\n                    onClick={() => {\r\n                      // Fetch planet data when a planet is clicked\r\n                      fetch(planet.url)\r\n                        .then((response) => response.json())\r\n                        .then((data) => {\r\n                          // Handle the response data here\r\n                          console.log(data);\r\n                        })\r\n                        .catch((error) =>\r\n                          console.error(\"Error fetching data:\", error)\r\n                        );\r\n                    }}\r\n                  >\r\n                    <div className=\"sidebar-submenu-item-text\">\r\n                      {planet.name}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}