{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\People\\\\PeoplePage.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport PeopleImage from \"./PeopleImage\";\nimport \"./PeoplePage.css\";\nimport Loader from \"../../components/Loader/Loader\";\n\n/** formatting time */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  const date = new Date(dateString);\n  return date.toLocaleString(); // Adjust this to your preferred date format\n};\n\nconst PeoplePage = () => {\n  _s();\n  /** variables */\n  const [currentPage, setCurrentPage] = useState(0);\n  const [people, setPeople] = useState([]);\n  const [nextPageUrl, setNextPageUrl] = useState(`https://swapi.dev/api/people/?page=`);\n  const [previousPageUrl, setPreviousPageUrl] = useState(`https://swapi.dev/api/people/?page=`);\n  const [nextBtn, setNextBtn] = useState(false);\n  const [prevBtn, setPrevBtn] = useState(false);\n  const [isFetch, setIsFetch] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [peopleDisplay, setPeopleDisplay] = useState(false);\n  const [pageDisplay, setPageDisplay] = useState(false);\n  const [selectedPerson, setSelectedPerson] = useState(null);\n  const [filmDetails, setFilmDetails] = useState({});\n  const [filmButtonClickedMap, setFilmButtonClickedMap] = useState({});\n  const [speciesDetails, setSpeciesDetails] = useState({});\n  const [speciesButtonClickedMap, setSpeciesButtonClickedMap] = useState({});\n\n  /** api calls and GUI experience */\n  const handlePeople = useCallback(async url => {\n    try {\n      setLoading(true);\n      setIsFetch(false);\n      setPeopleDisplay(false);\n      setPageDisplay(false);\n      setNextBtn(false);\n      setPrevBtn(false);\n      const response = await fetch(url);\n      const data = await response.json();\n      setNextBtn(!!data.next);\n      setPrevBtn(!!data.previous);\n      setPeopleDisplay(true);\n      setPageDisplay(true);\n      const peopleWithHomeworld = await Promise.all(data.results.map(async person => {\n        const homeworldName = await fetchHomeworld(person.homeworld);\n        return {\n          ...person,\n          homeworldName\n        };\n      }));\n      setPeople(peopleWithHomeworld);\n      setNextPageUrl(data.next);\n      setPreviousPageUrl(data.previous);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching people:\", error);\n    }\n  }, []);\n\n  /** fetching home world info for characters */\n  const fetchHomeworld = async homeworldUrl => {\n    try {\n      const response = await fetch(homeworldUrl);\n      const homeworldData = await response.json();\n      return homeworldData.name;\n    } catch (error) {\n      console.error(\"Error fetching homeworld:\", error);\n      return \"Unknown\";\n    }\n  };\n\n  // fetch details for each button\n  const fetchFilmDetails = async people => {\n    try {\n      setFilmButtonClickedMap({\n        ...filmButtonClickedMap,\n        [people.url]: true\n      });\n      setLoading(true);\n      const filmPromises = people.films.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const films = await Promise.all(filmPromises);\n      const filmDetailsMap = {};\n      films.forEach(film => {\n        filmDetailsMap[film.url] = film;\n        setLoading(false);\n      });\n      setFilmDetails({\n        ...filmDetailsMap,\n        [people.url]: filmDetailsMap\n      });\n    } catch (error) {\n      console.error(\"Error fetching film details:\", error);\n    }\n  };\n  const fetchSpeciesDetails = async people => {\n    try {\n      setSpeciesButtonClickedMap({\n        ...speciesButtonClickedMap,\n        [people.url]: true\n      });\n      setLoading(true);\n      const speciesPromises = people.species.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const species = await Promise.all(speciesPromises);\n      const speciesDetailsMap = {};\n      species.forEach(species => {\n        speciesDetailsMap[species.url] = species;\n        setLoading(false);\n      });\n      setSpeciesDetails({\n        ...speciesDetailsMap,\n        [people.url]: speciesDetailsMap\n      });\n    } catch (error) {\n      console.error(\"Error fetching species details:\", error);\n    }\n  };\n  const nextPageHandler = () => {\n    if (nextPageUrl) {\n      handlePeople(nextPageUrl);\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const backPageHandler = () => {\n    if (previousPageUrl) {\n      handlePeople(previousPageUrl);\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  // button Click handlers\n  const handleFilmButtonClick = async people => {\n    if (!filmDetails[people.url]) {\n      await fetchFilmDetails(people);\n    }\n    setSelectedPerson(people);\n  };\n  const handleSpeciesButtonClick = async people => {\n    if (!speciesDetails[people.url]) {\n      await fetchSpeciesDetails(people);\n    }\n    setSelectedPerson(people);\n  };\n\n  /** all the rendering */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"people-container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), pageDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Page \", currentPage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 23\n    }, this), isFetch && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextPageHandler,\n      children: \"Characters of StarWars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prevBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), nextBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), peopleDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"people-grid\",\n      children: people.map(result => {\n        const peopleInfo = PeopleImage.find(people => people.name === result.name);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"people-result-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"people-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: peopleInfo.peopleImageSrc,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: peopleInfo ? peopleInfo.peopleImageSrc : \"\",\n                alt: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"people-description\",\n              children: peopleInfo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Height: \", result.height]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Weight: \", result.mass]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hair Color: \", result.hair_color]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Eye Color: \", result.eye_color]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Birth Year: \", result.birth_year]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Gender: \", result.gender]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"HomeWorld: \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: result.url,\n                children: result.homeworldName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Creatd: \", formatDate(result.created)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Edited: \", formatDate(result.edited)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), !filmButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleFilmButtonClick(result),\n              children: \"Show Films\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }, this), !speciesButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSpeciesButtonClick(result),\n              children: \"Show Species\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 21\n            }, this), selectedPerson && selectedPerson.url === result.url && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Films:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 23\n              }, this), filmDetails[result.url] && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: result.films.map(filmURL => {\n                  var _filmDetails$result$u, _filmDetails$result$u2;\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: (_filmDetails$result$u2 = filmDetails[result.url][filmURL]) === null || _filmDetails$result$u2 === void 0 ? void 0 : _filmDetails$result$u2.title\n                  }, (_filmDetails$result$u = filmDetails[result.url][filmURL]) === null || _filmDetails$result$u === void 0 ? void 0 : _filmDetails$result$u.title, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this)\n        }, result.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), pageDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Page \", currentPage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prevBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), nextBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(PeoplePage, \"AMnAW4p8Z5A/cWBWBx+5kFwF+Ms=\");\n_c = PeoplePage;\nexport default PeoplePage;\nvar _c;\n$RefreshReg$(_c, \"PeoplePage\");","map":{"version":3,"names":["React","useCallback","useState","PeopleImage","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","formatDate","dateString","date","Date","toLocaleString","PeoplePage","_s","currentPage","setCurrentPage","people","setPeople","nextPageUrl","setNextPageUrl","previousPageUrl","setPreviousPageUrl","nextBtn","setNextBtn","prevBtn","setPrevBtn","isFetch","setIsFetch","loading","setLoading","peopleDisplay","setPeopleDisplay","pageDisplay","setPageDisplay","selectedPerson","setSelectedPerson","filmDetails","setFilmDetails","filmButtonClickedMap","setFilmButtonClickedMap","speciesDetails","setSpeciesDetails","speciesButtonClickedMap","setSpeciesButtonClickedMap","handlePeople","url","response","fetch","data","json","next","previous","peopleWithHomeworld","Promise","all","results","map","person","homeworldName","fetchHomeworld","homeworld","error","console","homeworldUrl","homeworldData","name","fetchFilmDetails","filmPromises","films","filmDetailsMap","forEach","film","fetchSpeciesDetails","speciesPromises","species","speciesDetailsMap","nextPageHandler","backPageHandler","handleFilmButtonClick","handleSpeciesButtonClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","result","peopleInfo","find","href","peopleImageSrc","target","rel","src","alt","description","height","mass","hair_color","eye_color","birth_year","gender","created","edited","filmURL","_filmDetails$result$u","_filmDetails$result$u2","title","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/People/PeoplePage.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport PeopleImage from \"./PeopleImage\";\r\n\r\nimport \"./PeoplePage.css\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\n/** formatting time */\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleString(); // Adjust this to your preferred date format\r\n};\r\n\r\nconst PeoplePage = () => {\r\n  /** variables */\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [people, setPeople] = useState([]);\r\n  const [nextPageUrl, setNextPageUrl] = useState(\r\n    `https://swapi.dev/api/people/?page=`\r\n  );\r\n  const [previousPageUrl, setPreviousPageUrl] = useState(\r\n    `https://swapi.dev/api/people/?page=`\r\n  );\r\n  const [nextBtn, setNextBtn] = useState(false);\r\n  const [prevBtn, setPrevBtn] = useState(false);\r\n  const [isFetch, setIsFetch] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [peopleDisplay, setPeopleDisplay] = useState(false);\r\n  const [pageDisplay, setPageDisplay] = useState(false);\r\n  const [selectedPerson, setSelectedPerson] = useState(null);\r\n  const [filmDetails, setFilmDetails] = useState({});\r\n  const [filmButtonClickedMap, setFilmButtonClickedMap] = useState({});\r\n  const [speciesDetails, setSpeciesDetails] = useState({});\r\n  const [speciesButtonClickedMap, setSpeciesButtonClickedMap] = useState({});\r\n\r\n  /** api calls and GUI experience */\r\n  const handlePeople = useCallback(async (url) => {\r\n    try {\r\n      setLoading(true);\r\n      setIsFetch(false);\r\n      setPeopleDisplay(false);\r\n      setPageDisplay(false);\r\n      setNextBtn(false);\r\n      setPrevBtn(false);\r\n\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      setNextBtn(!!data.next);\r\n      setPrevBtn(!!data.previous);\r\n      setPeopleDisplay(true);\r\n      setPageDisplay(true);\r\n\r\n      const peopleWithHomeworld = await Promise.all(\r\n        data.results.map(async (person) => {\r\n          const homeworldName = await fetchHomeworld(person.homeworld);\r\n\r\n          return { ...person, homeworldName };\r\n        })\r\n      );\r\n\r\n      setPeople(peopleWithHomeworld);\r\n\r\n      setNextPageUrl(data.next);\r\n      setPreviousPageUrl(data.previous);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching people:\", error);\r\n    }\r\n  }, []);\r\n\r\n  /** fetching home world info for characters */\r\n  const fetchHomeworld = async (homeworldUrl) => {\r\n    try {\r\n      const response = await fetch(homeworldUrl);\r\n      const homeworldData = await response.json();\r\n      return homeworldData.name;\r\n    } catch (error) {\r\n      console.error(\"Error fetching homeworld:\", error);\r\n      return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  // fetch details for each button\r\n  const fetchFilmDetails = async (people) => {\r\n    try {\r\n      setFilmButtonClickedMap({ ...filmButtonClickedMap, [people.url]: true });\r\n      setLoading(true);\r\n      const filmPromises = people.films.map(async (url) => {\r\n        const response = await fetch(url);\r\n        return response.json();\r\n      });\r\n\r\n      const films = await Promise.all(filmPromises);\r\n\r\n      const filmDetailsMap = {};\r\n      films.forEach((film) => {\r\n        filmDetailsMap[film.url] = film;\r\n        setLoading(false);\r\n      });\r\n\r\n      setFilmDetails({\r\n        ...filmDetailsMap,\r\n        [people.url]: filmDetailsMap,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching film details:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchSpeciesDetails = async (people) => {\r\n    try {\r\n      setSpeciesButtonClickedMap({ ...speciesButtonClickedMap, [people.url]: true });\r\n      setLoading(true);\r\n      const speciesPromises = people.species.map(async (url) => {\r\n        const response = await fetch(url);\r\n        return response.json();\r\n      });\r\n\r\n      const species = await Promise.all(speciesPromises);\r\n\r\n      const speciesDetailsMap = {};\r\n      species.forEach((species) => {\r\n        speciesDetailsMap[species.url] = species;\r\n        setLoading(false);\r\n      });\r\n\r\n      setSpeciesDetails({\r\n        ...speciesDetailsMap,\r\n        [people.url]: speciesDetailsMap,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching species details:\", error);\r\n    }\r\n  };\r\n\r\n  const nextPageHandler = () => {\r\n    if (nextPageUrl) {\r\n      handlePeople(nextPageUrl);\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const backPageHandler = () => {\r\n    if (previousPageUrl) {\r\n      handlePeople(previousPageUrl);\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  // button Click handlers\r\n  const handleFilmButtonClick = async (people) => {\r\n    if (!filmDetails[people.url]) {\r\n      await fetchFilmDetails(people);\r\n    }\r\n\r\n    setSelectedPerson(people);\r\n  };\r\n\r\n  const handleSpeciesButtonClick = async (people) => {\r\n    if (!speciesDetails[people.url]) {\r\n      await fetchSpeciesDetails(people);\r\n    }\r\n\r\n    setSelectedPerson(people);\r\n  };\r\n\r\n  /** all the rendering */\r\n  return (\r\n    <div className=\"people-container\">\r\n      {/** loading bar */}\r\n      {loading && (\r\n        <div className=\"loading-bar\">\r\n          {\" \"}\r\n          <Loader />\r\n        </div>\r\n      )}\r\n\r\n      {/** current page */}\r\n      {pageDisplay && <div>Page {currentPage} </div>}\r\n\r\n      {/** button to fetch */}\r\n      {isFetch && (\r\n        <button onClick={nextPageHandler}>Characters of StarWars</button>\r\n      )}\r\n      <div>\r\n        {prevBtn && (\r\n          <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {nextBtn && (\r\n          <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {peopleDisplay && (\r\n        <div className=\"people-grid\">\r\n          {people.map((result) => {\r\n            const peopleInfo = PeopleImage.find(\r\n              (people) => people.name === result.name\r\n            );\r\n\r\n            return (\r\n              <div key={result.name} className=\"people-result-container\">\r\n                <div className=\"people-items\">\r\n                  <h2>{result.name}</h2>\r\n                  <a\r\n                    href={peopleInfo.peopleImageSrc}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <img\r\n                      src={peopleInfo ? peopleInfo.peopleImageSrc : \"\"}\r\n                      alt={result.name}\r\n                    />\r\n                  </a>\r\n\r\n                  <p className=\"people-description\">{peopleInfo.description}</p>\r\n                  <p>Height: {result.height}</p>\r\n                  <p>Weight: {result.mass}</p>\r\n                  <p>Hair Color: {result.hair_color}</p>\r\n                  <p>Eye Color: {result.eye_color}</p>\r\n                  <p>Birth Year: {result.birth_year}</p>\r\n                  <p>Gender: {result.gender}</p>\r\n                  <p>\r\n                    HomeWorld: <a href={result.url}>{result.homeworldName}</a>\r\n                  </p>\r\n                  <h5>Creatd: {formatDate(result.created)}</h5>\r\n                  <h5>Edited: {formatDate(result.edited)}</h5>\r\n                  {/* URL: <a href={result.url}>{result.url}</a> */}\r\n\r\n                  {/*Buttons*/}\r\n                  {!filmButtonClickedMap[result.url] && (\r\n                    <button onClick={() => handleFilmButtonClick(result)}>\r\n                      Show Films\r\n                    </button>\r\n                  )}\r\n\r\n                  {!speciesButtonClickedMap[result.url] && (\r\n                    <button onClick={() => handleSpeciesButtonClick(result)}>\r\n                      Show Species\r\n                    </button>\r\n                  )}\r\n\r\n                  {/* display for details of each button*/}\r\n                  {selectedPerson && selectedPerson.url === result.url && (\r\n                    <>\r\n\r\n                      <h3>Films:</h3>\r\n                      {filmDetails[result.url] && (\r\n                        <div>\r\n                          {result.films.map((filmURL) => (\r\n                            <p key={filmDetails[result.url][filmURL]?.title}>\r\n                              {filmDetails[result.url][filmURL]?.title}\r\n                            </p>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n\r\n                    </>\r\n\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {pageDisplay && <div>Page {currentPage} </div>}\r\n\r\n      <div>\r\n        {prevBtn && (\r\n          <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {nextBtn && (\r\n          <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PeoplePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}