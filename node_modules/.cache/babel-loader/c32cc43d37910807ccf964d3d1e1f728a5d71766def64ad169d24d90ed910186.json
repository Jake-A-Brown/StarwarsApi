{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Species\\\\SpeciesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport SpeciesImage from \"./SpeciesImage\";\nimport './SpeciesPage.css';\nimport Loader from './../../components/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpeciesPage = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0);\n  const [species, setSpecies] = useState([]);\n  const [nextPageUrl, setNextPageUrl] = useState(\"https://swapi.dev/api/species/\");\n  const [previousPageUrl, setPreviousPageUrl] = useState(\"https://swapi.dev/api/species/\");\n  const [selectedSpecies, setSelectedSpecies] = useState(null);\n  const [nextBtn, setNextBtn] = useState(false);\n  const [prevBtn, setPrevBtn] = useState(false);\n  const [isFetch, setIsFetch] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [pageDisplay, setPageDisplay] = useState(false);\n  const [speciesDisplay, setSpeciesDisplay] = useState(false);\n  const [peopleDetails, setPeopleDetails] = useState({});\n  const [filmsDetails, setFilmsDetails] = useState({});\n  const [peopleButtonClickedMap, setPeopleButtonClickedMap] = useState({});\n  const [filmButtonClickedMap, setFilmButtonClickedMap] = useState({});\n  const handleSpecies = useCallback(async url => {\n    try {\n      setLoading(true);\n      setIsFetch(false);\n      setSpeciesDisplay(false);\n      setPageDisplay(false);\n      setNextBtn(false);\n      setPrevBtn(false);\n      const response = await fetch(url);\n      const data = await response.json();\n      setNextBtn(!!data.next);\n      setPrevBtn(!!data.previous);\n      setSpeciesDisplay(true);\n      setPageDisplay(true);\n      setSpecies(data.results);\n      setNextPageUrl(data.next);\n      setPreviousPageUrl(data.previous);\n      setLoading(false);\n    } catch (error) {}\n  }, []);\n\n  // fetch details for each button\n  const fetchPeopleDetails = async species => {\n    try {\n      setPeopleButtonClickedMap({\n        ...peopleButtonClickedMap,\n        [species.url]: true\n      });\n      setLoading(true);\n      const peoplePromises = species.people.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const people = await Promise.all(peoplePromises);\n      const peopleDetailsMap = {};\n      people.forEach(people => {\n        peopleDetailsMap[people.url] = people;\n        setLoading(false);\n      });\n      setPeopleDetails({\n        ...peopleDetailsMap,\n        [species.url]: peopleDetailsMap\n      });\n    } catch (error) {\n      console.error(\"Error fetching people details:\", error);\n    }\n  };\n  const fetchFilmDetails = async species => {\n    try {\n      setFilmButtonClickedMap({\n        ...filmButtonClickedMap,\n        [species.url]: true\n      });\n      setLoading(true);\n      const filmPromises = species.films.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const films = await Promise.all(filmPromises);\n      const filmDetailsMap = {};\n      films.forEach(film => {\n        filmDetailsMap[film.url] = film;\n        setLoading(false);\n      });\n      setFilmsDetails({\n        ...filmDetailsMap,\n        [species.url]: filmDetailsMap\n      });\n    } catch (error) {\n      console.error(\"Error fetching film details:\", error);\n    }\n  };\n\n  // button Click handlers\n  const handlePeopleButtonClick = async species => {\n    if (!peopleDetails[species.url]) {\n      await fetchPeopleDetails(species);\n    }\n    setSelectedSpecies(species);\n  };\n  const handleFilmButtonClick = async species => {\n    if (!filmsDetails[species.url]) {\n      await fetchFilmDetails(species);\n    }\n    setSelectedSpecies(species);\n  };\n  const nextPageHandler = () => {\n    if (nextPageUrl) {\n      handleSpecies(nextPageUrl);\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const backPageHandler = () => {\n    if (previousPageUrl) {\n      handleSpecies(previousPageUrl);\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"species-container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }, this), pageDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Page \", currentPage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prevBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), nextBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), speciesDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"species-grid\",\n      children: species.map(result => {\n        const speciesInfo = SpeciesImage.find(species => species.name === result.name);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"species-result-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"species-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: speciesInfo ? speciesInfo.speciesImgSrc : \"\",\n              alt: result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Classification: \", result.classification]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Designation: \", result.designation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Average height: \", result.average_height]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Skin colors: \", result.skin_colors]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hair colors: \", result.hair_colors]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Eye colors: \", result.eye_colors]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Average lifespan: \", result.average_lifespan]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Language: \", result.language]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Created: \", result.created]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Edited: \", result.edited]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"URL: \", result.url]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), !peopleButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePeopleButtonClick(result),\n              children: \"Show People\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this), !filmButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleFilmButtonClick(result),\n              children: \"Show Films\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this), selectedSpecies && selectedSpecies.url === result.url && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"People:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 23\n              }, this), peopleDetails[result.url] && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: result.people.map(peopleURL => {\n                  var _peopleDetails$result, _peopleDetails$result2;\n                  return /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: peopleDetails,\n                    target: \"_blank\",\n                    rel: \"noreferrer\",\n                    children: (_peopleDetails$result2 = peopleDetails[result.url][peopleURL]) === null || _peopleDetails$result2 === void 0 ? void 0 : _peopleDetails$result2.name\n                  }, (_peopleDetails$result = peopleDetails[result.url][peopleURL]) === null || _peopleDetails$result === void 0 ? void 0 : _peopleDetails$result.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Films:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 24\n              }, this), filmsDetails[result.url] && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: result.films.map(filmURL => {\n                  var _filmsDetails$result$, _filmsDetails$result$2;\n                  return /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: filmsDetails,\n                    target: \"_blank\",\n                    rel: \"noreferrer\",\n                    children: (_filmsDetails$result$2 = filmsDetails[result.url][filmURL]) === null || _filmsDetails$result$2 === void 0 ? void 0 : _filmsDetails$result$2.title\n                  }, (_filmsDetails$result$ = filmsDetails[result.url][filmURL]) === null || _filmsDetails$result$ === void 0 ? void 0 : _filmsDetails$result$.title, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, result.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isFetch && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        children: \"Species of StarWars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), prevBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), nextBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeciesPage, \"aUxOJm+lumfvgBfMkwwEuHIXmJI=\");\n_c = SpeciesPage;\nexport default SpeciesPage;\nvar _c;\n$RefreshReg$(_c, \"SpeciesPage\");","map":{"version":3,"names":["React","useCallback","useState","SpeciesImage","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","SpeciesPage","_s","currentPage","setCurrentPage","species","setSpecies","nextPageUrl","setNextPageUrl","previousPageUrl","setPreviousPageUrl","selectedSpecies","setSelectedSpecies","nextBtn","setNextBtn","prevBtn","setPrevBtn","isFetch","setIsFetch","loading","setLoading","pageDisplay","setPageDisplay","speciesDisplay","setSpeciesDisplay","peopleDetails","setPeopleDetails","filmsDetails","setFilmsDetails","peopleButtonClickedMap","setPeopleButtonClickedMap","filmButtonClickedMap","setFilmButtonClickedMap","handleSpecies","url","response","fetch","data","json","next","previous","results","error","fetchPeopleDetails","peoplePromises","people","map","Promise","all","peopleDetailsMap","forEach","console","fetchFilmDetails","filmPromises","films","filmDetailsMap","film","handlePeopleButtonClick","handleFilmButtonClick","nextPageHandler","backPageHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","result","speciesInfo","find","name","src","speciesImgSrc","alt","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","created","edited","peopleURL","_peopleDetails$result","_peopleDetails$result2","href","target","rel","filmURL","_filmsDetails$result$","_filmsDetails$result$2","title","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Species/SpeciesPage.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport SpeciesImage from \"./SpeciesImage\";\r\n\r\nimport './SpeciesPage.css';\r\nimport Loader from './../../components/Loader/Loader';\r\n\r\nconst SpeciesPage = () => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [species, setSpecies] = useState([]);\r\n  const [nextPageUrl, setNextPageUrl] = useState(\r\n    \"https://swapi.dev/api/species/\"\r\n  );\r\n  const [previousPageUrl, setPreviousPageUrl] = useState(\r\n    \"https://swapi.dev/api/species/\"\r\n  );\r\n  const [selectedSpecies, setSelectedSpecies] = useState(null);\r\n  const [nextBtn, setNextBtn] = useState(false);\r\n  const [prevBtn, setPrevBtn] = useState(false);\r\n  const [isFetch, setIsFetch] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [pageDisplay, setPageDisplay] = useState(false);\r\n  const [speciesDisplay, setSpeciesDisplay] = useState(false);\r\n  const [peopleDetails, setPeopleDetails] = useState({});\r\n  const [filmsDetails, setFilmsDetails] = useState({});\r\n  const [peopleButtonClickedMap, setPeopleButtonClickedMap] = useState({});\r\n  const [filmButtonClickedMap, setFilmButtonClickedMap] = useState({});\r\n\r\n  const handleSpecies = useCallback(async (url) => {\r\n    try {\r\n      setLoading(true);\r\n      setIsFetch(false);\r\n      setSpeciesDisplay(false);\r\n      setPageDisplay(false);\r\n      setNextBtn(false);\r\n      setPrevBtn(false);\r\n\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      setNextBtn(!!data.next);\r\n      setPrevBtn(!!data.previous);\r\n      setSpeciesDisplay(true);\r\n      setPageDisplay(true);\r\n\r\n      setSpecies(data.results);\r\n      setNextPageUrl(data.next);\r\n      setPreviousPageUrl(data.previous);\r\n      setLoading(false);\r\n    } catch (error) {}\r\n  }, []);\r\n    \r\n  // fetch details for each button\r\n  const fetchPeopleDetails = async (species) => {\r\n\r\n    try{\r\n        setPeopleButtonClickedMap({...peopleButtonClickedMap, [species.url]: true});\r\n        setLoading(true);\r\n        const peoplePromises = species.people.map(async (url) => {\r\n            const response = await fetch(url);\r\n            return response.json();\r\n        });\r\n\r\n        const people = await Promise.all(peoplePromises);\r\n\r\n        const peopleDetailsMap = {};\r\n        people.forEach((people) => {\r\n          peopleDetailsMap[people.url] = people;\r\n          setLoading(false);\r\n        });\r\n\r\n        setPeopleDetails({\r\n            ...peopleDetailsMap,\r\n            [species.url]: peopleDetailsMap,\r\n        });\r\n\r\n    }catch(error){console.error(\"Error fetching people details:\", error);}\r\n  };\r\n\r\n  const fetchFilmDetails = async (species) => {\r\n\r\n    try{\r\n        setFilmButtonClickedMap({...filmButtonClickedMap, [species.url]: true});\r\n        setLoading(true);\r\n        const filmPromises = species.films.map(async (url) => {\r\n            const response = await fetch(url);\r\n            return response.json();\r\n        });\r\n\r\n        const films = await Promise.all(filmPromises);\r\n\r\n        const filmDetailsMap = {};\r\n        films.forEach((film) => {\r\n          filmDetailsMap[film.url] = film;\r\n          setLoading(false);\r\n        });\r\n\r\n        setFilmsDetails({\r\n            ...filmDetailsMap,\r\n            [species.url]: filmDetailsMap,\r\n        });\r\n\r\n    }catch(error){console.error(\"Error fetching film details:\", error);}\r\n  };\r\n\r\n     // button Click handlers\r\n     const handlePeopleButtonClick = async (species) => {\r\n      if (!peopleDetails[species.url]) {\r\n        await fetchPeopleDetails(species);\r\n      }\r\n  \r\n      setSelectedSpecies(species);\r\n    };\r\n\r\n    const handleFilmButtonClick = async (species) => {\r\n      if (!filmsDetails[species.url]) {\r\n        await fetchFilmDetails(species);\r\n      }\r\n  \r\n      setSelectedSpecies(species);\r\n    };\r\n\r\n\r\n  const nextPageHandler = () => {\r\n    if (nextPageUrl) {\r\n      handleSpecies(nextPageUrl);\r\n      setCurrentPage(currentPage+1);\r\n    }\r\n  };\r\n\r\n  const backPageHandler = () => {\r\n    if (previousPageUrl) {\r\n      handleSpecies(previousPageUrl);\r\n      setCurrentPage(currentPage-1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"species-container\">\r\n      {loading && <div className=\"loading-bar\"><Loader/></div>}\r\n      {pageDisplay && (<div>Page {currentPage} </div> )}\r\n\r\n      <div>\r\n        {prevBtn && (\r\n          <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {nextBtn && (\r\n          <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n    {speciesDisplay && (\r\n      <div className=\"species-grid\">\r\n        {species.map((result) => {\r\n          \r\n          const speciesInfo = SpeciesImage.find(\r\n            (species) => species.name === result.name\r\n          );\r\n\r\n          return (\r\n            <div key={result.name} className=\"species-result-container\">\r\n              <div className=\"species-items\">\r\n                <h2>{result.name}</h2>\r\n                <img\r\n                  src={speciesInfo ? speciesInfo.speciesImgSrc : \"\"}\r\n                  alt={result.name}\r\n                />\r\n                <p>Classification: {result.classification}</p>\r\n                <p>Designation: {result.designation}</p>\r\n                <p>Average height: {result.average_height}</p>\r\n                <p>Skin colors: {result.skin_colors}</p>\r\n                <p>Hair colors: {result.hair_colors}</p>\r\n                <p>Eye colors: {result.eye_colors}</p>\r\n                <p>Average lifespan: {result.average_lifespan}</p>\r\n                <p>Language: {result.language}</p>\r\n                <h5>Created: {result.created}</h5>\r\n                <h5>Edited: {result.edited}</h5>\r\n                <h5>URL: {result.url}</h5>\r\n\r\n                  {/*Buttons*/}\r\n                  {!peopleButtonClickedMap[result.url] && (\r\n                    <button onClick={() => handlePeopleButtonClick(result)}>\r\n                      Show People\r\n                    </button>\r\n                  )}\r\n\r\n                  {!filmButtonClickedMap[result.url] && (\r\n                    <button onClick={() => handleFilmButtonClick(result)}>\r\n                      Show Films\r\n                    </button>\r\n                  )}\r\n\r\n                  \r\n                  {/* display for details of each button*/}\r\n                  {selectedSpecies && selectedSpecies.url === result.url && (\r\n                    <>\r\n\r\n                      <h3>People:</h3>\r\n                      {peopleDetails[result.url] && (\r\n                        <div>\r\n                          {result.people.map((peopleURL) => (\r\n                            <a href={peopleDetails} target=\"_blank\" rel=\"noreferrer\"\r\n                              key={peopleDetails[result.url][peopleURL]?.name}\r\n                            >\r\n                            {peopleDetails[result.url][peopleURL]?.name}\r\n                            </a>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                      \r\n                       <h3>Films:</h3>\r\n                      {filmsDetails[result.url] && (\r\n                        <div>\r\n                          {result.films.map((filmURL) => (\r\n                            <a href={filmsDetails} target=\"_blank\" rel=\"noreferrer\"\r\n                              key={filmsDetails[result.url][filmURL]?.title}\r\n                            >\r\n                            {filmsDetails[result.url][filmURL]?.title}\r\n                            </a>\r\n                          ))}\r\n                        </div>\r\n                      )} \r\n\r\n                    </>\r\n                  )}\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      )}\r\n\r\n      <div>\r\n        {isFetch && (\r\n          <button onClick={nextPageHandler}>Species of StarWars</button>\r\n        )}\r\n        {prevBtn && (\r\n          <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {nextBtn && (\r\n          <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeciesPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}