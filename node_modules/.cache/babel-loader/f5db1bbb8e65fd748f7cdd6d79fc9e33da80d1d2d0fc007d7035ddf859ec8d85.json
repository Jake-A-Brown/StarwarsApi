{"ast":null,"code":"import _slicedToArray from\"C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import\"./Loader.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Loader=function Loader(){var _useState=useState(\".\"),_useState2=_slicedToArray(_useState,2),loadingDots=_useState2[0],setLoadingDots=_useState2[1];useEffect(function(){var intervalId=setInterval(function(){setLoadingDots(function(prevDots){if(prevDots===\"...\"){return\".\";}else{return prevDots+\".\";}});},500);return function(){return clearInterval(intervalId);};},[]);// Run this effect only once on component mount\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{id:\"loader\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ls-particles ls-part-1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ls-particles ls-part-2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ls-particles ls-part-3\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ls-particles ls-part-4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ls-particles ls-part-5\"}),/*#__PURE__*/_jsx(\"div\",{className:\"lightsaber ls-left ls-green\"}),/*#__PURE__*/_jsx(\"div\",{className:\"lightsaber ls-right ls-red\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"loadingdots\",children:[\"Loading\",loadingDots]})]})});};export default Loader;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Loader","_useState","_useState2","_slicedToArray","loadingDots","setLoadingDots","intervalId","setInterval","prevDots","clearInterval","children","id","className"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/components/Loader/Loader.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nconst Loader = () => {\r\n  const [loadingDots, setLoadingDots] = useState(\".\");\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setLoadingDots((prevDots) => {\r\n        if (prevDots === \"...\") {\r\n          return \".\";\r\n        } else {\r\n          return prevDots + \".\";\r\n        }\r\n      });\r\n    }, 500);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []); // Run this effect only once on component mount\r\n\r\n  return (\r\n    <div>\r\n    <div id=\"loader\">\r\n      <div className=\"ls-particles ls-part-1\"></div>\r\n      <div className=\"ls-particles ls-part-2\"></div>\r\n      <div className=\"ls-particles ls-part-3\"></div>\r\n      <div className=\"ls-particles ls-part-4\"></div>\r\n      <div className=\"ls-particles ls-part-5\"></div>\r\n      <div className=\"lightsaber ls-left ls-green\"></div>\r\n      <div className=\"lightsaber ls-right ls-red\"></div>\r\n      <div className=\"loadingdots\">Loading{loadingDots}</div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n"],"mappings":"yJAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEtB,GAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAA,CAAS,CACnB,IAAAC,SAAA,CAAsCN,QAAQ,CAAC,GAAG,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA5CG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAElCR,SAAS,CAAC,UAAM,CACd,GAAM,CAAAY,UAAU,CAAGC,WAAW,CAAC,UAAM,CACnCF,cAAc,CAAC,SAACG,QAAQ,CAAK,CAC3B,GAAIA,QAAQ,GAAK,KAAK,CAAE,CACtB,MAAO,GAAG,CACZ,CAAC,IAAM,CACL,MAAO,CAAAA,QAAQ,CAAG,GAAG,CACvB,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,GAAG,CAAC,CAEP,MAAO,kBAAM,CAAAC,aAAa,CAACH,UAAU,CAAC,GACxC,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACET,IAAA,QAAAa,QAAA,cACAX,KAAA,QAAKY,EAAE,CAAC,QAAQ,CAAAD,QAAA,eACdb,IAAA,QAAKe,SAAS,CAAC,wBAAwB,CAAM,CAAC,cAC9Cf,IAAA,QAAKe,SAAS,CAAC,wBAAwB,CAAM,CAAC,cAC9Cf,IAAA,QAAKe,SAAS,CAAC,wBAAwB,CAAM,CAAC,cAC9Cf,IAAA,QAAKe,SAAS,CAAC,wBAAwB,CAAM,CAAC,cAC9Cf,IAAA,QAAKe,SAAS,CAAC,wBAAwB,CAAM,CAAC,cAC9Cf,IAAA,QAAKe,SAAS,CAAC,6BAA6B,CAAM,CAAC,cACnDf,IAAA,QAAKe,SAAS,CAAC,4BAA4B,CAAM,CAAC,cAClDb,KAAA,QAAKa,SAAS,CAAC,aAAa,CAAAF,QAAA,EAAC,SAAO,CAACN,WAAW,EAAM,CAAC,EACpD,CAAC,CACD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAJ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}