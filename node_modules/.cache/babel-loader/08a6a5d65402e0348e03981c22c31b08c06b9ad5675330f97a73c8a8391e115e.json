{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loucr\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\StarWarsApi\\\\starwars\\\\src\\\\pages\\\\Starships\\\\StarshipsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\n// import { Link } from 'react-router-dom';\n\nimport \"./StarshipsPage.css\";\nimport Loader from './../../components/Loader/Loader';\nimport StarshipImage from \"./StarshipImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  const date = new Date(dateString);\n  return date.toLocaleString(); // Adjust this to your preferred date format\n};\n\nconst StarshipsPage = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0);\n  const [starships, setStarships] = useState([]);\n  const [nextPageUrl, setNextPageUrl] = useState(\"https://swapi.dev/api/starships/\");\n  const [previousPageUrl, setPreviousPageUrl] = useState(\"https://swapi.dev/api/starships/\");\n  const [selectedStarships, setSelectedStarships] = useState(null);\n  const [nextBtn, setNextBtn] = useState(false);\n  const [prevBtn, setPrevBtn] = useState(false);\n  const [isFetch, setIsFetch] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [starlinks, setStarLinks] = useState(false);\n  const [pageDisplay, setPageDisplay] = useState(false);\n  const [pilotDetails, setPilotDetails] = useState({});\n  const [filmDetails, setFilmDetails] = useState({});\n  const [pilotButtonClickedMap, setPilotButtonClickedMap] = useState({});\n  const [filmButtonClickedMap, setFilmButtonClickedMap] = useState({});\n  const handleStarships = useCallback(async url => {\n    try {\n      setPageDisplay(false);\n      setStarLinks(false);\n      setLoading(true);\n      setIsFetch(false);\n      setNextBtn(false);\n      setPrevBtn(false);\n      const response = await fetch(url);\n      const data = await response.json();\n      setNextBtn(!!data.next);\n      setPrevBtn(!!data.previous);\n      setPageDisplay(true);\n      setStarLinks(true);\n      setStarships(data.results);\n      setNextPageUrl(data.next);\n      setPreviousPageUrl(data.previous);\n      setLoading(false);\n    } catch (error) {}\n  }, []);\n\n  // fetch details for each button\n  const fetchPilotDetails = async starship => {\n    try {\n      setPilotButtonClickedMap({\n        ...pilotButtonClickedMap,\n        [starships.url]: true\n      });\n      setLoading(true);\n      const pilotPromises = starship.pilots.map(async url => {\n        const response = await fetch(url);\n        return response.json();\n      });\n      const pilots = await Promise.all(pilotPromises);\n      const pilotDetailsMap = {};\n      pilots.forEach(pilot => {\n        pilotDetailsMap[pilot.url] = pilot;\n        setLoading(false);\n      });\n      setPilotDetails({\n        ...pilotDetailsMap,\n        [starship.url]: pilotDetailsMap\n      });\n    } catch (error) {\n      console.error(\"Error fetching pilot details:\", error);\n    }\n  };\n\n  // button Click handlers\n  const handlePilotButtonClick = async starship => {\n    if (!pilotDetails[starship.url]) {\n      await fetchPilotDetails(starship);\n    }\n    setSelectedStarships(starship);\n  };\n  const nextPageHandler = () => {\n    if (nextPageUrl) {\n      handleStarships(nextPageUrl);\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const backPageHandler = () => {\n    if (previousPageUrl) {\n      handleStarships(previousPageUrl);\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"starship-container\",\n    children: [pageDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Page \", currentPage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prevBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), nextBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), isFetch && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextPageHandler,\n      children: \"Starships of StarWars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), starlinks && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: starships.map(result => {\n        const starshipInfo = StarshipImage.find(starship => starship.name === result.name);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"starship-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: starshipInfo ? starshipInfo.starshipImgSrc : \"\",\n            alt: result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), starshipInfo ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: starshipInfo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Description not available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pilots: \", result.pilots]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Films: \", result.films]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Created: \", formatDate(result.created)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Edited: \", formatDate(result.edited)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Url: \", result.url]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), !pilotButtonClickedMap[result.url] && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePilotButtonClick(result),\n            children: \"Show Pilots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this), selectedStarships && selectedStarships.url === result.url && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Pilots:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 23\n            }, this), pilotDetails[result.url] && result.species.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: result.pilots.map(pilotURL => {\n                var _pilotDetails$result$, _pilotDetails$result$2, _pilotDetails$result$3;\n                return /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: (_pilotDetails$result$ = pilotDetails[result.url][pilotURL]) === null || _pilotDetails$result$ === void 0 ? void 0 : _pilotDetails$result$.url,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: (_pilotDetails$result$3 = pilotDetails[result.url][pilotURL]) === null || _pilotDetails$result$3 === void 0 ? void 0 : _pilotDetails$result$3.name\n                }, (_pilotDetails$result$2 = pilotDetails[result.url][pilotURL]) === null || _pilotDetails$result$2 === void 0 ? void 0 : _pilotDetails$result$2.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 29\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No pilot information available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true)]\n        }, result.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prevBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backPageHandler,\n        disabled: !previousPageUrl,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), nextBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPageHandler,\n        disabled: !nextPageUrl,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(StarshipsPage, \"tN08yY5ao4s55C11lGEykYfJdOc=\");\n_c = StarshipsPage;\nexport default StarshipsPage;\nvar _c;\n$RefreshReg$(_c, \"StarshipsPage\");","map":{"version":3,"names":["React","useState","useCallback","Loader","StarshipImage","jsxDEV","_jsxDEV","Fragment","_Fragment","formatDate","dateString","date","Date","toLocaleString","StarshipsPage","_s","currentPage","setCurrentPage","starships","setStarships","nextPageUrl","setNextPageUrl","previousPageUrl","setPreviousPageUrl","selectedStarships","setSelectedStarships","nextBtn","setNextBtn","prevBtn","setPrevBtn","isFetch","setIsFetch","loading","setLoading","starlinks","setStarLinks","pageDisplay","setPageDisplay","pilotDetails","setPilotDetails","filmDetails","setFilmDetails","pilotButtonClickedMap","setPilotButtonClickedMap","filmButtonClickedMap","setFilmButtonClickedMap","handleStarships","url","response","fetch","data","json","next","previous","results","error","fetchPilotDetails","starship","pilotPromises","pilots","map","Promise","all","pilotDetailsMap","forEach","pilot","console","handlePilotButtonClick","nextPageHandler","backPageHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","result","starshipInfo","find","name","src","starshipImgSrc","alt","description","films","created","edited","species","length","pilotURL","_pilotDetails$result$","_pilotDetails$result$2","_pilotDetails$result$3","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/loucr/OneDrive/Desktop/React-Projects/StarWarsApi/starwars/src/pages/Starships/StarshipsPage.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\n\r\nimport \"./StarshipsPage.css\";\r\nimport Loader from './../../components/Loader/Loader';\r\nimport StarshipImage from \"./StarshipImage\";\r\n\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleString(); // Adjust this to your preferred date format\r\n};\r\n\r\nconst StarshipsPage = () => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [starships, setStarships] = useState([]);\r\n  const [nextPageUrl, setNextPageUrl] = useState(\r\n    \"https://swapi.dev/api/starships/\"\r\n  );\r\n  const [previousPageUrl, setPreviousPageUrl] = useState(\r\n    \"https://swapi.dev/api/starships/\"\r\n  );\r\n  const [selectedStarships, setSelectedStarships] = useState(null);\r\n  const [nextBtn, setNextBtn] = useState(false);\r\n  const [prevBtn, setPrevBtn] = useState(false);\r\n  const [isFetch, setIsFetch] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [starlinks, setStarLinks] = useState(false);\r\n  const [pageDisplay, setPageDisplay] = useState(false);\r\n  const [pilotDetails, setPilotDetails] = useState({});\r\n  const [filmDetails, setFilmDetails] = useState({});\r\n  const [pilotButtonClickedMap, setPilotButtonClickedMap] = useState({});\r\n  const [filmButtonClickedMap, setFilmButtonClickedMap] = useState({});\r\n\r\n  const handleStarships = useCallback(async (url) => {\r\n    try {\r\n      setPageDisplay(false);\r\n      setStarLinks(false);\r\n      setLoading(true);\r\n      setIsFetch(false);\r\n      setNextBtn(false);\r\n      setPrevBtn(false);\r\n\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      setNextBtn(!!data.next);\r\n      setPrevBtn(!!data.previous);\r\n      setPageDisplay(true);\r\n      setStarLinks(true);\r\n\r\n      setStarships(data.results);\r\n      setNextPageUrl(data.next);\r\n      setPreviousPageUrl(data.previous);\r\n      setLoading(false);\r\n    } catch (error) {}\r\n  }, []);\r\n\r\n    // fetch details for each button\r\n  const fetchPilotDetails = async (starship) => {\r\n\r\n    try{\r\n        setPilotButtonClickedMap({...pilotButtonClickedMap, [starships.url]: true});\r\n        setLoading(true);\r\n        const pilotPromises = starship.pilots.map(async (url) => {\r\n            const response = await fetch(url);\r\n            return response.json();\r\n        });\r\n\r\n        const pilots = await Promise.all(pilotPromises);\r\n\r\n        const pilotDetailsMap = {};\r\n        pilots.forEach((pilot) => {\r\n          pilotDetailsMap[pilot.url] = pilot;\r\n          setLoading(false);\r\n        });\r\n\r\n        setPilotDetails({\r\n            ...pilotDetailsMap,\r\n            [starship.url]: pilotDetailsMap,\r\n        });\r\n\r\n    }catch(error){console.error(\"Error fetching pilot details:\", error);}\r\n  };\r\n\r\n     // button Click handlers\r\n     const handlePilotButtonClick = async (starship) => {\r\n      if (!pilotDetails[starship.url]) {\r\n        await fetchPilotDetails(starship);\r\n      }\r\n  \r\n      setSelectedStarships(starship);\r\n    };\r\n\r\n  const nextPageHandler = () => {\r\n    if (nextPageUrl) {\r\n      handleStarships(nextPageUrl);\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const backPageHandler = () => {\r\n    if (previousPageUrl) {\r\n      handleStarships(previousPageUrl);\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"starship-container\">\r\n      {pageDisplay && <div>Page {currentPage} </div>}\r\n      {loading && <div className=\"loading-bar\"><Loader/></div>}\r\n      <div>\r\n        {prevBtn && (\r\n          <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {nextBtn && (\r\n          <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n      {isFetch && (\r\n        <button onClick={nextPageHandler}>Starships of StarWars</button>\r\n      )}\r\n\r\n      {starlinks && (\r\n        <div>\r\n          {starships.map((result) => {\r\n              const starshipInfo = StarshipImage.find(\r\n                (starship) => starship.name === result.name\r\n              );\r\n            return(\r\n            <div key={result.name} className=\"starship-links\">\r\n              <h5>{result.name}</h5>\r\n              <img\r\n                src={starshipInfo ? starshipInfo.starshipImgSrc : \"\"}\r\n                alt={result.name}\r\n              />\r\n                {starshipInfo ? (\r\n                  <p>{starshipInfo.description}</p>\r\n                ) : (\r\n                  <p>Description not available</p>\r\n                )}\r\n              <p>Pilots: {result.pilots}</p>\r\n              <p>Films: {result.films}</p>\r\n              <p>Created: {formatDate(result.created)}</p>\r\n              <p>Edited: {formatDate(result.edited)}</p>\r\n              <p>Url: {result.url}</p>\r\n              \r\n                  {/*Buttons*/}\r\n                  {!pilotButtonClickedMap[result.url] && (\r\n                    <button onClick={() => handlePilotButtonClick(result)}>\r\n                      Show Pilots\r\n                    </button>\r\n                  )}\r\n\r\n                  {/* display for details of each button*/}\r\n                  {selectedStarships && selectedStarships.url === result.url && (\r\n                    <>\r\n\r\n                      <h3>Pilots:</h3>\r\n                      {pilotDetails[result.url] && result.species.length > 0 ?  (\r\n                        <div>\r\n                          {result.pilots.map((pilotURL) => (\r\n                            <a href={pilotDetails[result.url][pilotURL]?.url} target=\"_blank\" rel=\"noreferrer\"\r\n                              key={pilotDetails[result.url][pilotURL]?.name}\r\n                            >\r\n                            {pilotDetails[result.url][pilotURL]?.name}\r\n                            </a>\r\n                          ))}\r\n                        </div>\r\n                      ):(<p>No pilot information available</p>)}\r\n                      \r\n                       {/* <h3>Films:</h3>\r\n                      {filmsDetails[result.url] && (\r\n                        <div>\r\n                          {result.films.map((filmURL) => (\r\n                            <a href={filmsDetails} target=\"_blank\" rel=\"noreferrer\"\r\n                              key={filmsDetails[result.url][filmURL]?.title}\r\n                            >\r\n                            {filmsDetails[result.url][filmURL]?.title}\r\n                            </a>\r\n                          ))}\r\n                        </div>\r\n                      )}  */}\r\n\r\n                    </>\r\n                  )}\r\n\r\n            </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        {prevBtn && (\r\n          <button onClick={backPageHandler} disabled={!previousPageUrl}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {nextBtn && (\r\n          <button onClick={nextPageHandler} disabled={!nextPageUrl}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StarshipsPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}